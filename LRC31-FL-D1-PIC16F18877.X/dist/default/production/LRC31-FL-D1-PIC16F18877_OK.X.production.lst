

Microchip Technology PIC PRO Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 25 16:17:43 2020

Microchip Technology Omniscient Code Generator v1.41 (PRO mode) build 201701250102
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	pa_nodes0,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.41
    23                           ; Generated 25/01/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F18877 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001C                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0110                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  018F                     	;# 
   156  0190                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0198                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  020C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0218                     	;# 
   187  0218                     	;# 
   188  0219                     	;# 
   189  021A                     	;# 
   190  021B                     	;# 
   191  021B                     	;# 
   192  021C                     	;# 
   193  021C                     	;# 
   194  021D                     	;# 
   195  021D                     	;# 
   196  021E                     	;# 
   197  021F                     	;# 
   198  028C                     	;# 
   199  028C                     	;# 
   200  028D                     	;# 
   201  028D                     	;# 
   202  028E                     	;# 
   203  028F                     	;# 
   204  0290                     	;# 
   205  0290                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0293                     	;# 
   211  0294                     	;# 
   212  0295                     	;# 
   213  0296                     	;# 
   214  0296                     	;# 
   215  0297                     	;# 
   216  0298                     	;# 
   217  0298                     	;# 
   218  0299                     	;# 
   219  0299                     	;# 
   220  029A                     	;# 
   221  029B                     	;# 
   222  029C                     	;# 
   223  029C                     	;# 
   224  029D                     	;# 
   225  030C                     	;# 
   226  030C                     	;# 
   227  030D                     	;# 
   228  030E                     	;# 
   229  030F                     	;# 
   230  0310                     	;# 
   231  0310                     	;# 
   232  0311                     	;# 
   233  0312                     	;# 
   234  0313                     	;# 
   235  0314                     	;# 
   236  0314                     	;# 
   237  0315                     	;# 
   238  0316                     	;# 
   239  0317                     	;# 
   240  0318                     	;# 
   241  0318                     	;# 
   242  0319                     	;# 
   243  031A                     	;# 
   244  031B                     	;# 
   245  031C                     	;# 
   246  031C                     	;# 
   247  031D                     	;# 
   248  031E                     	;# 
   249  031F                     	;# 
   250  038C                     	;# 
   251  038D                     	;# 
   252  038E                     	;# 
   253  0390                     	;# 
   254  0391                     	;# 
   255  0392                     	;# 
   256  040C                     	;# 
   257  040D                     	;# 
   258  040E                     	;# 
   259  040F                     	;# 
   260  0410                     	;# 
   261  0411                     	;# 
   262  0416                     	;# 
   263  0416                     	;# 
   264  0417                     	;# 
   265  0418                     	;# 
   266  0418                     	;# 
   267  0419                     	;# 
   268  041A                     	;# 
   269  041A                     	;# 
   270  041B                     	;# 
   271  041C                     	;# 
   272  041C                     	;# 
   273  041D                     	;# 
   274  041E                     	;# 
   275  041F                     	;# 
   276  048C                     	;# 
   277  048C                     	;# 
   278  048D                     	;# 
   279  048E                     	;# 
   280  048F                     	;# 
   281  048F                     	;# 
   282  0490                     	;# 
   283  0491                     	;# 
   284  0492                     	;# 
   285  0492                     	;# 
   286  0493                     	;# 
   287  0494                     	;# 
   288  0495                     	;# 
   289  0495                     	;# 
   290  0496                     	;# 
   291  0497                     	;# 
   292  0498                     	;# 
   293  0499                     	;# 
   294  049A                     	;# 
   295  049B                     	;# 
   296  049C                     	;# 
   297  049D                     	;# 
   298  050C                     	;# 
   299  050C                     	;# 
   300  050D                     	;# 
   301  050E                     	;# 
   302  050F                     	;# 
   303  050F                     	;# 
   304  0510                     	;# 
   305  0511                     	;# 
   306  0512                     	;# 
   307  0512                     	;# 
   308  0513                     	;# 
   309  0514                     	;# 
   310  0515                     	;# 
   311  0515                     	;# 
   312  0516                     	;# 
   313  0517                     	;# 
   314  0518                     	;# 
   315  0519                     	;# 
   316  051A                     	;# 
   317  051B                     	;# 
   318  051C                     	;# 
   319  051D                     	;# 
   320  058C                     	;# 
   321  058C                     	;# 
   322  058D                     	;# 
   323  058E                     	;# 
   324  058F                     	;# 
   325  058F                     	;# 
   326  0590                     	;# 
   327  0591                     	;# 
   328  0592                     	;# 
   329  0593                     	;# 
   330  060C                     	;# 
   331  060D                     	;# 
   332  060E                     	;# 
   333  060F                     	;# 
   334  0610                     	;# 
   335  0611                     	;# 
   336  0612                     	;# 
   337  0613                     	;# 
   338  0614                     	;# 
   339  0616                     	;# 
   340  0617                     	;# 
   341  0618                     	;# 
   342  0619                     	;# 
   343  061A                     	;# 
   344  061B                     	;# 
   345  061C                     	;# 
   346  061D                     	;# 
   347  061E                     	;# 
   348  068C                     	;# 
   349  068D                     	;# 
   350  068E                     	;# 
   351  068F                     	;# 
   352  0690                     	;# 
   353  0691                     	;# 
   354  0692                     	;# 
   355  0693                     	;# 
   356  0694                     	;# 
   357  070C                     	;# 
   358  070D                     	;# 
   359  070E                     	;# 
   360  070F                     	;# 
   361  0710                     	;# 
   362  0711                     	;# 
   363  0712                     	;# 
   364  0713                     	;# 
   365  0714                     	;# 
   366  0716                     	;# 
   367  0717                     	;# 
   368  0718                     	;# 
   369  0719                     	;# 
   370  071A                     	;# 
   371  071B                     	;# 
   372  071C                     	;# 
   373  071D                     	;# 
   374  071E                     	;# 
   375  0796                     	;# 
   376  0797                     	;# 
   377  0798                     	;# 
   378  0799                     	;# 
   379  079A                     	;# 
   380  079B                     	;# 
   381  080C                     	;# 
   382  080D                     	;# 
   383  080E                     	;# 
   384  080F                     	;# 
   385  0810                     	;# 
   386  0811                     	;# 
   387  0812                     	;# 
   388  0813                     	;# 
   389  0814                     	;# 
   390  081A                     	;# 
   391  081B                     	;# 
   392  081C                     	;# 
   393  081D                     	;# 
   394  081E                     	;# 
   395  081F                     	;# 
   396  088C                     	;# 
   397  088D                     	;# 
   398  088E                     	;# 
   399  088F                     	;# 
   400  0890                     	;# 
   401  0891                     	;# 
   402  0892                     	;# 
   403  0893                     	;# 
   404  0895                     	;# 
   405  0896                     	;# 
   406  0897                     	;# 
   407  0898                     	;# 
   408  0899                     	;# 
   409  089A                     	;# 
   410  089B                     	;# 
   411  090C                     	;# 
   412  090E                     	;# 
   413  090F                     	;# 
   414  091F                     	;# 
   415  098F                     	;# 
   416  098F                     	;# 
   417  0990                     	;# 
   418  0991                     	;# 
   419  0992                     	;# 
   420  0993                     	;# 
   421  0994                     	;# 
   422  0995                     	;# 
   423  0996                     	;# 
   424  0997                     	;# 
   425  1E0F                     	;# 
   426  1E10                     	;# 
   427  1E11                     	;# 
   428  1E12                     	;# 
   429  1E13                     	;# 
   430  1E14                     	;# 
   431  1E15                     	;# 
   432  1E16                     	;# 
   433  1E17                     	;# 
   434  1E18                     	;# 
   435  1E19                     	;# 
   436  1E1A                     	;# 
   437  1E1B                     	;# 
   438  1E1C                     	;# 
   439  1E1D                     	;# 
   440  1E1E                     	;# 
   441  1E1F                     	;# 
   442  1E20                     	;# 
   443  1E21                     	;# 
   444  1E22                     	;# 
   445  1E23                     	;# 
   446  1E24                     	;# 
   447  1E25                     	;# 
   448  1E26                     	;# 
   449  1E27                     	;# 
   450  1E28                     	;# 
   451  1E29                     	;# 
   452  1E2A                     	;# 
   453  1E2B                     	;# 
   454  1E2C                     	;# 
   455  1E2D                     	;# 
   456  1E2E                     	;# 
   457  1E2F                     	;# 
   458  1E30                     	;# 
   459  1E31                     	;# 
   460  1E32                     	;# 
   461  1E33                     	;# 
   462  1E34                     	;# 
   463  1E35                     	;# 
   464  1E36                     	;# 
   465  1E37                     	;# 
   466  1E8F                     	;# 
   467  1E90                     	;# 
   468  1E91                     	;# 
   469  1E92                     	;# 
   470  1E93                     	;# 
   471  1E94                     	;# 
   472  1E95                     	;# 
   473  1E96                     	;# 
   474  1E97                     	;# 
   475  1E9C                     	;# 
   476  1E9D                     	;# 
   477  1E9E                     	;# 
   478  1EA1                     	;# 
   479  1EA2                     	;# 
   480  1EA3                     	;# 
   481  1EA4                     	;# 
   482  1EA5                     	;# 
   483  1EA9                     	;# 
   484  1EAA                     	;# 
   485  1EAB                     	;# 
   486  1EAC                     	;# 
   487  1EB1                     	;# 
   488  1EB2                     	;# 
   489  1EB3                     	;# 
   490  1EB8                     	;# 
   491  1EB9                     	;# 
   492  1EBA                     	;# 
   493  1EBB                     	;# 
   494  1EBC                     	;# 
   495  1EBD                     	;# 
   496  1EBE                     	;# 
   497  1EC3                     	;# 
   498  1EC5                     	;# 
   499  1EC6                     	;# 
   500  1EC7                     	;# 
   501  1EC8                     	;# 
   502  1EC9                     	;# 
   503  1ECA                     	;# 
   504  1ECB                     	;# 
   505  1ECC                     	;# 
   506  1F10                     	;# 
   507  1F11                     	;# 
   508  1F12                     	;# 
   509  1F13                     	;# 
   510  1F14                     	;# 
   511  1F15                     	;# 
   512  1F16                     	;# 
   513  1F17                     	;# 
   514  1F18                     	;# 
   515  1F19                     	;# 
   516  1F1A                     	;# 
   517  1F1B                     	;# 
   518  1F1C                     	;# 
   519  1F1D                     	;# 
   520  1F1E                     	;# 
   521  1F1F                     	;# 
   522  1F20                     	;# 
   523  1F21                     	;# 
   524  1F22                     	;# 
   525  1F23                     	;# 
   526  1F24                     	;# 
   527  1F25                     	;# 
   528  1F26                     	;# 
   529  1F27                     	;# 
   530  1F28                     	;# 
   531  1F29                     	;# 
   532  1F2A                     	;# 
   533  1F2B                     	;# 
   534  1F2C                     	;# 
   535  1F2D                     	;# 
   536  1F2E                     	;# 
   537  1F2F                     	;# 
   538  1F30                     	;# 
   539  1F31                     	;# 
   540  1F32                     	;# 
   541  1F38                     	;# 
   542  1F39                     	;# 
   543  1F3A                     	;# 
   544  1F3B                     	;# 
   545  1F3C                     	;# 
   546  1F3D                     	;# 
   547  1F3E                     	;# 
   548  1F3F                     	;# 
   549  1F40                     	;# 
   550  1F41                     	;# 
   551  1F43                     	;# 
   552  1F44                     	;# 
   553  1F45                     	;# 
   554  1F46                     	;# 
   555  1F47                     	;# 
   556  1F48                     	;# 
   557  1F49                     	;# 
   558  1F4A                     	;# 
   559  1F4B                     	;# 
   560  1F4C                     	;# 
   561  1F4E                     	;# 
   562  1F4F                     	;# 
   563  1F50                     	;# 
   564  1F51                     	;# 
   565  1F52                     	;# 
   566  1F53                     	;# 
   567  1F54                     	;# 
   568  1F55                     	;# 
   569  1F56                     	;# 
   570  1F57                     	;# 
   571  1F59                     	;# 
   572  1F5A                     	;# 
   573  1F5B                     	;# 
   574  1F5C                     	;# 
   575  1F5D                     	;# 
   576  1F61                     	;# 
   577  1F62                     	;# 
   578  1F64                     	;# 
   579  1F65                     	;# 
   580  1F66                     	;# 
   581  1F67                     	;# 
   582  1F68                     	;# 
   583  1F69                     	;# 
   584  1F6A                     	;# 
   585  1F6B                     	;# 
   586  1F6C                     	;# 
   587  1F6D                     	;# 
   588  1FE4                     	;# 
   589  1FE5                     	;# 
   590  1FE6                     	;# 
   591  1FE7                     	;# 
   592  1FE8                     	;# 
   593  1FE9                     	;# 
   594  1FEA                     	;# 
   595  1FEB                     	;# 
   596  1FED                     	;# 
   597  1FEE                     	;# 
   598  1FEF                     	;# 
   599  0000                     	;# 
   600  0001                     	;# 
   601  0002                     	;# 
   602  0003                     	;# 
   603  0004                     	;# 
   604  0005                     	;# 
   605  0006                     	;# 
   606  0007                     	;# 
   607  0008                     	;# 
   608  0009                     	;# 
   609  000A                     	;# 
   610  000B                     	;# 
   611  000C                     	;# 
   612  000D                     	;# 
   613  000E                     	;# 
   614  000F                     	;# 
   615  0010                     	;# 
   616  0011                     	;# 
   617  0012                     	;# 
   618  0013                     	;# 
   619  0014                     	;# 
   620  0015                     	;# 
   621  0016                     	;# 
   622  0017                     	;# 
   623  0018                     	;# 
   624  0019                     	;# 
   625  001A                     	;# 
   626  001C                     	;# 
   627  001C                     	;# 
   628  001D                     	;# 
   629  001D                     	;# 
   630  001E                     	;# 
   631  001F                     	;# 
   632  008C                     	;# 
   633  008C                     	;# 
   634  008D                     	;# 
   635  008E                     	;# 
   636  008E                     	;# 
   637  008F                     	;# 
   638  0090                     	;# 
   639  0090                     	;# 
   640  0091                     	;# 
   641  0093                     	;# 
   642  0094                     	;# 
   643  0095                     	;# 
   644  0096                     	;# 
   645  0097                     	;# 
   646  0098                     	;# 
   647  0099                     	;# 
   648  009A                     	;# 
   649  009B                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009E                     	;# 
   653  010C                     	;# 
   654  010D                     	;# 
   655  010E                     	;# 
   656  010E                     	;# 
   657  010F                     	;# 
   658  0110                     	;# 
   659  0110                     	;# 
   660  0111                     	;# 
   661  0112                     	;# 
   662  0112                     	;# 
   663  0113                     	;# 
   664  0114                     	;# 
   665  0114                     	;# 
   666  0115                     	;# 
   667  0116                     	;# 
   668  0116                     	;# 
   669  0117                     	;# 
   670  0119                     	;# 
   671  0119                     	;# 
   672  0119                     	;# 
   673  011A                     	;# 
   674  011A                     	;# 
   675  011A                     	;# 
   676  011B                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011C                     	;# 
   682  011C                     	;# 
   683  011C                     	;# 
   684  011D                     	;# 
   685  011D                     	;# 
   686  011D                     	;# 
   687  011E                     	;# 
   688  011E                     	;# 
   689  011E                     	;# 
   690  011F                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  018C                     	;# 
   696  018D                     	;# 
   697  018E                     	;# 
   698  018F                     	;# 
   699  0190                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0196                     	;# 
   703  0197                     	;# 
   704  0198                     	;# 
   705  0199                     	;# 
   706  019A                     	;# 
   707  019B                     	;# 
   708  019C                     	;# 
   709  020C                     	;# 
   710  020C                     	;# 
   711  020D                     	;# 
   712  020E                     	;# 
   713  020F                     	;# 
   714  020F                     	;# 
   715  0210                     	;# 
   716  0210                     	;# 
   717  0211                     	;# 
   718  0211                     	;# 
   719  0212                     	;# 
   720  0212                     	;# 
   721  0213                     	;# 
   722  0214                     	;# 
   723  0215                     	;# 
   724  0215                     	;# 
   725  0216                     	;# 
   726  0216                     	;# 
   727  0217                     	;# 
   728  0217                     	;# 
   729  0218                     	;# 
   730  0218                     	;# 
   731  0219                     	;# 
   732  021A                     	;# 
   733  021B                     	;# 
   734  021B                     	;# 
   735  021C                     	;# 
   736  021C                     	;# 
   737  021D                     	;# 
   738  021D                     	;# 
   739  021E                     	;# 
   740  021F                     	;# 
   741  028C                     	;# 
   742  028C                     	;# 
   743  028D                     	;# 
   744  028D                     	;# 
   745  028E                     	;# 
   746  028F                     	;# 
   747  0290                     	;# 
   748  0290                     	;# 
   749  0291                     	;# 
   750  0292                     	;# 
   751  0292                     	;# 
   752  0293                     	;# 
   753  0293                     	;# 
   754  0294                     	;# 
   755  0295                     	;# 
   756  0296                     	;# 
   757  0296                     	;# 
   758  0297                     	;# 
   759  0298                     	;# 
   760  0298                     	;# 
   761  0299                     	;# 
   762  0299                     	;# 
   763  029A                     	;# 
   764  029B                     	;# 
   765  029C                     	;# 
   766  029C                     	;# 
   767  029D                     	;# 
   768  030C                     	;# 
   769  030C                     	;# 
   770  030D                     	;# 
   771  030E                     	;# 
   772  030F                     	;# 
   773  0310                     	;# 
   774  0310                     	;# 
   775  0311                     	;# 
   776  0312                     	;# 
   777  0313                     	;# 
   778  0314                     	;# 
   779  0314                     	;# 
   780  0315                     	;# 
   781  0316                     	;# 
   782  0317                     	;# 
   783  0318                     	;# 
   784  0318                     	;# 
   785  0319                     	;# 
   786  031A                     	;# 
   787  031B                     	;# 
   788  031C                     	;# 
   789  031C                     	;# 
   790  031D                     	;# 
   791  031E                     	;# 
   792  031F                     	;# 
   793  038C                     	;# 
   794  038D                     	;# 
   795  038E                     	;# 
   796  0390                     	;# 
   797  0391                     	;# 
   798  0392                     	;# 
   799  040C                     	;# 
   800  040D                     	;# 
   801  040E                     	;# 
   802  040F                     	;# 
   803  0410                     	;# 
   804  0411                     	;# 
   805  0416                     	;# 
   806  0416                     	;# 
   807  0417                     	;# 
   808  0418                     	;# 
   809  0418                     	;# 
   810  0419                     	;# 
   811  041A                     	;# 
   812  041A                     	;# 
   813  041B                     	;# 
   814  041C                     	;# 
   815  041C                     	;# 
   816  041D                     	;# 
   817  041E                     	;# 
   818  041F                     	;# 
   819  048C                     	;# 
   820  048C                     	;# 
   821  048D                     	;# 
   822  048E                     	;# 
   823  048F                     	;# 
   824  048F                     	;# 
   825  0490                     	;# 
   826  0491                     	;# 
   827  0492                     	;# 
   828  0492                     	;# 
   829  0493                     	;# 
   830  0494                     	;# 
   831  0495                     	;# 
   832  0495                     	;# 
   833  0496                     	;# 
   834  0497                     	;# 
   835  0498                     	;# 
   836  0499                     	;# 
   837  049A                     	;# 
   838  049B                     	;# 
   839  049C                     	;# 
   840  049D                     	;# 
   841  050C                     	;# 
   842  050C                     	;# 
   843  050D                     	;# 
   844  050E                     	;# 
   845  050F                     	;# 
   846  050F                     	;# 
   847  0510                     	;# 
   848  0511                     	;# 
   849  0512                     	;# 
   850  0512                     	;# 
   851  0513                     	;# 
   852  0514                     	;# 
   853  0515                     	;# 
   854  0515                     	;# 
   855  0516                     	;# 
   856  0517                     	;# 
   857  0518                     	;# 
   858  0519                     	;# 
   859  051A                     	;# 
   860  051B                     	;# 
   861  051C                     	;# 
   862  051D                     	;# 
   863  058C                     	;# 
   864  058C                     	;# 
   865  058D                     	;# 
   866  058E                     	;# 
   867  058F                     	;# 
   868  058F                     	;# 
   869  0590                     	;# 
   870  0591                     	;# 
   871  0592                     	;# 
   872  0593                     	;# 
   873  060C                     	;# 
   874  060D                     	;# 
   875  060E                     	;# 
   876  060F                     	;# 
   877  0610                     	;# 
   878  0611                     	;# 
   879  0612                     	;# 
   880  0613                     	;# 
   881  0614                     	;# 
   882  0616                     	;# 
   883  0617                     	;# 
   884  0618                     	;# 
   885  0619                     	;# 
   886  061A                     	;# 
   887  061B                     	;# 
   888  061C                     	;# 
   889  061D                     	;# 
   890  061E                     	;# 
   891  068C                     	;# 
   892  068D                     	;# 
   893  068E                     	;# 
   894  068F                     	;# 
   895  0690                     	;# 
   896  0691                     	;# 
   897  0692                     	;# 
   898  0693                     	;# 
   899  0694                     	;# 
   900  070C                     	;# 
   901  070D                     	;# 
   902  070E                     	;# 
   903  070F                     	;# 
   904  0710                     	;# 
   905  0711                     	;# 
   906  0712                     	;# 
   907  0713                     	;# 
   908  0714                     	;# 
   909  0716                     	;# 
   910  0717                     	;# 
   911  0718                     	;# 
   912  0719                     	;# 
   913  071A                     	;# 
   914  071B                     	;# 
   915  071C                     	;# 
   916  071D                     	;# 
   917  071E                     	;# 
   918  0796                     	;# 
   919  0797                     	;# 
   920  0798                     	;# 
   921  0799                     	;# 
   922  079A                     	;# 
   923  079B                     	;# 
   924  080C                     	;# 
   925  080D                     	;# 
   926  080E                     	;# 
   927  080F                     	;# 
   928  0810                     	;# 
   929  0811                     	;# 
   930  0812                     	;# 
   931  0813                     	;# 
   932  0814                     	;# 
   933  081A                     	;# 
   934  081B                     	;# 
   935  081C                     	;# 
   936  081D                     	;# 
   937  081E                     	;# 
   938  081F                     	;# 
   939  088C                     	;# 
   940  088D                     	;# 
   941  088E                     	;# 
   942  088F                     	;# 
   943  0890                     	;# 
   944  0891                     	;# 
   945  0892                     	;# 
   946  0893                     	;# 
   947  0895                     	;# 
   948  0896                     	;# 
   949  0897                     	;# 
   950  0898                     	;# 
   951  0899                     	;# 
   952  089A                     	;# 
   953  089B                     	;# 
   954  090C                     	;# 
   955  090E                     	;# 
   956  090F                     	;# 
   957  091F                     	;# 
   958  098F                     	;# 
   959  098F                     	;# 
   960  0990                     	;# 
   961  0991                     	;# 
   962  0992                     	;# 
   963  0993                     	;# 
   964  0994                     	;# 
   965  0995                     	;# 
   966  0996                     	;# 
   967  0997                     	;# 
   968  1E0F                     	;# 
   969  1E10                     	;# 
   970  1E11                     	;# 
   971  1E12                     	;# 
   972  1E13                     	;# 
   973  1E14                     	;# 
   974  1E15                     	;# 
   975  1E16                     	;# 
   976  1E17                     	;# 
   977  1E18                     	;# 
   978  1E19                     	;# 
   979  1E1A                     	;# 
   980  1E1B                     	;# 
   981  1E1C                     	;# 
   982  1E1D                     	;# 
   983  1E1E                     	;# 
   984  1E1F                     	;# 
   985  1E20                     	;# 
   986  1E21                     	;# 
   987  1E22                     	;# 
   988  1E23                     	;# 
   989  1E24                     	;# 
   990  1E25                     	;# 
   991  1E26                     	;# 
   992  1E27                     	;# 
   993  1E28                     	;# 
   994  1E29                     	;# 
   995  1E2A                     	;# 
   996  1E2B                     	;# 
   997  1E2C                     	;# 
   998  1E2D                     	;# 
   999  1E2E                     	;# 
  1000  1E2F                     	;# 
  1001  1E30                     	;# 
  1002  1E31                     	;# 
  1003  1E32                     	;# 
  1004  1E33                     	;# 
  1005  1E34                     	;# 
  1006  1E35                     	;# 
  1007  1E36                     	;# 
  1008  1E37                     	;# 
  1009  1E8F                     	;# 
  1010  1E90                     	;# 
  1011  1E91                     	;# 
  1012  1E92                     	;# 
  1013  1E93                     	;# 
  1014  1E94                     	;# 
  1015  1E95                     	;# 
  1016  1E96                     	;# 
  1017  1E97                     	;# 
  1018  1E9C                     	;# 
  1019  1E9D                     	;# 
  1020  1E9E                     	;# 
  1021  1EA1                     	;# 
  1022  1EA2                     	;# 
  1023  1EA3                     	;# 
  1024  1EA4                     	;# 
  1025  1EA5                     	;# 
  1026  1EA9                     	;# 
  1027  1EAA                     	;# 
  1028  1EAB                     	;# 
  1029  1EAC                     	;# 
  1030  1EB1                     	;# 
  1031  1EB2                     	;# 
  1032  1EB3                     	;# 
  1033  1EB8                     	;# 
  1034  1EB9                     	;# 
  1035  1EBA                     	;# 
  1036  1EBB                     	;# 
  1037  1EBC                     	;# 
  1038  1EBD                     	;# 
  1039  1EBE                     	;# 
  1040  1EC3                     	;# 
  1041  1EC5                     	;# 
  1042  1EC6                     	;# 
  1043  1EC7                     	;# 
  1044  1EC8                     	;# 
  1045  1EC9                     	;# 
  1046  1ECA                     	;# 
  1047  1ECB                     	;# 
  1048  1ECC                     	;# 
  1049  1F10                     	;# 
  1050  1F11                     	;# 
  1051  1F12                     	;# 
  1052  1F13                     	;# 
  1053  1F14                     	;# 
  1054  1F15                     	;# 
  1055  1F16                     	;# 
  1056  1F17                     	;# 
  1057  1F18                     	;# 
  1058  1F19                     	;# 
  1059  1F1A                     	;# 
  1060  1F1B                     	;# 
  1061  1F1C                     	;# 
  1062  1F1D                     	;# 
  1063  1F1E                     	;# 
  1064  1F1F                     	;# 
  1065  1F20                     	;# 
  1066  1F21                     	;# 
  1067  1F22                     	;# 
  1068  1F23                     	;# 
  1069  1F24                     	;# 
  1070  1F25                     	;# 
  1071  1F26                     	;# 
  1072  1F27                     	;# 
  1073  1F28                     	;# 
  1074  1F29                     	;# 
  1075  1F2A                     	;# 
  1076  1F2B                     	;# 
  1077  1F2C                     	;# 
  1078  1F2D                     	;# 
  1079  1F2E                     	;# 
  1080  1F2F                     	;# 
  1081  1F30                     	;# 
  1082  1F31                     	;# 
  1083  1F32                     	;# 
  1084  1F38                     	;# 
  1085  1F39                     	;# 
  1086  1F3A                     	;# 
  1087  1F3B                     	;# 
  1088  1F3C                     	;# 
  1089  1F3D                     	;# 
  1090  1F3E                     	;# 
  1091  1F3F                     	;# 
  1092  1F40                     	;# 
  1093  1F41                     	;# 
  1094  1F43                     	;# 
  1095  1F44                     	;# 
  1096  1F45                     	;# 
  1097  1F46                     	;# 
  1098  1F47                     	;# 
  1099  1F48                     	;# 
  1100  1F49                     	;# 
  1101  1F4A                     	;# 
  1102  1F4B                     	;# 
  1103  1F4C                     	;# 
  1104  1F4E                     	;# 
  1105  1F4F                     	;# 
  1106  1F50                     	;# 
  1107  1F51                     	;# 
  1108  1F52                     	;# 
  1109  1F53                     	;# 
  1110  1F54                     	;# 
  1111  1F55                     	;# 
  1112  1F56                     	;# 
  1113  1F57                     	;# 
  1114  1F59                     	;# 
  1115  1F5A                     	;# 
  1116  1F5B                     	;# 
  1117  1F5C                     	;# 
  1118  1F5D                     	;# 
  1119  1F61                     	;# 
  1120  1F62                     	;# 
  1121  1F64                     	;# 
  1122  1F65                     	;# 
  1123  1F66                     	;# 
  1124  1F67                     	;# 
  1125  1F68                     	;# 
  1126  1F69                     	;# 
  1127  1F6A                     	;# 
  1128  1F6B                     	;# 
  1129  1F6C                     	;# 
  1130  1F6D                     	;# 
  1131  1FE4                     	;# 
  1132  1FE5                     	;# 
  1133  1FE6                     	;# 
  1134  1FE7                     	;# 
  1135  1FE8                     	;# 
  1136  1FE9                     	;# 
  1137  1FEA                     	;# 
  1138  1FEB                     	;# 
  1139  1FED                     	;# 
  1140  1FEE                     	;# 
  1141  1FEF                     	;# 
  1142  0000                     	;# 
  1143  0001                     	;# 
  1144  0002                     	;# 
  1145  0003                     	;# 
  1146  0004                     	;# 
  1147  0005                     	;# 
  1148  0006                     	;# 
  1149  0007                     	;# 
  1150  0008                     	;# 
  1151  0009                     	;# 
  1152  000A                     	;# 
  1153  000B                     	;# 
  1154  000C                     	;# 
  1155  000D                     	;# 
  1156  000E                     	;# 
  1157  000F                     	;# 
  1158  0010                     	;# 
  1159  0011                     	;# 
  1160  0012                     	;# 
  1161  0013                     	;# 
  1162  0014                     	;# 
  1163  0015                     	;# 
  1164  0016                     	;# 
  1165  0017                     	;# 
  1166  0018                     	;# 
  1167  0019                     	;# 
  1168  001A                     	;# 
  1169  001C                     	;# 
  1170  001C                     	;# 
  1171  001D                     	;# 
  1172  001D                     	;# 
  1173  001E                     	;# 
  1174  001F                     	;# 
  1175  008C                     	;# 
  1176  008C                     	;# 
  1177  008D                     	;# 
  1178  008E                     	;# 
  1179  008E                     	;# 
  1180  008F                     	;# 
  1181  0090                     	;# 
  1182  0090                     	;# 
  1183  0091                     	;# 
  1184  0093                     	;# 
  1185  0094                     	;# 
  1186  0095                     	;# 
  1187  0096                     	;# 
  1188  0097                     	;# 
  1189  0098                     	;# 
  1190  0099                     	;# 
  1191  009A                     	;# 
  1192  009B                     	;# 
  1193  009C                     	;# 
  1194  009D                     	;# 
  1195  009E                     	;# 
  1196  010C                     	;# 
  1197  010D                     	;# 
  1198  010E                     	;# 
  1199  010E                     	;# 
  1200  010F                     	;# 
  1201  0110                     	;# 
  1202  0110                     	;# 
  1203  0111                     	;# 
  1204  0112                     	;# 
  1205  0112                     	;# 
  1206  0113                     	;# 
  1207  0114                     	;# 
  1208  0114                     	;# 
  1209  0115                     	;# 
  1210  0116                     	;# 
  1211  0116                     	;# 
  1212  0117                     	;# 
  1213  0119                     	;# 
  1214  0119                     	;# 
  1215  0119                     	;# 
  1216  011A                     	;# 
  1217  011A                     	;# 
  1218  011A                     	;# 
  1219  011B                     	;# 
  1220  011B                     	;# 
  1221  011B                     	;# 
  1222  011B                     	;# 
  1223  011B                     	;# 
  1224  011C                     	;# 
  1225  011C                     	;# 
  1226  011C                     	;# 
  1227  011D                     	;# 
  1228  011D                     	;# 
  1229  011D                     	;# 
  1230  011E                     	;# 
  1231  011E                     	;# 
  1232  011E                     	;# 
  1233  011F                     	;# 
  1234  011F                     	;# 
  1235  011F                     	;# 
  1236  011F                     	;# 
  1237  011F                     	;# 
  1238  018C                     	;# 
  1239  018D                     	;# 
  1240  018E                     	;# 
  1241  018F                     	;# 
  1242  0190                     	;# 
  1243  0191                     	;# 
  1244  0192                     	;# 
  1245  0196                     	;# 
  1246  0197                     	;# 
  1247  0198                     	;# 
  1248  0199                     	;# 
  1249  019A                     	;# 
  1250  019B                     	;# 
  1251  019C                     	;# 
  1252  020C                     	;# 
  1253  020C                     	;# 
  1254  020D                     	;# 
  1255  020E                     	;# 
  1256  020F                     	;# 
  1257  020F                     	;# 
  1258  0210                     	;# 
  1259  0210                     	;# 
  1260  0211                     	;# 
  1261  0211                     	;# 
  1262  0212                     	;# 
  1263  0212                     	;# 
  1264  0213                     	;# 
  1265  0214                     	;# 
  1266  0215                     	;# 
  1267  0215                     	;# 
  1268  0216                     	;# 
  1269  0216                     	;# 
  1270  0217                     	;# 
  1271  0217                     	;# 
  1272  0218                     	;# 
  1273  0218                     	;# 
  1274  0219                     	;# 
  1275  021A                     	;# 
  1276  021B                     	;# 
  1277  021B                     	;# 
  1278  021C                     	;# 
  1279  021C                     	;# 
  1280  021D                     	;# 
  1281  021D                     	;# 
  1282  021E                     	;# 
  1283  021F                     	;# 
  1284  028C                     	;# 
  1285  028C                     	;# 
  1286  028D                     	;# 
  1287  028D                     	;# 
  1288  028E                     	;# 
  1289  028F                     	;# 
  1290  0290                     	;# 
  1291  0290                     	;# 
  1292  0291                     	;# 
  1293  0292                     	;# 
  1294  0292                     	;# 
  1295  0293                     	;# 
  1296  0293                     	;# 
  1297  0294                     	;# 
  1298  0295                     	;# 
  1299  0296                     	;# 
  1300  0296                     	;# 
  1301  0297                     	;# 
  1302  0298                     	;# 
  1303  0298                     	;# 
  1304  0299                     	;# 
  1305  0299                     	;# 
  1306  029A                     	;# 
  1307  029B                     	;# 
  1308  029C                     	;# 
  1309  029C                     	;# 
  1310  029D                     	;# 
  1311  030C                     	;# 
  1312  030C                     	;# 
  1313  030D                     	;# 
  1314  030E                     	;# 
  1315  030F                     	;# 
  1316  0310                     	;# 
  1317  0310                     	;# 
  1318  0311                     	;# 
  1319  0312                     	;# 
  1320  0313                     	;# 
  1321  0314                     	;# 
  1322  0314                     	;# 
  1323  0315                     	;# 
  1324  0316                     	;# 
  1325  0317                     	;# 
  1326  0318                     	;# 
  1327  0318                     	;# 
  1328  0319                     	;# 
  1329  031A                     	;# 
  1330  031B                     	;# 
  1331  031C                     	;# 
  1332  031C                     	;# 
  1333  031D                     	;# 
  1334  031E                     	;# 
  1335  031F                     	;# 
  1336  038C                     	;# 
  1337  038D                     	;# 
  1338  038E                     	;# 
  1339  0390                     	;# 
  1340  0391                     	;# 
  1341  0392                     	;# 
  1342  040C                     	;# 
  1343  040D                     	;# 
  1344  040E                     	;# 
  1345  040F                     	;# 
  1346  0410                     	;# 
  1347  0411                     	;# 
  1348  0416                     	;# 
  1349  0416                     	;# 
  1350  0417                     	;# 
  1351  0418                     	;# 
  1352  0418                     	;# 
  1353  0419                     	;# 
  1354  041A                     	;# 
  1355  041A                     	;# 
  1356  041B                     	;# 
  1357  041C                     	;# 
  1358  041C                     	;# 
  1359  041D                     	;# 
  1360  041E                     	;# 
  1361  041F                     	;# 
  1362  048C                     	;# 
  1363  048C                     	;# 
  1364  048D                     	;# 
  1365  048E                     	;# 
  1366  048F                     	;# 
  1367  048F                     	;# 
  1368  0490                     	;# 
  1369  0491                     	;# 
  1370  0492                     	;# 
  1371  0492                     	;# 
  1372  0493                     	;# 
  1373  0494                     	;# 
  1374  0495                     	;# 
  1375  0495                     	;# 
  1376  0496                     	;# 
  1377  0497                     	;# 
  1378  0498                     	;# 
  1379  0499                     	;# 
  1380  049A                     	;# 
  1381  049B                     	;# 
  1382  049C                     	;# 
  1383  049D                     	;# 
  1384  050C                     	;# 
  1385  050C                     	;# 
  1386  050D                     	;# 
  1387  050E                     	;# 
  1388  050F                     	;# 
  1389  050F                     	;# 
  1390  0510                     	;# 
  1391  0511                     	;# 
  1392  0512                     	;# 
  1393  0512                     	;# 
  1394  0513                     	;# 
  1395  0514                     	;# 
  1396  0515                     	;# 
  1397  0515                     	;# 
  1398  0516                     	;# 
  1399  0517                     	;# 
  1400  0518                     	;# 
  1401  0519                     	;# 
  1402  051A                     	;# 
  1403  051B                     	;# 
  1404  051C                     	;# 
  1405  051D                     	;# 
  1406  058C                     	;# 
  1407  058C                     	;# 
  1408  058D                     	;# 
  1409  058E                     	;# 
  1410  058F                     	;# 
  1411  058F                     	;# 
  1412  0590                     	;# 
  1413  0591                     	;# 
  1414  0592                     	;# 
  1415  0593                     	;# 
  1416  060C                     	;# 
  1417  060D                     	;# 
  1418  060E                     	;# 
  1419  060F                     	;# 
  1420  0610                     	;# 
  1421  0611                     	;# 
  1422  0612                     	;# 
  1423  0613                     	;# 
  1424  0614                     	;# 
  1425  0616                     	;# 
  1426  0617                     	;# 
  1427  0618                     	;# 
  1428  0619                     	;# 
  1429  061A                     	;# 
  1430  061B                     	;# 
  1431  061C                     	;# 
  1432  061D                     	;# 
  1433  061E                     	;# 
  1434  068C                     	;# 
  1435  068D                     	;# 
  1436  068E                     	;# 
  1437  068F                     	;# 
  1438  0690                     	;# 
  1439  0691                     	;# 
  1440  0692                     	;# 
  1441  0693                     	;# 
  1442  0694                     	;# 
  1443  070C                     	;# 
  1444  070D                     	;# 
  1445  070E                     	;# 
  1446  070F                     	;# 
  1447  0710                     	;# 
  1448  0711                     	;# 
  1449  0712                     	;# 
  1450  0713                     	;# 
  1451  0714                     	;# 
  1452  0716                     	;# 
  1453  0717                     	;# 
  1454  0718                     	;# 
  1455  0719                     	;# 
  1456  071A                     	;# 
  1457  071B                     	;# 
  1458  071C                     	;# 
  1459  071D                     	;# 
  1460  071E                     	;# 
  1461  0796                     	;# 
  1462  0797                     	;# 
  1463  0798                     	;# 
  1464  0799                     	;# 
  1465  079A                     	;# 
  1466  079B                     	;# 
  1467  080C                     	;# 
  1468  080D                     	;# 
  1469  080E                     	;# 
  1470  080F                     	;# 
  1471  0810                     	;# 
  1472  0811                     	;# 
  1473  0812                     	;# 
  1474  0813                     	;# 
  1475  0814                     	;# 
  1476  081A                     	;# 
  1477  081B                     	;# 
  1478  081C                     	;# 
  1479  081D                     	;# 
  1480  081E                     	;# 
  1481  081F                     	;# 
  1482  088C                     	;# 
  1483  088D                     	;# 
  1484  088E                     	;# 
  1485  088F                     	;# 
  1486  0890                     	;# 
  1487  0891                     	;# 
  1488  0892                     	;# 
  1489  0893                     	;# 
  1490  0895                     	;# 
  1491  0896                     	;# 
  1492  0897                     	;# 
  1493  0898                     	;# 
  1494  0899                     	;# 
  1495  089A                     	;# 
  1496  089B                     	;# 
  1497  090C                     	;# 
  1498  090E                     	;# 
  1499  090F                     	;# 
  1500  091F                     	;# 
  1501  098F                     	;# 
  1502  098F                     	;# 
  1503  0990                     	;# 
  1504  0991                     	;# 
  1505  0992                     	;# 
  1506  0993                     	;# 
  1507  0994                     	;# 
  1508  0995                     	;# 
  1509  0996                     	;# 
  1510  0997                     	;# 
  1511  1E0F                     	;# 
  1512  1E10                     	;# 
  1513  1E11                     	;# 
  1514  1E12                     	;# 
  1515  1E13                     	;# 
  1516  1E14                     	;# 
  1517  1E15                     	;# 
  1518  1E16                     	;# 
  1519  1E17                     	;# 
  1520  1E18                     	;# 
  1521  1E19                     	;# 
  1522  1E1A                     	;# 
  1523  1E1B                     	;# 
  1524  1E1C                     	;# 
  1525  1E1D                     	;# 
  1526  1E1E                     	;# 
  1527  1E1F                     	;# 
  1528  1E20                     	;# 
  1529  1E21                     	;# 
  1530  1E22                     	;# 
  1531  1E23                     	;# 
  1532  1E24                     	;# 
  1533  1E25                     	;# 
  1534  1E26                     	;# 
  1535  1E27                     	;# 
  1536  1E28                     	;# 
  1537  1E29                     	;# 
  1538  1E2A                     	;# 
  1539  1E2B                     	;# 
  1540  1E2C                     	;# 
  1541  1E2D                     	;# 
  1542  1E2E                     	;# 
  1543  1E2F                     	;# 
  1544  1E30                     	;# 
  1545  1E31                     	;# 
  1546  1E32                     	;# 
  1547  1E33                     	;# 
  1548  1E34                     	;# 
  1549  1E35                     	;# 
  1550  1E36                     	;# 
  1551  1E37                     	;# 
  1552  1E8F                     	;# 
  1553  1E90                     	;# 
  1554  1E91                     	;# 
  1555  1E92                     	;# 
  1556  1E93                     	;# 
  1557  1E94                     	;# 
  1558  1E95                     	;# 
  1559  1E96                     	;# 
  1560  1E97                     	;# 
  1561  1E9C                     	;# 
  1562  1E9D                     	;# 
  1563  1E9E                     	;# 
  1564  1EA1                     	;# 
  1565  1EA2                     	;# 
  1566  1EA3                     	;# 
  1567  1EA4                     	;# 
  1568  1EA5                     	;# 
  1569  1EA9                     	;# 
  1570  1EAA                     	;# 
  1571  1EAB                     	;# 
  1572  1EAC                     	;# 
  1573  1EB1                     	;# 
  1574  1EB2                     	;# 
  1575  1EB3                     	;# 
  1576  1EB8                     	;# 
  1577  1EB9                     	;# 
  1578  1EBA                     	;# 
  1579  1EBB                     	;# 
  1580  1EBC                     	;# 
  1581  1EBD                     	;# 
  1582  1EBE                     	;# 
  1583  1EC3                     	;# 
  1584  1EC5                     	;# 
  1585  1EC6                     	;# 
  1586  1EC7                     	;# 
  1587  1EC8                     	;# 
  1588  1EC9                     	;# 
  1589  1ECA                     	;# 
  1590  1ECB                     	;# 
  1591  1ECC                     	;# 
  1592  1F10                     	;# 
  1593  1F11                     	;# 
  1594  1F12                     	;# 
  1595  1F13                     	;# 
  1596  1F14                     	;# 
  1597  1F15                     	;# 
  1598  1F16                     	;# 
  1599  1F17                     	;# 
  1600  1F18                     	;# 
  1601  1F19                     	;# 
  1602  1F1A                     	;# 
  1603  1F1B                     	;# 
  1604  1F1C                     	;# 
  1605  1F1D                     	;# 
  1606  1F1E                     	;# 
  1607  1F1F                     	;# 
  1608  1F20                     	;# 
  1609  1F21                     	;# 
  1610  1F22                     	;# 
  1611  1F23                     	;# 
  1612  1F24                     	;# 
  1613  1F25                     	;# 
  1614  1F26                     	;# 
  1615  1F27                     	;# 
  1616  1F28                     	;# 
  1617  1F29                     	;# 
  1618  1F2A                     	;# 
  1619  1F2B                     	;# 
  1620  1F2C                     	;# 
  1621  1F2D                     	;# 
  1622  1F2E                     	;# 
  1623  1F2F                     	;# 
  1624  1F30                     	;# 
  1625  1F31                     	;# 
  1626  1F32                     	;# 
  1627  1F38                     	;# 
  1628  1F39                     	;# 
  1629  1F3A                     	;# 
  1630  1F3B                     	;# 
  1631  1F3C                     	;# 
  1632  1F3D                     	;# 
  1633  1F3E                     	;# 
  1634  1F3F                     	;# 
  1635  1F40                     	;# 
  1636  1F41                     	;# 
  1637  1F43                     	;# 
  1638  1F44                     	;# 
  1639  1F45                     	;# 
  1640  1F46                     	;# 
  1641  1F47                     	;# 
  1642  1F48                     	;# 
  1643  1F49                     	;# 
  1644  1F4A                     	;# 
  1645  1F4B                     	;# 
  1646  1F4C                     	;# 
  1647  1F4E                     	;# 
  1648  1F4F                     	;# 
  1649  1F50                     	;# 
  1650  1F51                     	;# 
  1651  1F52                     	;# 
  1652  1F53                     	;# 
  1653  1F54                     	;# 
  1654  1F55                     	;# 
  1655  1F56                     	;# 
  1656  1F57                     	;# 
  1657  1F59                     	;# 
  1658  1F5A                     	;# 
  1659  1F5B                     	;# 
  1660  1F5C                     	;# 
  1661  1F5D                     	;# 
  1662  1F61                     	;# 
  1663  1F62                     	;# 
  1664  1F64                     	;# 
  1665  1F65                     	;# 
  1666  1F66                     	;# 
  1667  1F67                     	;# 
  1668  1F68                     	;# 
  1669  1F69                     	;# 
  1670  1F6A                     	;# 
  1671  1F6B                     	;# 
  1672  1F6C                     	;# 
  1673  1F6D                     	;# 
  1674  1FE4                     	;# 
  1675  1FE5                     	;# 
  1676  1FE6                     	;# 
  1677  1FE7                     	;# 
  1678  1FE8                     	;# 
  1679  1FE9                     	;# 
  1680  1FEA                     	;# 
  1681  1FEB                     	;# 
  1682  1FED                     	;# 
  1683  1FEE                     	;# 
  1684  1FEF                     	;# 
  1685  0000                     	;# 
  1686  0001                     	;# 
  1687  0002                     	;# 
  1688  0003                     	;# 
  1689  0004                     	;# 
  1690  0005                     	;# 
  1691  0006                     	;# 
  1692  0007                     	;# 
  1693  0008                     	;# 
  1694  0009                     	;# 
  1695  000A                     	;# 
  1696  000B                     	;# 
  1697  000C                     	;# 
  1698  000D                     	;# 
  1699  000E                     	;# 
  1700  000F                     	;# 
  1701  0010                     	;# 
  1702  0011                     	;# 
  1703  0012                     	;# 
  1704  0013                     	;# 
  1705  0014                     	;# 
  1706  0015                     	;# 
  1707  0016                     	;# 
  1708  0017                     	;# 
  1709  0018                     	;# 
  1710  0019                     	;# 
  1711  001A                     	;# 
  1712  001C                     	;# 
  1713  001C                     	;# 
  1714  001D                     	;# 
  1715  001D                     	;# 
  1716  001E                     	;# 
  1717  001F                     	;# 
  1718  008C                     	;# 
  1719  008C                     	;# 
  1720  008D                     	;# 
  1721  008E                     	;# 
  1722  008E                     	;# 
  1723  008F                     	;# 
  1724  0090                     	;# 
  1725  0090                     	;# 
  1726  0091                     	;# 
  1727  0093                     	;# 
  1728  0094                     	;# 
  1729  0095                     	;# 
  1730  0096                     	;# 
  1731  0097                     	;# 
  1732  0098                     	;# 
  1733  0099                     	;# 
  1734  009A                     	;# 
  1735  009B                     	;# 
  1736  009C                     	;# 
  1737  009D                     	;# 
  1738  009E                     	;# 
  1739  010C                     	;# 
  1740  010D                     	;# 
  1741  010E                     	;# 
  1742  010E                     	;# 
  1743  010F                     	;# 
  1744  0110                     	;# 
  1745  0110                     	;# 
  1746  0111                     	;# 
  1747  0112                     	;# 
  1748  0112                     	;# 
  1749  0113                     	;# 
  1750  0114                     	;# 
  1751  0114                     	;# 
  1752  0115                     	;# 
  1753  0116                     	;# 
  1754  0116                     	;# 
  1755  0117                     	;# 
  1756  0119                     	;# 
  1757  0119                     	;# 
  1758  0119                     	;# 
  1759  011A                     	;# 
  1760  011A                     	;# 
  1761  011A                     	;# 
  1762  011B                     	;# 
  1763  011B                     	;# 
  1764  011B                     	;# 
  1765  011B                     	;# 
  1766  011B                     	;# 
  1767  011C                     	;# 
  1768  011C                     	;# 
  1769  011C                     	;# 
  1770  011D                     	;# 
  1771  011D                     	;# 
  1772  011D                     	;# 
  1773  011E                     	;# 
  1774  011E                     	;# 
  1775  011E                     	;# 
  1776  011F                     	;# 
  1777  011F                     	;# 
  1778  011F                     	;# 
  1779  011F                     	;# 
  1780  011F                     	;# 
  1781  018C                     	;# 
  1782  018D                     	;# 
  1783  018E                     	;# 
  1784  018F                     	;# 
  1785  0190                     	;# 
  1786  0191                     	;# 
  1787  0192                     	;# 
  1788  0196                     	;# 
  1789  0197                     	;# 
  1790  0198                     	;# 
  1791  0199                     	;# 
  1792  019A                     	;# 
  1793  019B                     	;# 
  1794  019C                     	;# 
  1795  020C                     	;# 
  1796  020C                     	;# 
  1797  020D                     	;# 
  1798  020E                     	;# 
  1799  020F                     	;# 
  1800  020F                     	;# 
  1801  0210                     	;# 
  1802  0210                     	;# 
  1803  0211                     	;# 
  1804  0211                     	;# 
  1805  0212                     	;# 
  1806  0212                     	;# 
  1807  0213                     	;# 
  1808  0214                     	;# 
  1809  0215                     	;# 
  1810  0215                     	;# 
  1811  0216                     	;# 
  1812  0216                     	;# 
  1813  0217                     	;# 
  1814  0217                     	;# 
  1815  0218                     	;# 
  1816  0218                     	;# 
  1817  0219                     	;# 
  1818  021A                     	;# 
  1819  021B                     	;# 
  1820  021B                     	;# 
  1821  021C                     	;# 
  1822  021C                     	;# 
  1823  021D                     	;# 
  1824  021D                     	;# 
  1825  021E                     	;# 
  1826  021F                     	;# 
  1827  028C                     	;# 
  1828  028C                     	;# 
  1829  028D                     	;# 
  1830  028D                     	;# 
  1831  028E                     	;# 
  1832  028F                     	;# 
  1833  0290                     	;# 
  1834  0290                     	;# 
  1835  0291                     	;# 
  1836  0292                     	;# 
  1837  0292                     	;# 
  1838  0293                     	;# 
  1839  0293                     	;# 
  1840  0294                     	;# 
  1841  0295                     	;# 
  1842  0296                     	;# 
  1843  0296                     	;# 
  1844  0297                     	;# 
  1845  0298                     	;# 
  1846  0298                     	;# 
  1847  0299                     	;# 
  1848  0299                     	;# 
  1849  029A                     	;# 
  1850  029B                     	;# 
  1851  029C                     	;# 
  1852  029C                     	;# 
  1853  029D                     	;# 
  1854  030C                     	;# 
  1855  030C                     	;# 
  1856  030D                     	;# 
  1857  030E                     	;# 
  1858  030F                     	;# 
  1859  0310                     	;# 
  1860  0310                     	;# 
  1861  0311                     	;# 
  1862  0312                     	;# 
  1863  0313                     	;# 
  1864  0314                     	;# 
  1865  0314                     	;# 
  1866  0315                     	;# 
  1867  0316                     	;# 
  1868  0317                     	;# 
  1869  0318                     	;# 
  1870  0318                     	;# 
  1871  0319                     	;# 
  1872  031A                     	;# 
  1873  031B                     	;# 
  1874  031C                     	;# 
  1875  031C                     	;# 
  1876  031D                     	;# 
  1877  031E                     	;# 
  1878  031F                     	;# 
  1879  038C                     	;# 
  1880  038D                     	;# 
  1881  038E                     	;# 
  1882  0390                     	;# 
  1883  0391                     	;# 
  1884  0392                     	;# 
  1885  040C                     	;# 
  1886  040D                     	;# 
  1887  040E                     	;# 
  1888  040F                     	;# 
  1889  0410                     	;# 
  1890  0411                     	;# 
  1891  0416                     	;# 
  1892  0416                     	;# 
  1893  0417                     	;# 
  1894  0418                     	;# 
  1895  0418                     	;# 
  1896  0419                     	;# 
  1897  041A                     	;# 
  1898  041A                     	;# 
  1899  041B                     	;# 
  1900  041C                     	;# 
  1901  041C                     	;# 
  1902  041D                     	;# 
  1903  041E                     	;# 
  1904  041F                     	;# 
  1905  048C                     	;# 
  1906  048C                     	;# 
  1907  048D                     	;# 
  1908  048E                     	;# 
  1909  048F                     	;# 
  1910  048F                     	;# 
  1911  0490                     	;# 
  1912  0491                     	;# 
  1913  0492                     	;# 
  1914  0492                     	;# 
  1915  0493                     	;# 
  1916  0494                     	;# 
  1917  0495                     	;# 
  1918  0495                     	;# 
  1919  0496                     	;# 
  1920  0497                     	;# 
  1921  0498                     	;# 
  1922  0499                     	;# 
  1923  049A                     	;# 
  1924  049B                     	;# 
  1925  049C                     	;# 
  1926  049D                     	;# 
  1927  050C                     	;# 
  1928  050C                     	;# 
  1929  050D                     	;# 
  1930  050E                     	;# 
  1931  050F                     	;# 
  1932  050F                     	;# 
  1933  0510                     	;# 
  1934  0511                     	;# 
  1935  0512                     	;# 
  1936  0512                     	;# 
  1937  0513                     	;# 
  1938  0514                     	;# 
  1939  0515                     	;# 
  1940  0515                     	;# 
  1941  0516                     	;# 
  1942  0517                     	;# 
  1943  0518                     	;# 
  1944  0519                     	;# 
  1945  051A                     	;# 
  1946  051B                     	;# 
  1947  051C                     	;# 
  1948  051D                     	;# 
  1949  058C                     	;# 
  1950  058C                     	;# 
  1951  058D                     	;# 
  1952  058E                     	;# 
  1953  058F                     	;# 
  1954  058F                     	;# 
  1955  0590                     	;# 
  1956  0591                     	;# 
  1957  0592                     	;# 
  1958  0593                     	;# 
  1959  060C                     	;# 
  1960  060D                     	;# 
  1961  060E                     	;# 
  1962  060F                     	;# 
  1963  0610                     	;# 
  1964  0611                     	;# 
  1965  0612                     	;# 
  1966  0613                     	;# 
  1967  0614                     	;# 
  1968  0616                     	;# 
  1969  0617                     	;# 
  1970  0618                     	;# 
  1971  0619                     	;# 
  1972  061A                     	;# 
  1973  061B                     	;# 
  1974  061C                     	;# 
  1975  061D                     	;# 
  1976  061E                     	;# 
  1977  068C                     	;# 
  1978  068D                     	;# 
  1979  068E                     	;# 
  1980  068F                     	;# 
  1981  0690                     	;# 
  1982  0691                     	;# 
  1983  0692                     	;# 
  1984  0693                     	;# 
  1985  0694                     	;# 
  1986  070C                     	;# 
  1987  070D                     	;# 
  1988  070E                     	;# 
  1989  070F                     	;# 
  1990  0710                     	;# 
  1991  0711                     	;# 
  1992  0712                     	;# 
  1993  0713                     	;# 
  1994  0714                     	;# 
  1995  0716                     	;# 
  1996  0717                     	;# 
  1997  0718                     	;# 
  1998  0719                     	;# 
  1999  071A                     	;# 
  2000  071B                     	;# 
  2001  071C                     	;# 
  2002  071D                     	;# 
  2003  071E                     	;# 
  2004  0796                     	;# 
  2005  0797                     	;# 
  2006  0798                     	;# 
  2007  0799                     	;# 
  2008  079A                     	;# 
  2009  079B                     	;# 
  2010  080C                     	;# 
  2011  080D                     	;# 
  2012  080E                     	;# 
  2013  080F                     	;# 
  2014  0810                     	;# 
  2015  0811                     	;# 
  2016  0812                     	;# 
  2017  0813                     	;# 
  2018  0814                     	;# 
  2019  081A                     	;# 
  2020  081B                     	;# 
  2021  081C                     	;# 
  2022  081D                     	;# 
  2023  081E                     	;# 
  2024  081F                     	;# 
  2025  088C                     	;# 
  2026  088D                     	;# 
  2027  088E                     	;# 
  2028  088F                     	;# 
  2029  0890                     	;# 
  2030  0891                     	;# 
  2031  0892                     	;# 
  2032  0893                     	;# 
  2033  0895                     	;# 
  2034  0896                     	;# 
  2035  0897                     	;# 
  2036  0898                     	;# 
  2037  0899                     	;# 
  2038  089A                     	;# 
  2039  089B                     	;# 
  2040  090C                     	;# 
  2041  090E                     	;# 
  2042  090F                     	;# 
  2043  091F                     	;# 
  2044  098F                     	;# 
  2045  098F                     	;# 
  2046  0990                     	;# 
  2047  0991                     	;# 
  2048  0992                     	;# 
  2049  0993                     	;# 
  2050  0994                     	;# 
  2051  0995                     	;# 
  2052  0996                     	;# 
  2053  0997                     	;# 
  2054  1E0F                     	;# 
  2055  1E10                     	;# 
  2056  1E11                     	;# 
  2057  1E12                     	;# 
  2058  1E13                     	;# 
  2059  1E14                     	;# 
  2060  1E15                     	;# 
  2061  1E16                     	;# 
  2062  1E17                     	;# 
  2063  1E18                     	;# 
  2064  1E19                     	;# 
  2065  1E1A                     	;# 
  2066  1E1B                     	;# 
  2067  1E1C                     	;# 
  2068  1E1D                     	;# 
  2069  1E1E                     	;# 
  2070  1E1F                     	;# 
  2071  1E20                     	;# 
  2072  1E21                     	;# 
  2073  1E22                     	;# 
  2074  1E23                     	;# 
  2075  1E24                     	;# 
  2076  1E25                     	;# 
  2077  1E26                     	;# 
  2078  1E27                     	;# 
  2079  1E28                     	;# 
  2080  1E29                     	;# 
  2081  1E2A                     	;# 
  2082  1E2B                     	;# 
  2083  1E2C                     	;# 
  2084  1E2D                     	;# 
  2085  1E2E                     	;# 
  2086  1E2F                     	;# 
  2087  1E30                     	;# 
  2088  1E31                     	;# 
  2089  1E32                     	;# 
  2090  1E33                     	;# 
  2091  1E34                     	;# 
  2092  1E35                     	;# 
  2093  1E36                     	;# 
  2094  1E37                     	;# 
  2095  1E8F                     	;# 
  2096  1E90                     	;# 
  2097  1E91                     	;# 
  2098  1E92                     	;# 
  2099  1E93                     	;# 
  2100  1E94                     	;# 
  2101  1E95                     	;# 
  2102  1E96                     	;# 
  2103  1E97                     	;# 
  2104  1E9C                     	;# 
  2105  1E9D                     	;# 
  2106  1E9E                     	;# 
  2107  1EA1                     	;# 
  2108  1EA2                     	;# 
  2109  1EA3                     	;# 
  2110  1EA4                     	;# 
  2111  1EA5                     	;# 
  2112  1EA9                     	;# 
  2113  1EAA                     	;# 
  2114  1EAB                     	;# 
  2115  1EAC                     	;# 
  2116  1EB1                     	;# 
  2117  1EB2                     	;# 
  2118  1EB3                     	;# 
  2119  1EB8                     	;# 
  2120  1EB9                     	;# 
  2121  1EBA                     	;# 
  2122  1EBB                     	;# 
  2123  1EBC                     	;# 
  2124  1EBD                     	;# 
  2125  1EBE                     	;# 
  2126  1EC3                     	;# 
  2127  1EC5                     	;# 
  2128  1EC6                     	;# 
  2129  1EC7                     	;# 
  2130  1EC8                     	;# 
  2131  1EC9                     	;# 
  2132  1ECA                     	;# 
  2133  1ECB                     	;# 
  2134  1ECC                     	;# 
  2135  1F10                     	;# 
  2136  1F11                     	;# 
  2137  1F12                     	;# 
  2138  1F13                     	;# 
  2139  1F14                     	;# 
  2140  1F15                     	;# 
  2141  1F16                     	;# 
  2142  1F17                     	;# 
  2143  1F18                     	;# 
  2144  1F19                     	;# 
  2145  1F1A                     	;# 
  2146  1F1B                     	;# 
  2147  1F1C                     	;# 
  2148  1F1D                     	;# 
  2149  1F1E                     	;# 
  2150  1F1F                     	;# 
  2151  1F20                     	;# 
  2152  1F21                     	;# 
  2153  1F22                     	;# 
  2154  1F23                     	;# 
  2155  1F24                     	;# 
  2156  1F25                     	;# 
  2157  1F26                     	;# 
  2158  1F27                     	;# 
  2159  1F28                     	;# 
  2160  1F29                     	;# 
  2161  1F2A                     	;# 
  2162  1F2B                     	;# 
  2163  1F2C                     	;# 
  2164  1F2D                     	;# 
  2165  1F2E                     	;# 
  2166  1F2F                     	;# 
  2167  1F30                     	;# 
  2168  1F31                     	;# 
  2169  1F32                     	;# 
  2170  1F38                     	;# 
  2171  1F39                     	;# 
  2172  1F3A                     	;# 
  2173  1F3B                     	;# 
  2174  1F3C                     	;# 
  2175  1F3D                     	;# 
  2176  1F3E                     	;# 
  2177  1F3F                     	;# 
  2178  1F40                     	;# 
  2179  1F41                     	;# 
  2180  1F43                     	;# 
  2181  1F44                     	;# 
  2182  1F45                     	;# 
  2183  1F46                     	;# 
  2184  1F47                     	;# 
  2185  1F48                     	;# 
  2186  1F49                     	;# 
  2187  1F4A                     	;# 
  2188  1F4B                     	;# 
  2189  1F4C                     	;# 
  2190  1F4E                     	;# 
  2191  1F4F                     	;# 
  2192  1F50                     	;# 
  2193  1F51                     	;# 
  2194  1F52                     	;# 
  2195  1F53                     	;# 
  2196  1F54                     	;# 
  2197  1F55                     	;# 
  2198  1F56                     	;# 
  2199  1F57                     	;# 
  2200  1F59                     	;# 
  2201  1F5A                     	;# 
  2202  1F5B                     	;# 
  2203  1F5C                     	;# 
  2204  1F5D                     	;# 
  2205  1F61                     	;# 
  2206  1F62                     	;# 
  2207  1F64                     	;# 
  2208  1F65                     	;# 
  2209  1F66                     	;# 
  2210  1F67                     	;# 
  2211  1F68                     	;# 
  2212  1F69                     	;# 
  2213  1F6A                     	;# 
  2214  1F6B                     	;# 
  2215  1F6C                     	;# 
  2216  1F6D                     	;# 
  2217  1FE4                     	;# 
  2218  1FE5                     	;# 
  2219  1FE6                     	;# 
  2220  1FE7                     	;# 
  2221  1FE8                     	;# 
  2222  1FE9                     	;# 
  2223  1FEA                     	;# 
  2224  1FEB                     	;# 
  2225  1FED                     	;# 
  2226  1FEE                     	;# 
  2227  1FEF                     	;# 
  2228  0000                     	;# 
  2229  0001                     	;# 
  2230  0002                     	;# 
  2231  0003                     	;# 
  2232  0004                     	;# 
  2233  0005                     	;# 
  2234  0006                     	;# 
  2235  0007                     	;# 
  2236  0008                     	;# 
  2237  0009                     	;# 
  2238  000A                     	;# 
  2239  000B                     	;# 
  2240  000C                     	;# 
  2241  000D                     	;# 
  2242  000E                     	;# 
  2243  000F                     	;# 
  2244  0010                     	;# 
  2245  0011                     	;# 
  2246  0012                     	;# 
  2247  0013                     	;# 
  2248  0014                     	;# 
  2249  0015                     	;# 
  2250  0016                     	;# 
  2251  0017                     	;# 
  2252  0018                     	;# 
  2253  0019                     	;# 
  2254  001A                     	;# 
  2255  001C                     	;# 
  2256  001C                     	;# 
  2257  001D                     	;# 
  2258  001D                     	;# 
  2259  001E                     	;# 
  2260  001F                     	;# 
  2261  008C                     	;# 
  2262  008C                     	;# 
  2263  008D                     	;# 
  2264  008E                     	;# 
  2265  008E                     	;# 
  2266  008F                     	;# 
  2267  0090                     	;# 
  2268  0090                     	;# 
  2269  0091                     	;# 
  2270  0093                     	;# 
  2271  0094                     	;# 
  2272  0095                     	;# 
  2273  0096                     	;# 
  2274  0097                     	;# 
  2275  0098                     	;# 
  2276  0099                     	;# 
  2277  009A                     	;# 
  2278  009B                     	;# 
  2279  009C                     	;# 
  2280  009D                     	;# 
  2281  009E                     	;# 
  2282  010C                     	;# 
  2283  010D                     	;# 
  2284  010E                     	;# 
  2285  010E                     	;# 
  2286  010F                     	;# 
  2287  0110                     	;# 
  2288  0110                     	;# 
  2289  0111                     	;# 
  2290  0112                     	;# 
  2291  0112                     	;# 
  2292  0113                     	;# 
  2293  0114                     	;# 
  2294  0114                     	;# 
  2295  0115                     	;# 
  2296  0116                     	;# 
  2297  0116                     	;# 
  2298  0117                     	;# 
  2299  0119                     	;# 
  2300  0119                     	;# 
  2301  0119                     	;# 
  2302  011A                     	;# 
  2303  011A                     	;# 
  2304  011A                     	;# 
  2305  011B                     	;# 
  2306  011B                     	;# 
  2307  011B                     	;# 
  2308  011B                     	;# 
  2309  011B                     	;# 
  2310  011C                     	;# 
  2311  011C                     	;# 
  2312  011C                     	;# 
  2313  011D                     	;# 
  2314  011D                     	;# 
  2315  011D                     	;# 
  2316  011E                     	;# 
  2317  011E                     	;# 
  2318  011E                     	;# 
  2319  011F                     	;# 
  2320  011F                     	;# 
  2321  011F                     	;# 
  2322  011F                     	;# 
  2323  011F                     	;# 
  2324  018C                     	;# 
  2325  018D                     	;# 
  2326  018E                     	;# 
  2327  018F                     	;# 
  2328  0190                     	;# 
  2329  0191                     	;# 
  2330  0192                     	;# 
  2331  0196                     	;# 
  2332  0197                     	;# 
  2333  0198                     	;# 
  2334  0199                     	;# 
  2335  019A                     	;# 
  2336  019B                     	;# 
  2337  019C                     	;# 
  2338  020C                     	;# 
  2339  020C                     	;# 
  2340  020D                     	;# 
  2341  020E                     	;# 
  2342  020F                     	;# 
  2343  020F                     	;# 
  2344  0210                     	;# 
  2345  0210                     	;# 
  2346  0211                     	;# 
  2347  0211                     	;# 
  2348  0212                     	;# 
  2349  0212                     	;# 
  2350  0213                     	;# 
  2351  0214                     	;# 
  2352  0215                     	;# 
  2353  0215                     	;# 
  2354  0216                     	;# 
  2355  0216                     	;# 
  2356  0217                     	;# 
  2357  0217                     	;# 
  2358  0218                     	;# 
  2359  0218                     	;# 
  2360  0219                     	;# 
  2361  021A                     	;# 
  2362  021B                     	;# 
  2363  021B                     	;# 
  2364  021C                     	;# 
  2365  021C                     	;# 
  2366  021D                     	;# 
  2367  021D                     	;# 
  2368  021E                     	;# 
  2369  021F                     	;# 
  2370  028C                     	;# 
  2371  028C                     	;# 
  2372  028D                     	;# 
  2373  028D                     	;# 
  2374  028E                     	;# 
  2375  028F                     	;# 
  2376  0290                     	;# 
  2377  0290                     	;# 
  2378  0291                     	;# 
  2379  0292                     	;# 
  2380  0292                     	;# 
  2381  0293                     	;# 
  2382  0293                     	;# 
  2383  0294                     	;# 
  2384  0295                     	;# 
  2385  0296                     	;# 
  2386  0296                     	;# 
  2387  0297                     	;# 
  2388  0298                     	;# 
  2389  0298                     	;# 
  2390  0299                     	;# 
  2391  0299                     	;# 
  2392  029A                     	;# 
  2393  029B                     	;# 
  2394  029C                     	;# 
  2395  029C                     	;# 
  2396  029D                     	;# 
  2397  030C                     	;# 
  2398  030C                     	;# 
  2399  030D                     	;# 
  2400  030E                     	;# 
  2401  030F                     	;# 
  2402  0310                     	;# 
  2403  0310                     	;# 
  2404  0311                     	;# 
  2405  0312                     	;# 
  2406  0313                     	;# 
  2407  0314                     	;# 
  2408  0314                     	;# 
  2409  0315                     	;# 
  2410  0316                     	;# 
  2411  0317                     	;# 
  2412  0318                     	;# 
  2413  0318                     	;# 
  2414  0319                     	;# 
  2415  031A                     	;# 
  2416  031B                     	;# 
  2417  031C                     	;# 
  2418  031C                     	;# 
  2419  031D                     	;# 
  2420  031E                     	;# 
  2421  031F                     	;# 
  2422  038C                     	;# 
  2423  038D                     	;# 
  2424  038E                     	;# 
  2425  0390                     	;# 
  2426  0391                     	;# 
  2427  0392                     	;# 
  2428  040C                     	;# 
  2429  040D                     	;# 
  2430  040E                     	;# 
  2431  040F                     	;# 
  2432  0410                     	;# 
  2433  0411                     	;# 
  2434  0416                     	;# 
  2435  0416                     	;# 
  2436  0417                     	;# 
  2437  0418                     	;# 
  2438  0418                     	;# 
  2439  0419                     	;# 
  2440  041A                     	;# 
  2441  041A                     	;# 
  2442  041B                     	;# 
  2443  041C                     	;# 
  2444  041C                     	;# 
  2445  041D                     	;# 
  2446  041E                     	;# 
  2447  041F                     	;# 
  2448  048C                     	;# 
  2449  048C                     	;# 
  2450  048D                     	;# 
  2451  048E                     	;# 
  2452  048F                     	;# 
  2453  048F                     	;# 
  2454  0490                     	;# 
  2455  0491                     	;# 
  2456  0492                     	;# 
  2457  0492                     	;# 
  2458  0493                     	;# 
  2459  0494                     	;# 
  2460  0495                     	;# 
  2461  0495                     	;# 
  2462  0496                     	;# 
  2463  0497                     	;# 
  2464  0498                     	;# 
  2465  0499                     	;# 
  2466  049A                     	;# 
  2467  049B                     	;# 
  2468  049C                     	;# 
  2469  049D                     	;# 
  2470  050C                     	;# 
  2471  050C                     	;# 
  2472  050D                     	;# 
  2473  050E                     	;# 
  2474  050F                     	;# 
  2475  050F                     	;# 
  2476  0510                     	;# 
  2477  0511                     	;# 
  2478  0512                     	;# 
  2479  0512                     	;# 
  2480  0513                     	;# 
  2481  0514                     	;# 
  2482  0515                     	;# 
  2483  0515                     	;# 
  2484  0516                     	;# 
  2485  0517                     	;# 
  2486  0518                     	;# 
  2487  0519                     	;# 
  2488  051A                     	;# 
  2489  051B                     	;# 
  2490  051C                     	;# 
  2491  051D                     	;# 
  2492  058C                     	;# 
  2493  058C                     	;# 
  2494  058D                     	;# 
  2495  058E                     	;# 
  2496  058F                     	;# 
  2497  058F                     	;# 
  2498  0590                     	;# 
  2499  0591                     	;# 
  2500  0592                     	;# 
  2501  0593                     	;# 
  2502  060C                     	;# 
  2503  060D                     	;# 
  2504  060E                     	;# 
  2505  060F                     	;# 
  2506  0610                     	;# 
  2507  0611                     	;# 
  2508  0612                     	;# 
  2509  0613                     	;# 
  2510  0614                     	;# 
  2511  0616                     	;# 
  2512  0617                     	;# 
  2513  0618                     	;# 
  2514  0619                     	;# 
  2515  061A                     	;# 
  2516  061B                     	;# 
  2517  061C                     	;# 
  2518  061D                     	;# 
  2519  061E                     	;# 
  2520  068C                     	;# 
  2521  068D                     	;# 
  2522  068E                     	;# 
  2523  068F                     	;# 
  2524  0690                     	;# 
  2525  0691                     	;# 
  2526  0692                     	;# 
  2527  0693                     	;# 
  2528  0694                     	;# 
  2529  070C                     	;# 
  2530  070D                     	;# 
  2531  070E                     	;# 
  2532  070F                     	;# 
  2533  0710                     	;# 
  2534  0711                     	;# 
  2535  0712                     	;# 
  2536  0713                     	;# 
  2537  0714                     	;# 
  2538  0716                     	;# 
  2539  0717                     	;# 
  2540  0718                     	;# 
  2541  0719                     	;# 
  2542  071A                     	;# 
  2543  071B                     	;# 
  2544  071C                     	;# 
  2545  071D                     	;# 
  2546  071E                     	;# 
  2547  0796                     	;# 
  2548  0797                     	;# 
  2549  0798                     	;# 
  2550  0799                     	;# 
  2551  079A                     	;# 
  2552  079B                     	;# 
  2553  080C                     	;# 
  2554  080D                     	;# 
  2555  080E                     	;# 
  2556  080F                     	;# 
  2557  0810                     	;# 
  2558  0811                     	;# 
  2559  0812                     	;# 
  2560  0813                     	;# 
  2561  0814                     	;# 
  2562  081A                     	;# 
  2563  081B                     	;# 
  2564  081C                     	;# 
  2565  081D                     	;# 
  2566  081E                     	;# 
  2567  081F                     	;# 
  2568  088C                     	;# 
  2569  088D                     	;# 
  2570  088E                     	;# 
  2571  088F                     	;# 
  2572  0890                     	;# 
  2573  0891                     	;# 
  2574  0892                     	;# 
  2575  0893                     	;# 
  2576  0895                     	;# 
  2577  0896                     	;# 
  2578  0897                     	;# 
  2579  0898                     	;# 
  2580  0899                     	;# 
  2581  089A                     	;# 
  2582  089B                     	;# 
  2583  090C                     	;# 
  2584  090E                     	;# 
  2585  090F                     	;# 
  2586  091F                     	;# 
  2587  098F                     	;# 
  2588  098F                     	;# 
  2589  0990                     	;# 
  2590  0991                     	;# 
  2591  0992                     	;# 
  2592  0993                     	;# 
  2593  0994                     	;# 
  2594  0995                     	;# 
  2595  0996                     	;# 
  2596  0997                     	;# 
  2597  1E0F                     	;# 
  2598  1E10                     	;# 
  2599  1E11                     	;# 
  2600  1E12                     	;# 
  2601  1E13                     	;# 
  2602  1E14                     	;# 
  2603  1E15                     	;# 
  2604  1E16                     	;# 
  2605  1E17                     	;# 
  2606  1E18                     	;# 
  2607  1E19                     	;# 
  2608  1E1A                     	;# 
  2609  1E1B                     	;# 
  2610  1E1C                     	;# 
  2611  1E1D                     	;# 
  2612  1E1E                     	;# 
  2613  1E1F                     	;# 
  2614  1E20                     	;# 
  2615  1E21                     	;# 
  2616  1E22                     	;# 
  2617  1E23                     	;# 
  2618  1E24                     	;# 
  2619  1E25                     	;# 
  2620  1E26                     	;# 
  2621  1E27                     	;# 
  2622  1E28                     	;# 
  2623  1E29                     	;# 
  2624  1E2A                     	;# 
  2625  1E2B                     	;# 
  2626  1E2C                     	;# 
  2627  1E2D                     	;# 
  2628  1E2E                     	;# 
  2629  1E2F                     	;# 
  2630  1E30                     	;# 
  2631  1E31                     	;# 
  2632  1E32                     	;# 
  2633  1E33                     	;# 
  2634  1E34                     	;# 
  2635  1E35                     	;# 
  2636  1E36                     	;# 
  2637  1E37                     	;# 
  2638  1E8F                     	;# 
  2639  1E90                     	;# 
  2640  1E91                     	;# 
  2641  1E92                     	;# 
  2642  1E93                     	;# 
  2643  1E94                     	;# 
  2644  1E95                     	;# 
  2645  1E96                     	;# 
  2646  1E97                     	;# 
  2647  1E9C                     	;# 
  2648  1E9D                     	;# 
  2649  1E9E                     	;# 
  2650  1EA1                     	;# 
  2651  1EA2                     	;# 
  2652  1EA3                     	;# 
  2653  1EA4                     	;# 
  2654  1EA5                     	;# 
  2655  1EA9                     	;# 
  2656  1EAA                     	;# 
  2657  1EAB                     	;# 
  2658  1EAC                     	;# 
  2659  1EB1                     	;# 
  2660  1EB2                     	;# 
  2661  1EB3                     	;# 
  2662  1EB8                     	;# 
  2663  1EB9                     	;# 
  2664  1EBA                     	;# 
  2665  1EBB                     	;# 
  2666  1EBC                     	;# 
  2667  1EBD                     	;# 
  2668  1EBE                     	;# 
  2669  1EC3                     	;# 
  2670  1EC5                     	;# 
  2671  1EC6                     	;# 
  2672  1EC7                     	;# 
  2673  1EC8                     	;# 
  2674  1EC9                     	;# 
  2675  1ECA                     	;# 
  2676  1ECB                     	;# 
  2677  1ECC                     	;# 
  2678  1F10                     	;# 
  2679  1F11                     	;# 
  2680  1F12                     	;# 
  2681  1F13                     	;# 
  2682  1F14                     	;# 
  2683  1F15                     	;# 
  2684  1F16                     	;# 
  2685  1F17                     	;# 
  2686  1F18                     	;# 
  2687  1F19                     	;# 
  2688  1F1A                     	;# 
  2689  1F1B                     	;# 
  2690  1F1C                     	;# 
  2691  1F1D                     	;# 
  2692  1F1E                     	;# 
  2693  1F1F                     	;# 
  2694  1F20                     	;# 
  2695  1F21                     	;# 
  2696  1F22                     	;# 
  2697  1F23                     	;# 
  2698  1F24                     	;# 
  2699  1F25                     	;# 
  2700  1F26                     	;# 
  2701  1F27                     	;# 
  2702  1F28                     	;# 
  2703  1F29                     	;# 
  2704  1F2A                     	;# 
  2705  1F2B                     	;# 
  2706  1F2C                     	;# 
  2707  1F2D                     	;# 
  2708  1F2E                     	;# 
  2709  1F2F                     	;# 
  2710  1F30                     	;# 
  2711  1F31                     	;# 
  2712  1F32                     	;# 
  2713  1F38                     	;# 
  2714  1F39                     	;# 
  2715  1F3A                     	;# 
  2716  1F3B                     	;# 
  2717  1F3C                     	;# 
  2718  1F3D                     	;# 
  2719  1F3E                     	;# 
  2720  1F3F                     	;# 
  2721  1F40                     	;# 
  2722  1F41                     	;# 
  2723  1F43                     	;# 
  2724  1F44                     	;# 
  2725  1F45                     	;# 
  2726  1F46                     	;# 
  2727  1F47                     	;# 
  2728  1F48                     	;# 
  2729  1F49                     	;# 
  2730  1F4A                     	;# 
  2731  1F4B                     	;# 
  2732  1F4C                     	;# 
  2733  1F4E                     	;# 
  2734  1F4F                     	;# 
  2735  1F50                     	;# 
  2736  1F51                     	;# 
  2737  1F52                     	;# 
  2738  1F53                     	;# 
  2739  1F54                     	;# 
  2740  1F55                     	;# 
  2741  1F56                     	;# 
  2742  1F57                     	;# 
  2743  1F59                     	;# 
  2744  1F5A                     	;# 
  2745  1F5B                     	;# 
  2746  1F5C                     	;# 
  2747  1F5D                     	;# 
  2748  1F61                     	;# 
  2749  1F62                     	;# 
  2750  1F64                     	;# 
  2751  1F65                     	;# 
  2752  1F66                     	;# 
  2753  1F67                     	;# 
  2754  1F68                     	;# 
  2755  1F69                     	;# 
  2756  1F6A                     	;# 
  2757  1F6B                     	;# 
  2758  1F6C                     	;# 
  2759  1F6D                     	;# 
  2760  1FE4                     	;# 
  2761  1FE5                     	;# 
  2762  1FE6                     	;# 
  2763  1FE7                     	;# 
  2764  1FE8                     	;# 
  2765  1FE9                     	;# 
  2766  1FEA                     	;# 
  2767  1FEB                     	;# 
  2768  1FED                     	;# 
  2769  1FEE                     	;# 
  2770  1FEF                     	;# 
  2771  0000                     	;# 
  2772  0001                     	;# 
  2773  0002                     	;# 
  2774  0003                     	;# 
  2775  0004                     	;# 
  2776  0005                     	;# 
  2777  0006                     	;# 
  2778  0007                     	;# 
  2779  0008                     	;# 
  2780  0009                     	;# 
  2781  000A                     	;# 
  2782  000B                     	;# 
  2783  000C                     	;# 
  2784  000D                     	;# 
  2785  000E                     	;# 
  2786  000F                     	;# 
  2787  0010                     	;# 
  2788  0011                     	;# 
  2789  0012                     	;# 
  2790  0013                     	;# 
  2791  0014                     	;# 
  2792  0015                     	;# 
  2793  0016                     	;# 
  2794  0017                     	;# 
  2795  0018                     	;# 
  2796  0019                     	;# 
  2797  001A                     	;# 
  2798  001C                     	;# 
  2799  001C                     	;# 
  2800  001D                     	;# 
  2801  001D                     	;# 
  2802  001E                     	;# 
  2803  001F                     	;# 
  2804  008C                     	;# 
  2805  008C                     	;# 
  2806  008D                     	;# 
  2807  008E                     	;# 
  2808  008E                     	;# 
  2809  008F                     	;# 
  2810  0090                     	;# 
  2811  0090                     	;# 
  2812  0091                     	;# 
  2813  0093                     	;# 
  2814  0094                     	;# 
  2815  0095                     	;# 
  2816  0096                     	;# 
  2817  0097                     	;# 
  2818  0098                     	;# 
  2819  0099                     	;# 
  2820  009A                     	;# 
  2821  009B                     	;# 
  2822  009C                     	;# 
  2823  009D                     	;# 
  2824  009E                     	;# 
  2825  010C                     	;# 
  2826  010D                     	;# 
  2827  010E                     	;# 
  2828  010E                     	;# 
  2829  010F                     	;# 
  2830  0110                     	;# 
  2831  0110                     	;# 
  2832  0111                     	;# 
  2833  0112                     	;# 
  2834  0112                     	;# 
  2835  0113                     	;# 
  2836  0114                     	;# 
  2837  0114                     	;# 
  2838  0115                     	;# 
  2839  0116                     	;# 
  2840  0116                     	;# 
  2841  0117                     	;# 
  2842  0119                     	;# 
  2843  0119                     	;# 
  2844  0119                     	;# 
  2845  011A                     	;# 
  2846  011A                     	;# 
  2847  011A                     	;# 
  2848  011B                     	;# 
  2849  011B                     	;# 
  2850  011B                     	;# 
  2851  011B                     	;# 
  2852  011B                     	;# 
  2853  011C                     	;# 
  2854  011C                     	;# 
  2855  011C                     	;# 
  2856  011D                     	;# 
  2857  011D                     	;# 
  2858  011D                     	;# 
  2859  011E                     	;# 
  2860  011E                     	;# 
  2861  011E                     	;# 
  2862  011F                     	;# 
  2863  011F                     	;# 
  2864  011F                     	;# 
  2865  011F                     	;# 
  2866  011F                     	;# 
  2867  018C                     	;# 
  2868  018D                     	;# 
  2869  018E                     	;# 
  2870  018F                     	;# 
  2871  0190                     	;# 
  2872  0191                     	;# 
  2873  0192                     	;# 
  2874  0196                     	;# 
  2875  0197                     	;# 
  2876  0198                     	;# 
  2877  0199                     	;# 
  2878  019A                     	;# 
  2879  019B                     	;# 
  2880  019C                     	;# 
  2881  020C                     	;# 
  2882  020C                     	;# 
  2883  020D                     	;# 
  2884  020E                     	;# 
  2885  020F                     	;# 
  2886  020F                     	;# 
  2887  0210                     	;# 
  2888  0210                     	;# 
  2889  0211                     	;# 
  2890  0211                     	;# 
  2891  0212                     	;# 
  2892  0212                     	;# 
  2893  0213                     	;# 
  2894  0214                     	;# 
  2895  0215                     	;# 
  2896  0215                     	;# 
  2897  0216                     	;# 
  2898  0216                     	;# 
  2899  0217                     	;# 
  2900  0217                     	;# 
  2901  0218                     	;# 
  2902  0218                     	;# 
  2903  0219                     	;# 
  2904  021A                     	;# 
  2905  021B                     	;# 
  2906  021B                     	;# 
  2907  021C                     	;# 
  2908  021C                     	;# 
  2909  021D                     	;# 
  2910  021D                     	;# 
  2911  021E                     	;# 
  2912  021F                     	;# 
  2913  028C                     	;# 
  2914  028C                     	;# 
  2915  028D                     	;# 
  2916  028D                     	;# 
  2917  028E                     	;# 
  2918  028F                     	;# 
  2919  0290                     	;# 
  2920  0290                     	;# 
  2921  0291                     	;# 
  2922  0292                     	;# 
  2923  0292                     	;# 
  2924  0293                     	;# 
  2925  0293                     	;# 
  2926  0294                     	;# 
  2927  0295                     	;# 
  2928  0296                     	;# 
  2929  0296                     	;# 
  2930  0297                     	;# 
  2931  0298                     	;# 
  2932  0298                     	;# 
  2933  0299                     	;# 
  2934  0299                     	;# 
  2935  029A                     	;# 
  2936  029B                     	;# 
  2937  029C                     	;# 
  2938  029C                     	;# 
  2939  029D                     	;# 
  2940  030C                     	;# 
  2941  030C                     	;# 
  2942  030D                     	;# 
  2943  030E                     	;# 
  2944  030F                     	;# 
  2945  0310                     	;# 
  2946  0310                     	;# 
  2947  0311                     	;# 
  2948  0312                     	;# 
  2949  0313                     	;# 
  2950  0314                     	;# 
  2951  0314                     	;# 
  2952  0315                     	;# 
  2953  0316                     	;# 
  2954  0317                     	;# 
  2955  0318                     	;# 
  2956  0318                     	;# 
  2957  0319                     	;# 
  2958  031A                     	;# 
  2959  031B                     	;# 
  2960  031C                     	;# 
  2961  031C                     	;# 
  2962  031D                     	;# 
  2963  031E                     	;# 
  2964  031F                     	;# 
  2965  038C                     	;# 
  2966  038D                     	;# 
  2967  038E                     	;# 
  2968  0390                     	;# 
  2969  0391                     	;# 
  2970  0392                     	;# 
  2971  040C                     	;# 
  2972  040D                     	;# 
  2973  040E                     	;# 
  2974  040F                     	;# 
  2975  0410                     	;# 
  2976  0411                     	;# 
  2977  0416                     	;# 
  2978  0416                     	;# 
  2979  0417                     	;# 
  2980  0418                     	;# 
  2981  0418                     	;# 
  2982  0419                     	;# 
  2983  041A                     	;# 
  2984  041A                     	;# 
  2985  041B                     	;# 
  2986  041C                     	;# 
  2987  041C                     	;# 
  2988  041D                     	;# 
  2989  041E                     	;# 
  2990  041F                     	;# 
  2991  048C                     	;# 
  2992  048C                     	;# 
  2993  048D                     	;# 
  2994  048E                     	;# 
  2995  048F                     	;# 
  2996  048F                     	;# 
  2997  0490                     	;# 
  2998  0491                     	;# 
  2999  0492                     	;# 
  3000  0492                     	;# 
  3001  0493                     	;# 
  3002  0494                     	;# 
  3003  0495                     	;# 
  3004  0495                     	;# 
  3005  0496                     	;# 
  3006  0497                     	;# 
  3007  0498                     	;# 
  3008  0499                     	;# 
  3009  049A                     	;# 
  3010  049B                     	;# 
  3011  049C                     	;# 
  3012  049D                     	;# 
  3013  050C                     	;# 
  3014  050C                     	;# 
  3015  050D                     	;# 
  3016  050E                     	;# 
  3017  050F                     	;# 
  3018  050F                     	;# 
  3019  0510                     	;# 
  3020  0511                     	;# 
  3021  0512                     	;# 
  3022  0512                     	;# 
  3023  0513                     	;# 
  3024  0514                     	;# 
  3025  0515                     	;# 
  3026  0515                     	;# 
  3027  0516                     	;# 
  3028  0517                     	;# 
  3029  0518                     	;# 
  3030  0519                     	;# 
  3031  051A                     	;# 
  3032  051B                     	;# 
  3033  051C                     	;# 
  3034  051D                     	;# 
  3035  058C                     	;# 
  3036  058C                     	;# 
  3037  058D                     	;# 
  3038  058E                     	;# 
  3039  058F                     	;# 
  3040  058F                     	;# 
  3041  0590                     	;# 
  3042  0591                     	;# 
  3043  0592                     	;# 
  3044  0593                     	;# 
  3045  060C                     	;# 
  3046  060D                     	;# 
  3047  060E                     	;# 
  3048  060F                     	;# 
  3049  0610                     	;# 
  3050  0611                     	;# 
  3051  0612                     	;# 
  3052  0613                     	;# 
  3053  0614                     	;# 
  3054  0616                     	;# 
  3055  0617                     	;# 
  3056  0618                     	;# 
  3057  0619                     	;# 
  3058  061A                     	;# 
  3059  061B                     	;# 
  3060  061C                     	;# 
  3061  061D                     	;# 
  3062  061E                     	;# 
  3063  068C                     	;# 
  3064  068D                     	;# 
  3065  068E                     	;# 
  3066  068F                     	;# 
  3067  0690                     	;# 
  3068  0691                     	;# 
  3069  0692                     	;# 
  3070  0693                     	;# 
  3071  0694                     	;# 
  3072  070C                     	;# 
  3073  070D                     	;# 
  3074  070E                     	;# 
  3075  070F                     	;# 
  3076  0710                     	;# 
  3077  0711                     	;# 
  3078  0712                     	;# 
  3079  0713                     	;# 
  3080  0714                     	;# 
  3081  0716                     	;# 
  3082  0717                     	;# 
  3083  0718                     	;# 
  3084  0719                     	;# 
  3085  071A                     	;# 
  3086  071B                     	;# 
  3087  071C                     	;# 
  3088  071D                     	;# 
  3089  071E                     	;# 
  3090  0796                     	;# 
  3091  0797                     	;# 
  3092  0798                     	;# 
  3093  0799                     	;# 
  3094  079A                     	;# 
  3095  079B                     	;# 
  3096  080C                     	;# 
  3097  080D                     	;# 
  3098  080E                     	;# 
  3099  080F                     	;# 
  3100  0810                     	;# 
  3101  0811                     	;# 
  3102  0812                     	;# 
  3103  0813                     	;# 
  3104  0814                     	;# 
  3105  081A                     	;# 
  3106  081B                     	;# 
  3107  081C                     	;# 
  3108  081D                     	;# 
  3109  081E                     	;# 
  3110  081F                     	;# 
  3111  088C                     	;# 
  3112  088D                     	;# 
  3113  088E                     	;# 
  3114  088F                     	;# 
  3115  0890                     	;# 
  3116  0891                     	;# 
  3117  0892                     	;# 
  3118  0893                     	;# 
  3119  0895                     	;# 
  3120  0896                     	;# 
  3121  0897                     	;# 
  3122  0898                     	;# 
  3123  0899                     	;# 
  3124  089A                     	;# 
  3125  089B                     	;# 
  3126  090C                     	;# 
  3127  090E                     	;# 
  3128  090F                     	;# 
  3129  091F                     	;# 
  3130  098F                     	;# 
  3131  098F                     	;# 
  3132  0990                     	;# 
  3133  0991                     	;# 
  3134  0992                     	;# 
  3135  0993                     	;# 
  3136  0994                     	;# 
  3137  0995                     	;# 
  3138  0996                     	;# 
  3139  0997                     	;# 
  3140  1E0F                     	;# 
  3141  1E10                     	;# 
  3142  1E11                     	;# 
  3143  1E12                     	;# 
  3144  1E13                     	;# 
  3145  1E14                     	;# 
  3146  1E15                     	;# 
  3147  1E16                     	;# 
  3148  1E17                     	;# 
  3149  1E18                     	;# 
  3150  1E19                     	;# 
  3151  1E1A                     	;# 
  3152  1E1B                     	;# 
  3153  1E1C                     	;# 
  3154  1E1D                     	;# 
  3155  1E1E                     	;# 
  3156  1E1F                     	;# 
  3157  1E20                     	;# 
  3158  1E21                     	;# 
  3159  1E22                     	;# 
  3160  1E23                     	;# 
  3161  1E24                     	;# 
  3162  1E25                     	;# 
  3163  1E26                     	;# 
  3164  1E27                     	;# 
  3165  1E28                     	;# 
  3166  1E29                     	;# 
  3167  1E2A                     	;# 
  3168  1E2B                     	;# 
  3169  1E2C                     	;# 
  3170  1E2D                     	;# 
  3171  1E2E                     	;# 
  3172  1E2F                     	;# 
  3173  1E30                     	;# 
  3174  1E31                     	;# 
  3175  1E32                     	;# 
  3176  1E33                     	;# 
  3177  1E34                     	;# 
  3178  1E35                     	;# 
  3179  1E36                     	;# 
  3180  1E37                     	;# 
  3181  1E8F                     	;# 
  3182  1E90                     	;# 
  3183  1E91                     	;# 
  3184  1E92                     	;# 
  3185  1E93                     	;# 
  3186  1E94                     	;# 
  3187  1E95                     	;# 
  3188  1E96                     	;# 
  3189  1E97                     	;# 
  3190  1E9C                     	;# 
  3191  1E9D                     	;# 
  3192  1E9E                     	;# 
  3193  1EA1                     	;# 
  3194  1EA2                     	;# 
  3195  1EA3                     	;# 
  3196  1EA4                     	;# 
  3197  1EA5                     	;# 
  3198  1EA9                     	;# 
  3199  1EAA                     	;# 
  3200  1EAB                     	;# 
  3201  1EAC                     	;# 
  3202  1EB1                     	;# 
  3203  1EB2                     	;# 
  3204  1EB3                     	;# 
  3205  1EB8                     	;# 
  3206  1EB9                     	;# 
  3207  1EBA                     	;# 
  3208  1EBB                     	;# 
  3209  1EBC                     	;# 
  3210  1EBD                     	;# 
  3211  1EBE                     	;# 
  3212  1EC3                     	;# 
  3213  1EC5                     	;# 
  3214  1EC6                     	;# 
  3215  1EC7                     	;# 
  3216  1EC8                     	;# 
  3217  1EC9                     	;# 
  3218  1ECA                     	;# 
  3219  1ECB                     	;# 
  3220  1ECC                     	;# 
  3221  1F10                     	;# 
  3222  1F11                     	;# 
  3223  1F12                     	;# 
  3224  1F13                     	;# 
  3225  1F14                     	;# 
  3226  1F15                     	;# 
  3227  1F16                     	;# 
  3228  1F17                     	;# 
  3229  1F18                     	;# 
  3230  1F19                     	;# 
  3231  1F1A                     	;# 
  3232  1F1B                     	;# 
  3233  1F1C                     	;# 
  3234  1F1D                     	;# 
  3235  1F1E                     	;# 
  3236  1F1F                     	;# 
  3237  1F20                     	;# 
  3238  1F21                     	;# 
  3239  1F22                     	;# 
  3240  1F23                     	;# 
  3241  1F24                     	;# 
  3242  1F25                     	;# 
  3243  1F26                     	;# 
  3244  1F27                     	;# 
  3245  1F28                     	;# 
  3246  1F29                     	;# 
  3247  1F2A                     	;# 
  3248  1F2B                     	;# 
  3249  1F2C                     	;# 
  3250  1F2D                     	;# 
  3251  1F2E                     	;# 
  3252  1F2F                     	;# 
  3253  1F30                     	;# 
  3254  1F31                     	;# 
  3255  1F32                     	;# 
  3256  1F38                     	;# 
  3257  1F39                     	;# 
  3258  1F3A                     	;# 
  3259  1F3B                     	;# 
  3260  1F3C                     	;# 
  3261  1F3D                     	;# 
  3262  1F3E                     	;# 
  3263  1F3F                     	;# 
  3264  1F40                     	;# 
  3265  1F41                     	;# 
  3266  1F43                     	;# 
  3267  1F44                     	;# 
  3268  1F45                     	;# 
  3269  1F46                     	;# 
  3270  1F47                     	;# 
  3271  1F48                     	;# 
  3272  1F49                     	;# 
  3273  1F4A                     	;# 
  3274  1F4B                     	;# 
  3275  1F4C                     	;# 
  3276  1F4E                     	;# 
  3277  1F4F                     	;# 
  3278  1F50                     	;# 
  3279  1F51                     	;# 
  3280  1F52                     	;# 
  3281  1F53                     	;# 
  3282  1F54                     	;# 
  3283  1F55                     	;# 
  3284  1F56                     	;# 
  3285  1F57                     	;# 
  3286  1F59                     	;# 
  3287  1F5A                     	;# 
  3288  1F5B                     	;# 
  3289  1F5C                     	;# 
  3290  1F5D                     	;# 
  3291  1F61                     	;# 
  3292  1F62                     	;# 
  3293  1F64                     	;# 
  3294  1F65                     	;# 
  3295  1F66                     	;# 
  3296  1F67                     	;# 
  3297  1F68                     	;# 
  3298  1F69                     	;# 
  3299  1F6A                     	;# 
  3300  1F6B                     	;# 
  3301  1F6C                     	;# 
  3302  1F6D                     	;# 
  3303  1FE4                     	;# 
  3304  1FE5                     	;# 
  3305  1FE6                     	;# 
  3306  1FE7                     	;# 
  3307  1FE8                     	;# 
  3308  1FE9                     	;# 
  3309  1FEA                     	;# 
  3310  1FEB                     	;# 
  3311  1FED                     	;# 
  3312  1FEE                     	;# 
  3313  1FEF                     	;# 
  3314  0000                     	;# 
  3315  0001                     	;# 
  3316  0002                     	;# 
  3317  0003                     	;# 
  3318  0004                     	;# 
  3319  0005                     	;# 
  3320  0006                     	;# 
  3321  0007                     	;# 
  3322  0008                     	;# 
  3323  0009                     	;# 
  3324  000A                     	;# 
  3325  000B                     	;# 
  3326  000C                     	;# 
  3327  000D                     	;# 
  3328  000E                     	;# 
  3329  000F                     	;# 
  3330  0010                     	;# 
  3331  0011                     	;# 
  3332  0012                     	;# 
  3333  0013                     	;# 
  3334  0014                     	;# 
  3335  0015                     	;# 
  3336  0016                     	;# 
  3337  0017                     	;# 
  3338  0018                     	;# 
  3339  0019                     	;# 
  3340  001A                     	;# 
  3341  001C                     	;# 
  3342  001C                     	;# 
  3343  001D                     	;# 
  3344  001D                     	;# 
  3345  001E                     	;# 
  3346  001F                     	;# 
  3347  008C                     	;# 
  3348  008C                     	;# 
  3349  008D                     	;# 
  3350  008E                     	;# 
  3351  008E                     	;# 
  3352  008F                     	;# 
  3353  0090                     	;# 
  3354  0090                     	;# 
  3355  0091                     	;# 
  3356  0093                     	;# 
  3357  0094                     	;# 
  3358  0095                     	;# 
  3359  0096                     	;# 
  3360  0097                     	;# 
  3361  0098                     	;# 
  3362  0099                     	;# 
  3363  009A                     	;# 
  3364  009B                     	;# 
  3365  009C                     	;# 
  3366  009D                     	;# 
  3367  009E                     	;# 
  3368  010C                     	;# 
  3369  010D                     	;# 
  3370  010E                     	;# 
  3371  010E                     	;# 
  3372  010F                     	;# 
  3373  0110                     	;# 
  3374  0110                     	;# 
  3375  0111                     	;# 
  3376  0112                     	;# 
  3377  0112                     	;# 
  3378  0113                     	;# 
  3379  0114                     	;# 
  3380  0114                     	;# 
  3381  0115                     	;# 
  3382  0116                     	;# 
  3383  0116                     	;# 
  3384  0117                     	;# 
  3385  0119                     	;# 
  3386  0119                     	;# 
  3387  0119                     	;# 
  3388  011A                     	;# 
  3389  011A                     	;# 
  3390  011A                     	;# 
  3391  011B                     	;# 
  3392  011B                     	;# 
  3393  011B                     	;# 
  3394  011B                     	;# 
  3395  011B                     	;# 
  3396  011C                     	;# 
  3397  011C                     	;# 
  3398  011C                     	;# 
  3399  011D                     	;# 
  3400  011D                     	;# 
  3401  011D                     	;# 
  3402  011E                     	;# 
  3403  011E                     	;# 
  3404  011E                     	;# 
  3405  011F                     	;# 
  3406  011F                     	;# 
  3407  011F                     	;# 
  3408  011F                     	;# 
  3409  011F                     	;# 
  3410  018C                     	;# 
  3411  018D                     	;# 
  3412  018E                     	;# 
  3413  018F                     	;# 
  3414  0190                     	;# 
  3415  0191                     	;# 
  3416  0192                     	;# 
  3417  0196                     	;# 
  3418  0197                     	;# 
  3419  0198                     	;# 
  3420  0199                     	;# 
  3421  019A                     	;# 
  3422  019B                     	;# 
  3423  019C                     	;# 
  3424  020C                     	;# 
  3425  020C                     	;# 
  3426  020D                     	;# 
  3427  020E                     	;# 
  3428  020F                     	;# 
  3429  020F                     	;# 
  3430  0210                     	;# 
  3431  0210                     	;# 
  3432  0211                     	;# 
  3433  0211                     	;# 
  3434  0212                     	;# 
  3435  0212                     	;# 
  3436  0213                     	;# 
  3437  0214                     	;# 
  3438  0215                     	;# 
  3439  0215                     	;# 
  3440  0216                     	;# 
  3441  0216                     	;# 
  3442  0217                     	;# 
  3443  0217                     	;# 
  3444  0218                     	;# 
  3445  0218                     	;# 
  3446  0219                     	;# 
  3447  021A                     	;# 
  3448  021B                     	;# 
  3449  021B                     	;# 
  3450  021C                     	;# 
  3451  021C                     	;# 
  3452  021D                     	;# 
  3453  021D                     	;# 
  3454  021E                     	;# 
  3455  021F                     	;# 
  3456  028C                     	;# 
  3457  028C                     	;# 
  3458  028D                     	;# 
  3459  028D                     	;# 
  3460  028E                     	;# 
  3461  028F                     	;# 
  3462  0290                     	;# 
  3463  0290                     	;# 
  3464  0291                     	;# 
  3465  0292                     	;# 
  3466  0292                     	;# 
  3467  0293                     	;# 
  3468  0293                     	;# 
  3469  0294                     	;# 
  3470  0295                     	;# 
  3471  0296                     	;# 
  3472  0296                     	;# 
  3473  0297                     	;# 
  3474  0298                     	;# 
  3475  0298                     	;# 
  3476  0299                     	;# 
  3477  0299                     	;# 
  3478  029A                     	;# 
  3479  029B                     	;# 
  3480  029C                     	;# 
  3481  029C                     	;# 
  3482  029D                     	;# 
  3483  030C                     	;# 
  3484  030C                     	;# 
  3485  030D                     	;# 
  3486  030E                     	;# 
  3487  030F                     	;# 
  3488  0310                     	;# 
  3489  0310                     	;# 
  3490  0311                     	;# 
  3491  0312                     	;# 
  3492  0313                     	;# 
  3493  0314                     	;# 
  3494  0314                     	;# 
  3495  0315                     	;# 
  3496  0316                     	;# 
  3497  0317                     	;# 
  3498  0318                     	;# 
  3499  0318                     	;# 
  3500  0319                     	;# 
  3501  031A                     	;# 
  3502  031B                     	;# 
  3503  031C                     	;# 
  3504  031C                     	;# 
  3505  031D                     	;# 
  3506  031E                     	;# 
  3507  031F                     	;# 
  3508  038C                     	;# 
  3509  038D                     	;# 
  3510  038E                     	;# 
  3511  0390                     	;# 
  3512  0391                     	;# 
  3513  0392                     	;# 
  3514  040C                     	;# 
  3515  040D                     	;# 
  3516  040E                     	;# 
  3517  040F                     	;# 
  3518  0410                     	;# 
  3519  0411                     	;# 
  3520  0416                     	;# 
  3521  0416                     	;# 
  3522  0417                     	;# 
  3523  0418                     	;# 
  3524  0418                     	;# 
  3525  0419                     	;# 
  3526  041A                     	;# 
  3527  041A                     	;# 
  3528  041B                     	;# 
  3529  041C                     	;# 
  3530  041C                     	;# 
  3531  041D                     	;# 
  3532  041E                     	;# 
  3533  041F                     	;# 
  3534  048C                     	;# 
  3535  048C                     	;# 
  3536  048D                     	;# 
  3537  048E                     	;# 
  3538  048F                     	;# 
  3539  048F                     	;# 
  3540  0490                     	;# 
  3541  0491                     	;# 
  3542  0492                     	;# 
  3543  0492                     	;# 
  3544  0493                     	;# 
  3545  0494                     	;# 
  3546  0495                     	;# 
  3547  0495                     	;# 
  3548  0496                     	;# 
  3549  0497                     	;# 
  3550  0498                     	;# 
  3551  0499                     	;# 
  3552  049A                     	;# 
  3553  049B                     	;# 
  3554  049C                     	;# 
  3555  049D                     	;# 
  3556  050C                     	;# 
  3557  050C                     	;# 
  3558  050D                     	;# 
  3559  050E                     	;# 
  3560  050F                     	;# 
  3561  050F                     	;# 
  3562  0510                     	;# 
  3563  0511                     	;# 
  3564  0512                     	;# 
  3565  0512                     	;# 
  3566  0513                     	;# 
  3567  0514                     	;# 
  3568  0515                     	;# 
  3569  0515                     	;# 
  3570  0516                     	;# 
  3571  0517                     	;# 
  3572  0518                     	;# 
  3573  0519                     	;# 
  3574  051A                     	;# 
  3575  051B                     	;# 
  3576  051C                     	;# 
  3577  051D                     	;# 
  3578  058C                     	;# 
  3579  058C                     	;# 
  3580  058D                     	;# 
  3581  058E                     	;# 
  3582  058F                     	;# 
  3583  058F                     	;# 
  3584  0590                     	;# 
  3585  0591                     	;# 
  3586  0592                     	;# 
  3587  0593                     	;# 
  3588  060C                     	;# 
  3589  060D                     	;# 
  3590  060E                     	;# 
  3591  060F                     	;# 
  3592  0610                     	;# 
  3593  0611                     	;# 
  3594  0612                     	;# 
  3595  0613                     	;# 
  3596  0614                     	;# 
  3597  0616                     	;# 
  3598  0617                     	;# 
  3599  0618                     	;# 
  3600  0619                     	;# 
  3601  061A                     	;# 
  3602  061B                     	;# 
  3603  061C                     	;# 
  3604  061D                     	;# 
  3605  061E                     	;# 
  3606  068C                     	;# 
  3607  068D                     	;# 
  3608  068E                     	;# 
  3609  068F                     	;# 
  3610  0690                     	;# 
  3611  0691                     	;# 
  3612  0692                     	;# 
  3613  0693                     	;# 
  3614  0694                     	;# 
  3615  070C                     	;# 
  3616  070D                     	;# 
  3617  070E                     	;# 
  3618  070F                     	;# 
  3619  0710                     	;# 
  3620  0711                     	;# 
  3621  0712                     	;# 
  3622  0713                     	;# 
  3623  0714                     	;# 
  3624  0716                     	;# 
  3625  0717                     	;# 
  3626  0718                     	;# 
  3627  0719                     	;# 
  3628  071A                     	;# 
  3629  071B                     	;# 
  3630  071C                     	;# 
  3631  071D                     	;# 
  3632  071E                     	;# 
  3633  0796                     	;# 
  3634  0797                     	;# 
  3635  0798                     	;# 
  3636  0799                     	;# 
  3637  079A                     	;# 
  3638  079B                     	;# 
  3639  080C                     	;# 
  3640  080D                     	;# 
  3641  080E                     	;# 
  3642  080F                     	;# 
  3643  0810                     	;# 
  3644  0811                     	;# 
  3645  0812                     	;# 
  3646  0813                     	;# 
  3647  0814                     	;# 
  3648  081A                     	;# 
  3649  081B                     	;# 
  3650  081C                     	;# 
  3651  081D                     	;# 
  3652  081E                     	;# 
  3653  081F                     	;# 
  3654  088C                     	;# 
  3655  088D                     	;# 
  3656  088E                     	;# 
  3657  088F                     	;# 
  3658  0890                     	;# 
  3659  0891                     	;# 
  3660  0892                     	;# 
  3661  0893                     	;# 
  3662  0895                     	;# 
  3663  0896                     	;# 
  3664  0897                     	;# 
  3665  0898                     	;# 
  3666  0899                     	;# 
  3667  089A                     	;# 
  3668  089B                     	;# 
  3669  090C                     	;# 
  3670  090E                     	;# 
  3671  090F                     	;# 
  3672  091F                     	;# 
  3673  098F                     	;# 
  3674  098F                     	;# 
  3675  0990                     	;# 
  3676  0991                     	;# 
  3677  0992                     	;# 
  3678  0993                     	;# 
  3679  0994                     	;# 
  3680  0995                     	;# 
  3681  0996                     	;# 
  3682  0997                     	;# 
  3683  1E0F                     	;# 
  3684  1E10                     	;# 
  3685  1E11                     	;# 
  3686  1E12                     	;# 
  3687  1E13                     	;# 
  3688  1E14                     	;# 
  3689  1E15                     	;# 
  3690  1E16                     	;# 
  3691  1E17                     	;# 
  3692  1E18                     	;# 
  3693  1E19                     	;# 
  3694  1E1A                     	;# 
  3695  1E1B                     	;# 
  3696  1E1C                     	;# 
  3697  1E1D                     	;# 
  3698  1E1E                     	;# 
  3699  1E1F                     	;# 
  3700  1E20                     	;# 
  3701  1E21                     	;# 
  3702  1E22                     	;# 
  3703  1E23                     	;# 
  3704  1E24                     	;# 
  3705  1E25                     	;# 
  3706  1E26                     	;# 
  3707  1E27                     	;# 
  3708  1E28                     	;# 
  3709  1E29                     	;# 
  3710  1E2A                     	;# 
  3711  1E2B                     	;# 
  3712  1E2C                     	;# 
  3713  1E2D                     	;# 
  3714  1E2E                     	;# 
  3715  1E2F                     	;# 
  3716  1E30                     	;# 
  3717  1E31                     	;# 
  3718  1E32                     	;# 
  3719  1E33                     	;# 
  3720  1E34                     	;# 
  3721  1E35                     	;# 
  3722  1E36                     	;# 
  3723  1E37                     	;# 
  3724  1E8F                     	;# 
  3725  1E90                     	;# 
  3726  1E91                     	;# 
  3727  1E92                     	;# 
  3728  1E93                     	;# 
  3729  1E94                     	;# 
  3730  1E95                     	;# 
  3731  1E96                     	;# 
  3732  1E97                     	;# 
  3733  1E9C                     	;# 
  3734  1E9D                     	;# 
  3735  1E9E                     	;# 
  3736  1EA1                     	;# 
  3737  1EA2                     	;# 
  3738  1EA3                     	;# 
  3739  1EA4                     	;# 
  3740  1EA5                     	;# 
  3741  1EA9                     	;# 
  3742  1EAA                     	;# 
  3743  1EAB                     	;# 
  3744  1EAC                     	;# 
  3745  1EB1                     	;# 
  3746  1EB2                     	;# 
  3747  1EB3                     	;# 
  3748  1EB8                     	;# 
  3749  1EB9                     	;# 
  3750  1EBA                     	;# 
  3751  1EBB                     	;# 
  3752  1EBC                     	;# 
  3753  1EBD                     	;# 
  3754  1EBE                     	;# 
  3755  1EC3                     	;# 
  3756  1EC5                     	;# 
  3757  1EC6                     	;# 
  3758  1EC7                     	;# 
  3759  1EC8                     	;# 
  3760  1EC9                     	;# 
  3761  1ECA                     	;# 
  3762  1ECB                     	;# 
  3763  1ECC                     	;# 
  3764  1F10                     	;# 
  3765  1F11                     	;# 
  3766  1F12                     	;# 
  3767  1F13                     	;# 
  3768  1F14                     	;# 
  3769  1F15                     	;# 
  3770  1F16                     	;# 
  3771  1F17                     	;# 
  3772  1F18                     	;# 
  3773  1F19                     	;# 
  3774  1F1A                     	;# 
  3775  1F1B                     	;# 
  3776  1F1C                     	;# 
  3777  1F1D                     	;# 
  3778  1F1E                     	;# 
  3779  1F1F                     	;# 
  3780  1F20                     	;# 
  3781  1F21                     	;# 
  3782  1F22                     	;# 
  3783  1F23                     	;# 
  3784  1F24                     	;# 
  3785  1F25                     	;# 
  3786  1F26                     	;# 
  3787  1F27                     	;# 
  3788  1F28                     	;# 
  3789  1F29                     	;# 
  3790  1F2A                     	;# 
  3791  1F2B                     	;# 
  3792  1F2C                     	;# 
  3793  1F2D                     	;# 
  3794  1F2E                     	;# 
  3795  1F2F                     	;# 
  3796  1F30                     	;# 
  3797  1F31                     	;# 
  3798  1F32                     	;# 
  3799  1F38                     	;# 
  3800  1F39                     	;# 
  3801  1F3A                     	;# 
  3802  1F3B                     	;# 
  3803  1F3C                     	;# 
  3804  1F3D                     	;# 
  3805  1F3E                     	;# 
  3806  1F3F                     	;# 
  3807  1F40                     	;# 
  3808  1F41                     	;# 
  3809  1F43                     	;# 
  3810  1F44                     	;# 
  3811  1F45                     	;# 
  3812  1F46                     	;# 
  3813  1F47                     	;# 
  3814  1F48                     	;# 
  3815  1F49                     	;# 
  3816  1F4A                     	;# 
  3817  1F4B                     	;# 
  3818  1F4C                     	;# 
  3819  1F4E                     	;# 
  3820  1F4F                     	;# 
  3821  1F50                     	;# 
  3822  1F51                     	;# 
  3823  1F52                     	;# 
  3824  1F53                     	;# 
  3825  1F54                     	;# 
  3826  1F55                     	;# 
  3827  1F56                     	;# 
  3828  1F57                     	;# 
  3829  1F59                     	;# 
  3830  1F5A                     	;# 
  3831  1F5B                     	;# 
  3832  1F5C                     	;# 
  3833  1F5D                     	;# 
  3834  1F61                     	;# 
  3835  1F62                     	;# 
  3836  1F64                     	;# 
  3837  1F65                     	;# 
  3838  1F66                     	;# 
  3839  1F67                     	;# 
  3840  1F68                     	;# 
  3841  1F69                     	;# 
  3842  1F6A                     	;# 
  3843  1F6B                     	;# 
  3844  1F6C                     	;# 
  3845  1F6D                     	;# 
  3846  1FE4                     	;# 
  3847  1FE5                     	;# 
  3848  1FE6                     	;# 
  3849  1FE7                     	;# 
  3850  1FE8                     	;# 
  3851  1FE9                     	;# 
  3852  1FEA                     	;# 
  3853  1FEB                     	;# 
  3854  1FED                     	;# 
  3855  1FEE                     	;# 
  3856  1FEF                     	;# 
  3857  0000                     	;# 
  3858  0001                     	;# 
  3859  0002                     	;# 
  3860  0003                     	;# 
  3861  0004                     	;# 
  3862  0005                     	;# 
  3863  0006                     	;# 
  3864  0007                     	;# 
  3865  0008                     	;# 
  3866  0009                     	;# 
  3867  000A                     	;# 
  3868  000B                     	;# 
  3869  000C                     	;# 
  3870  000D                     	;# 
  3871  000E                     	;# 
  3872  000F                     	;# 
  3873  0010                     	;# 
  3874  0011                     	;# 
  3875  0012                     	;# 
  3876  0013                     	;# 
  3877  0014                     	;# 
  3878  0015                     	;# 
  3879  0016                     	;# 
  3880  0017                     	;# 
  3881  0018                     	;# 
  3882  0019                     	;# 
  3883  001A                     	;# 
  3884  001C                     	;# 
  3885  001C                     	;# 
  3886  001D                     	;# 
  3887  001D                     	;# 
  3888  001E                     	;# 
  3889  001F                     	;# 
  3890  008C                     	;# 
  3891  008C                     	;# 
  3892  008D                     	;# 
  3893  008E                     	;# 
  3894  008E                     	;# 
  3895  008F                     	;# 
  3896  0090                     	;# 
  3897  0090                     	;# 
  3898  0091                     	;# 
  3899  0093                     	;# 
  3900  0094                     	;# 
  3901  0095                     	;# 
  3902  0096                     	;# 
  3903  0097                     	;# 
  3904  0098                     	;# 
  3905  0099                     	;# 
  3906  009A                     	;# 
  3907  009B                     	;# 
  3908  009C                     	;# 
  3909  009D                     	;# 
  3910  009E                     	;# 
  3911  010C                     	;# 
  3912  010D                     	;# 
  3913  010E                     	;# 
  3914  010E                     	;# 
  3915  010F                     	;# 
  3916  0110                     	;# 
  3917  0110                     	;# 
  3918  0111                     	;# 
  3919  0112                     	;# 
  3920  0112                     	;# 
  3921  0113                     	;# 
  3922  0114                     	;# 
  3923  0114                     	;# 
  3924  0115                     	;# 
  3925  0116                     	;# 
  3926  0116                     	;# 
  3927  0117                     	;# 
  3928  0119                     	;# 
  3929  0119                     	;# 
  3930  0119                     	;# 
  3931  011A                     	;# 
  3932  011A                     	;# 
  3933  011A                     	;# 
  3934  011B                     	;# 
  3935  011B                     	;# 
  3936  011B                     	;# 
  3937  011B                     	;# 
  3938  011B                     	;# 
  3939  011C                     	;# 
  3940  011C                     	;# 
  3941  011C                     	;# 
  3942  011D                     	;# 
  3943  011D                     	;# 
  3944  011D                     	;# 
  3945  011E                     	;# 
  3946  011E                     	;# 
  3947  011E                     	;# 
  3948  011F                     	;# 
  3949  011F                     	;# 
  3950  011F                     	;# 
  3951  011F                     	;# 
  3952  011F                     	;# 
  3953  018C                     	;# 
  3954  018D                     	;# 
  3955  018E                     	;# 
  3956  018F                     	;# 
  3957  0190                     	;# 
  3958  0191                     	;# 
  3959  0192                     	;# 
  3960  0196                     	;# 
  3961  0197                     	;# 
  3962  0198                     	;# 
  3963  0199                     	;# 
  3964  019A                     	;# 
  3965  019B                     	;# 
  3966  019C                     	;# 
  3967  020C                     	;# 
  3968  020C                     	;# 
  3969  020D                     	;# 
  3970  020E                     	;# 
  3971  020F                     	;# 
  3972  020F                     	;# 
  3973  0210                     	;# 
  3974  0210                     	;# 
  3975  0211                     	;# 
  3976  0211                     	;# 
  3977  0212                     	;# 
  3978  0212                     	;# 
  3979  0213                     	;# 
  3980  0214                     	;# 
  3981  0215                     	;# 
  3982  0215                     	;# 
  3983  0216                     	;# 
  3984  0216                     	;# 
  3985  0217                     	;# 
  3986  0217                     	;# 
  3987  0218                     	;# 
  3988  0218                     	;# 
  3989  0219                     	;# 
  3990  021A                     	;# 
  3991  021B                     	;# 
  3992  021B                     	;# 
  3993  021C                     	;# 
  3994  021C                     	;# 
  3995  021D                     	;# 
  3996  021D                     	;# 
  3997  021E                     	;# 
  3998  021F                     	;# 
  3999  028C                     	;# 
  4000  028C                     	;# 
  4001  028D                     	;# 
  4002  028D                     	;# 
  4003  028E                     	;# 
  4004  028F                     	;# 
  4005  0290                     	;# 
  4006  0290                     	;# 
  4007  0291                     	;# 
  4008  0292                     	;# 
  4009  0292                     	;# 
  4010  0293                     	;# 
  4011  0293                     	;# 
  4012  0294                     	;# 
  4013  0295                     	;# 
  4014  0296                     	;# 
  4015  0296                     	;# 
  4016  0297                     	;# 
  4017  0298                     	;# 
  4018  0298                     	;# 
  4019  0299                     	;# 
  4020  0299                     	;# 
  4021  029A                     	;# 
  4022  029B                     	;# 
  4023  029C                     	;# 
  4024  029C                     	;# 
  4025  029D                     	;# 
  4026  030C                     	;# 
  4027  030C                     	;# 
  4028  030D                     	;# 
  4029  030E                     	;# 
  4030  030F                     	;# 
  4031  0310                     	;# 
  4032  0310                     	;# 
  4033  0311                     	;# 
  4034  0312                     	;# 
  4035  0313                     	;# 
  4036  0314                     	;# 
  4037  0314                     	;# 
  4038  0315                     	;# 
  4039  0316                     	;# 
  4040  0317                     	;# 
  4041  0318                     	;# 
  4042  0318                     	;# 
  4043  0319                     	;# 
  4044  031A                     	;# 
  4045  031B                     	;# 
  4046  031C                     	;# 
  4047  031C                     	;# 
  4048  031D                     	;# 
  4049  031E                     	;# 
  4050  031F                     	;# 
  4051  038C                     	;# 
  4052  038D                     	;# 
  4053  038E                     	;# 
  4054  0390                     	;# 
  4055  0391                     	;# 
  4056  0392                     	;# 
  4057  040C                     	;# 
  4058  040D                     	;# 
  4059  040E                     	;# 
  4060  040F                     	;# 
  4061  0410                     	;# 
  4062  0411                     	;# 
  4063  0416                     	;# 
  4064  0416                     	;# 
  4065  0417                     	;# 
  4066  0418                     	;# 
  4067  0418                     	;# 
  4068  0419                     	;# 
  4069  041A                     	;# 
  4070  041A                     	;# 
  4071  041B                     	;# 
  4072  041C                     	;# 
  4073  041C                     	;# 
  4074  041D                     	;# 
  4075  041E                     	;# 
  4076  041F                     	;# 
  4077  048C                     	;# 
  4078  048C                     	;# 
  4079  048D                     	;# 
  4080  048E                     	;# 
  4081  048F                     	;# 
  4082  048F                     	;# 
  4083  0490                     	;# 
  4084  0491                     	;# 
  4085  0492                     	;# 
  4086  0492                     	;# 
  4087  0493                     	;# 
  4088  0494                     	;# 
  4089  0495                     	;# 
  4090  0495                     	;# 
  4091  0496                     	;# 
  4092  0497                     	;# 
  4093  0498                     	;# 
  4094  0499                     	;# 
  4095  049A                     	;# 
  4096  049B                     	;# 
  4097  049C                     	;# 
  4098  049D                     	;# 
  4099  050C                     	;# 
  4100  050C                     	;# 
  4101  050D                     	;# 
  4102  050E                     	;# 
  4103  050F                     	;# 
  4104  050F                     	;# 
  4105  0510                     	;# 
  4106  0511                     	;# 
  4107  0512                     	;# 
  4108  0512                     	;# 
  4109  0513                     	;# 
  4110  0514                     	;# 
  4111  0515                     	;# 
  4112  0515                     	;# 
  4113  0516                     	;# 
  4114  0517                     	;# 
  4115  0518                     	;# 
  4116  0519                     	;# 
  4117  051A                     	;# 
  4118  051B                     	;# 
  4119  051C                     	;# 
  4120  051D                     	;# 
  4121  058C                     	;# 
  4122  058C                     	;# 
  4123  058D                     	;# 
  4124  058E                     	;# 
  4125  058F                     	;# 
  4126  058F                     	;# 
  4127  0590                     	;# 
  4128  0591                     	;# 
  4129  0592                     	;# 
  4130  0593                     	;# 
  4131  060C                     	;# 
  4132  060D                     	;# 
  4133  060E                     	;# 
  4134  060F                     	;# 
  4135  0610                     	;# 
  4136  0611                     	;# 
  4137  0612                     	;# 
  4138  0613                     	;# 
  4139  0614                     	;# 
  4140  0616                     	;# 
  4141  0617                     	;# 
  4142  0618                     	;# 
  4143  0619                     	;# 
  4144  061A                     	;# 
  4145  061B                     	;# 
  4146  061C                     	;# 
  4147  061D                     	;# 
  4148  061E                     	;# 
  4149  068C                     	;# 
  4150  068D                     	;# 
  4151  068E                     	;# 
  4152  068F                     	;# 
  4153  0690                     	;# 
  4154  0691                     	;# 
  4155  0692                     	;# 
  4156  0693                     	;# 
  4157  0694                     	;# 
  4158  070C                     	;# 
  4159  070D                     	;# 
  4160  070E                     	;# 
  4161  070F                     	;# 
  4162  0710                     	;# 
  4163  0711                     	;# 
  4164  0712                     	;# 
  4165  0713                     	;# 
  4166  0714                     	;# 
  4167  0716                     	;# 
  4168  0717                     	;# 
  4169  0718                     	;# 
  4170  0719                     	;# 
  4171  071A                     	;# 
  4172  071B                     	;# 
  4173  071C                     	;# 
  4174  071D                     	;# 
  4175  071E                     	;# 
  4176  0796                     	;# 
  4177  0797                     	;# 
  4178  0798                     	;# 
  4179  0799                     	;# 
  4180  079A                     	;# 
  4181  079B                     	;# 
  4182  080C                     	;# 
  4183  080D                     	;# 
  4184  080E                     	;# 
  4185  080F                     	;# 
  4186  0810                     	;# 
  4187  0811                     	;# 
  4188  0812                     	;# 
  4189  0813                     	;# 
  4190  0814                     	;# 
  4191  081A                     	;# 
  4192  081B                     	;# 
  4193  081C                     	;# 
  4194  081D                     	;# 
  4195  081E                     	;# 
  4196  081F                     	;# 
  4197  088C                     	;# 
  4198  088D                     	;# 
  4199  088E                     	;# 
  4200  088F                     	;# 
  4201  0890                     	;# 
  4202  0891                     	;# 
  4203  0892                     	;# 
  4204  0893                     	;# 
  4205  0895                     	;# 
  4206  0896                     	;# 
  4207  0897                     	;# 
  4208  0898                     	;# 
  4209  0899                     	;# 
  4210  089A                     	;# 
  4211  089B                     	;# 
  4212  090C                     	;# 
  4213  090E                     	;# 
  4214  090F                     	;# 
  4215  091F                     	;# 
  4216  098F                     	;# 
  4217  098F                     	;# 
  4218  0990                     	;# 
  4219  0991                     	;# 
  4220  0992                     	;# 
  4221  0993                     	;# 
  4222  0994                     	;# 
  4223  0995                     	;# 
  4224  0996                     	;# 
  4225  0997                     	;# 
  4226  1E0F                     	;# 
  4227  1E10                     	;# 
  4228  1E11                     	;# 
  4229  1E12                     	;# 
  4230  1E13                     	;# 
  4231  1E14                     	;# 
  4232  1E15                     	;# 
  4233  1E16                     	;# 
  4234  1E17                     	;# 
  4235  1E18                     	;# 
  4236  1E19                     	;# 
  4237  1E1A                     	;# 
  4238  1E1B                     	;# 
  4239  1E1C                     	;# 
  4240  1E1D                     	;# 
  4241  1E1E                     	;# 
  4242  1E1F                     	;# 
  4243  1E20                     	;# 
  4244  1E21                     	;# 
  4245  1E22                     	;# 
  4246  1E23                     	;# 
  4247  1E24                     	;# 
  4248  1E25                     	;# 
  4249  1E26                     	;# 
  4250  1E27                     	;# 
  4251  1E28                     	;# 
  4252  1E29                     	;# 
  4253  1E2A                     	;# 
  4254  1E2B                     	;# 
  4255  1E2C                     	;# 
  4256  1E2D                     	;# 
  4257  1E2E                     	;# 
  4258  1E2F                     	;# 
  4259  1E30                     	;# 
  4260  1E31                     	;# 
  4261  1E32                     	;# 
  4262  1E33                     	;# 
  4263  1E34                     	;# 
  4264  1E35                     	;# 
  4265  1E36                     	;# 
  4266  1E37                     	;# 
  4267  1E8F                     	;# 
  4268  1E90                     	;# 
  4269  1E91                     	;# 
  4270  1E92                     	;# 
  4271  1E93                     	;# 
  4272  1E94                     	;# 
  4273  1E95                     	;# 
  4274  1E96                     	;# 
  4275  1E97                     	;# 
  4276  1E9C                     	;# 
  4277  1E9D                     	;# 
  4278  1E9E                     	;# 
  4279  1EA1                     	;# 
  4280  1EA2                     	;# 
  4281  1EA3                     	;# 
  4282  1EA4                     	;# 
  4283  1EA5                     	;# 
  4284  1EA9                     	;# 
  4285  1EAA                     	;# 
  4286  1EAB                     	;# 
  4287  1EAC                     	;# 
  4288  1EB1                     	;# 
  4289  1EB2                     	;# 
  4290  1EB3                     	;# 
  4291  1EB8                     	;# 
  4292  1EB9                     	;# 
  4293  1EBA                     	;# 
  4294  1EBB                     	;# 
  4295  1EBC                     	;# 
  4296  1EBD                     	;# 
  4297  1EBE                     	;# 
  4298  1EC3                     	;# 
  4299  1EC5                     	;# 
  4300  1EC6                     	;# 
  4301  1EC7                     	;# 
  4302  1EC8                     	;# 
  4303  1EC9                     	;# 
  4304  1ECA                     	;# 
  4305  1ECB                     	;# 
  4306  1ECC                     	;# 
  4307  1F10                     	;# 
  4308  1F11                     	;# 
  4309  1F12                     	;# 
  4310  1F13                     	;# 
  4311  1F14                     	;# 
  4312  1F15                     	;# 
  4313  1F16                     	;# 
  4314  1F17                     	;# 
  4315  1F18                     	;# 
  4316  1F19                     	;# 
  4317  1F1A                     	;# 
  4318  1F1B                     	;# 
  4319  1F1C                     	;# 
  4320  1F1D                     	;# 
  4321  1F1E                     	;# 
  4322  1F1F                     	;# 
  4323  1F20                     	;# 
  4324  1F21                     	;# 
  4325  1F22                     	;# 
  4326  1F23                     	;# 
  4327  1F24                     	;# 
  4328  1F25                     	;# 
  4329  1F26                     	;# 
  4330  1F27                     	;# 
  4331  1F28                     	;# 
  4332  1F29                     	;# 
  4333  1F2A                     	;# 
  4334  1F2B                     	;# 
  4335  1F2C                     	;# 
  4336  1F2D                     	;# 
  4337  1F2E                     	;# 
  4338  1F2F                     	;# 
  4339  1F30                     	;# 
  4340  1F31                     	;# 
  4341  1F32                     	;# 
  4342  1F38                     	;# 
  4343  1F39                     	;# 
  4344  1F3A                     	;# 
  4345  1F3B                     	;# 
  4346  1F3C                     	;# 
  4347  1F3D                     	;# 
  4348  1F3E                     	;# 
  4349  1F3F                     	;# 
  4350  1F40                     	;# 
  4351  1F41                     	;# 
  4352  1F43                     	;# 
  4353  1F44                     	;# 
  4354  1F45                     	;# 
  4355  1F46                     	;# 
  4356  1F47                     	;# 
  4357  1F48                     	;# 
  4358  1F49                     	;# 
  4359  1F4A                     	;# 
  4360  1F4B                     	;# 
  4361  1F4C                     	;# 
  4362  1F4E                     	;# 
  4363  1F4F                     	;# 
  4364  1F50                     	;# 
  4365  1F51                     	;# 
  4366  1F52                     	;# 
  4367  1F53                     	;# 
  4368  1F54                     	;# 
  4369  1F55                     	;# 
  4370  1F56                     	;# 
  4371  1F57                     	;# 
  4372  1F59                     	;# 
  4373  1F5A                     	;# 
  4374  1F5B                     	;# 
  4375  1F5C                     	;# 
  4376  1F5D                     	;# 
  4377  1F61                     	;# 
  4378  1F62                     	;# 
  4379  1F64                     	;# 
  4380  1F65                     	;# 
  4381  1F66                     	;# 
  4382  1F67                     	;# 
  4383  1F68                     	;# 
  4384  1F69                     	;# 
  4385  1F6A                     	;# 
  4386  1F6B                     	;# 
  4387  1F6C                     	;# 
  4388  1F6D                     	;# 
  4389  1FE4                     	;# 
  4390  1FE5                     	;# 
  4391  1FE6                     	;# 
  4392  1FE7                     	;# 
  4393  1FE8                     	;# 
  4394  1FE9                     	;# 
  4395  1FEA                     	;# 
  4396  1FEB                     	;# 
  4397  1FED                     	;# 
  4398  1FEE                     	;# 
  4399  1FEF                     	;# 
  4400                           
  4401                           	psect	idataCOMMON
  4402  0000                     __pidataCOMMON:	
  4403                           
  4404                           	psect	idataBANK0
  4405  0269                     __pidataBANK0:	
  4406                           ;initializer for _STORED_in_order
  4407                           
  4408  0269  3401               	retlw	1
  4409                           
  4410                           ;initializer for _STORED_in_stop_order
  4411  026A  3401               	retlw	1
  4412                           
  4413                           ;initializer for _ES_out_stop_order
  4414  026B  3401               	retlw	1
  4415                           
  4416                           ;initializer for _ES_in_stop_order
  4417  026C  3401               	retlw	1
  4418                           
  4419                           ;initializer for _in_stop_order
  4420  026D  3401               	retlw	1
  4421                           
  4422                           ;initializer for _in_order
  4423  026E  3401               	retlw	1
  4424                           
  4425                           ;initializer for _out_stop_order
  4426  026F  3401               	retlw	1
  4427                           
  4428                           ;initializer for _out_order
  4429  0270  3401               	retlw	1
  4430                           
  4431                           	psect	nvBANK0
  4432  004C                     __pnvBANK0:	
  4433  004C                     _timer0ReloadVal16bit:	
  4434  004C                     	ds	2
  4435  0016                     _LATAbits	set	22
  4436  0019                     _LATDbits	set	25
  4437  0017                     _LATBbits	set	23
  4438  000C                     _PORTAbits	set	12
  4439  0018                     _LATCbits	set	24
  4440  0010                     _PORTEbits	set	16
  4441  000D                     _PORTBbits	set	13
  4442  0014                     _TRISD	set	20
  4443  0013                     _TRISC	set	19
  4444  0012                     _TRISB	set	18
  4445  0011                     _TRISA	set	17
  4446  0015                     _TRISE	set	21
  4447  0018                     _LATC	set	24
  4448  0017                     _LATB	set	23
  4449  0016                     _LATA	set	22
  4450  0019                     _LATD	set	25
  4451  001A                     _LATE	set	26
  4452  001E                     _T0CON0	set	30
  4453  001C                     _TMR0L	set	28
  4454  001D                     _TMR0H	set	29
  4455  001F                     _T0CON1	set	31
  4456  008C                     _ADRESL	set	140
  4457  008D                     _ADRESH	set	141
  4458  0093                     _ADCON0bits	set	147
  4459  0093                     _ADCON0	set	147
  4460  0098                     _ADCLK	set	152
  4461  0099                     _ADACT	set	153
  4462  009A                     _ADREF	set	154
  4463  0097                     _ADSTAT	set	151
  4464  0096                     _ADCON3	set	150
  4465  0095                     _ADCON2	set	149
  4466  0094                     _ADCON1	set	148
  4467  009B                     _ADCAP	set	155
  4468  009E                     _ADPCH	set	158
  4469  010D                     _ADRPT	set	269
  4470  0113                     _ADSTPTH	set	275
  4471  0112                     _ADSTPTL	set	274
  4472  0111                     _ADUTHH	set	273
  4473  0110                     _ADUTHL	set	272
  4474  010F                     _ADLTHH	set	271
  4475  010E                     _ADLTHL	set	270
  4476  070C                     _PIR0bits	set	1804
  4477  079B                     _PMD5	set	1947
  4478  079A                     _PMD4	set	1946
  4479  0799                     _PMD3	set	1945
  4480  0798                     _PMD2	set	1944
  4481  0797                     _PMD1	set	1943
  4482  0796                     _PMD0	set	1942
  4483  0892                     _OSCTUNE	set	2194
  4484  0893                     _OSCFRQ	set	2195
  4485  0891                     _OSCEN	set	2193
  4486  088F                     _OSCCON3	set	2191
  4487  088D                     _OSCCON1	set	2189
  4488  1F5B                     _ODCOND	set	8027
  4489  1F50                     _ODCONC	set	8016
  4490  1F45                     _ODCONB	set	8005
  4491  1F3A                     _ODCONA	set	7994
  4492  1F66                     _ODCONE	set	8038
  4493  1F4F                     _WPUC	set	8015
  4494  1F39                     _WPUA	set	7993
  4495  1F44                     _WPUB	set	8004
  4496  1F65                     _WPUE	set	8037
  4497  1F5A                     _WPUD	set	8026
  4498  1F38                     _ANSELA	set	7992
  4499  1F64                     _ANSELE	set	8036
  4500  1F43                     _ANSELB	set	8003
  4501  1F4E                     _ANSELC	set	8014
  4502  1F59                     _ANSELD	set	8025
  4503                           
  4504                           ; #config settings
  4505  0000                     
  4506                           	psect	cinit
  4507  0415                     start_initialization:	
  4508  0415                     __initialization:	
  4509                           
  4510                           ;initializer for _ES_out_order
  4511  0415  3001               	movlw	1
  4512  0416  00FC               	movwf	__pdataCOMMON& (0+127)
  4513                           
  4514                           ;initializer for _ES_in_order
  4515  0417  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
  4516                           
  4517                           ; Initialize objects allocated to BANK0
  4518  0418  3069               	movlw	low __pidataBANK0
  4519  0419  0084               	movwf	4
  4520  041A  3082               	movlw	(high __pidataBANK0)| (0+128)
  4521  041B  0085               	movwf	5
  4522  041C  3044               	movlw	low __pdataBANK0
  4523  041D  0086               	movwf	6
  4524  041E  3000               	movlw	high __pdataBANK0
  4525  041F  0087               	movwf	7
  4526  0420  3008               	movlw	8
  4527  0421  3182  2263  3184   	fcall	init_ram
  4528  0424  3020               	movlw	low __pbssBANK0
  4529                           
  4530                           ; Clear objects allocated to BITCOMMON
  4531  0425  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  4532  0426  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  4533  0427  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
  4534                           
  4535                           ; Clear objects allocated to BANK0
  4536  0428  0084               	movwf	4
  4537  0429  3000               	movlw	high __pbssBANK0
  4538  042A  0085               	movwf	5
  4539  042B  3024               	movlw	36
  4540  042C  3182  225D  3184   	fcall	clear_ram0
  4541                           
  4542                           ; Clear objects allocated to BANK1
  4543  042F  30A0               	movlw	low __pbssBANK1
  4544  0430  0084               	movwf	4
  4545  0431  3000               	movlw	high __pbssBANK1
  4546  0432  0085               	movwf	5
  4547  0433  3028               	movlw	40
  4548  0434  3182  225D  3184   	fcall	clear_ram0
  4549  0437                     end_of_initialization:	
  4550                           ;End of C runtime variable initialization code
  4551                           
  4552  0437                     __end_of__initialization:	
  4553  0437  0140               	movlb	0
  4554  0438  2C39               	ljmp	_main	;jump to C main() function
  4555  0439                     __pmaintext:	
  4556 ;;
  4557 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4558 ;;
  4559 ;; *************** function _main *****************
  4560 ;; Defined at:
  4561 ;;		line 70 in file "main.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : B3F/0
  4572 ;;		On exit  : 3F/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4579 ;;Total ram usage:        2 bytes
  4580 ;; Hardware stack levels required when called:    2
  4581 ;; This function calls:
  4582 ;;		_ADCC_GetSingleConversion
  4583 ;;		_ALARM_CTRL
  4584 ;;		_INPUT_COLLECT
  4585 ;;		_LED_CTRL
  4586 ;;		_MOTOR_CTRL
  4587 ;;		_SYSTEM_Initialize
  4588 ;;		_TMR0_Initialize
  4589 ;;		___lwdiv
  4590 ;;		_delay
  4591 ;; This function is called by:
  4592 ;;		Startup code after reset
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function _main
  4598  0439                     _main:	
  4599                           
  4600                           ;main.c: 74: SYSTEM_Initialize();
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4604  0439  3182  228A  3184   	fcall	_SYSTEM_Initialize
  4605                           
  4606                           ;main.c: 75: sum_value=0;
  4607  043C  01A8               	clrf	_sum_value
  4608  043D  01A9               	clrf	_sum_value+1
  4609                           
  4610                           ;main.c: 76: i_avg=0;
  4611  043E  01B4               	clrf	_i_avg
  4612                           
  4613                           ;main.c: 77: test_time=0;
  4614  043F  01B0               	clrf	_test_time
  4615  0440  01B1               	clrf	_test_time+1
  4616                           
  4617                           ;main.c: 78: motor_run_1s=0;
  4618  0441  01AE               	clrf	_motor_run_1s
  4619  0442  01AF               	clrf	_motor_run_1s+1
  4620                           
  4621                           ;main.c: 80: flag_overload_in=0;
  4622  0443  1170               	bcf	_flag_overload_out/(0+8),_flag_overload_out& (0+7)
  4623                           
  4624                           ;main.c: 81: flag_overload_in_ES=0;
  4625  0444  10F0               	bcf	_flag_overload_in_ES/(0+8),_flag_overload_in_ES& (0+7)
  4626                           
  4627                           ;main.c: 82: flag_overload_out_ES=0;
  4628  0445  1070               	bcf	_flag_overload_out_ES/(0+8),_flag_overload_out_ES& (0+7)
  4629                           
  4630                           ;main.c: 84: overload_time_in=0;
  4631  0446  01A6               	clrf	_overload_time_out
  4632  0447  01A7               	clrf	_overload_time_out+1
  4633                           
  4634                           ;main.c: 85: overload_time_out_ES=0;
  4635  0448  01A4               	clrf	_overload_time_out_ES
  4636  0449  01A5               	clrf	_overload_time_out_ES+1
  4637                           
  4638                           ;main.c: 86: overload_time_in_ES=0;
  4639  044A  01A2               	clrf	_overload_time_in_ES
  4640  044B  01A3               	clrf	_overload_time_in_ES+1
  4641                           
  4642                           ;main.c: 87: FLAG_RESET_ALARM=0;
  4643  044C  1072               	bcf	_FLAG_RESET_ALARM/(0+8),_FLAG_RESET_ALARM& (0+7)
  4644                           
  4645                           ;main.c: 88: LATCbits.LATC2=1;
  4646  044D  1518               	bsf	24,2	;volatile
  4647  044E                     l3187:	
  4648                           
  4649                           ;main.c: 104: {
  4650                           ;main.c: 105: if(PIR0bits.TMR0IF)
  4651  044E  014E               	movlb	14	; select bank14
  4652  044F  1E8C               	btfss	12,5	;volatile
  4653  0450  2C4E               	goto	l3187
  4654                           
  4655                           ;main.c: 106: {
  4656                           ;main.c: 108: if((PORTEbits.RE0)&&(PORTAbits.RA5)&&(!PORTEbits.RE2))
  4657  0451  0140               	movlb	0	; select bank0
  4658  0452  1810               	btfsc	16,0	;volatile
  4659  0453  1E8C               	btfss	12,5	;volatile
  4660  0454  2C61               	goto	l3211
  4661  0455  1910               	btfsc	16,2	;volatile
  4662  0456  2C61               	goto	l3211
  4663  0457  300B               	movlw	11
  4664                           
  4665                           ;main.c: 109: {
  4666                           ;main.c: 110: time_2ms_12++;
  4667  0458  0AB3               	incf	_time_2ms_12,f
  4668                           
  4669                           ;main.c: 111: if(time_2ms_12>10)
  4670  0459  0233               	subwf	_time_2ms_12,w
  4671  045A  1C03               	skipc
  4672  045B  2C4E               	goto	l3187
  4673                           
  4674                           ;main.c: 112: {
  4675                           ;main.c: 113: time_2ms_12=15;
  4676  045C  300F               	movlw	15
  4677  045D  00B3               	movwf	_time_2ms_12
  4678                           
  4679                           ;main.c: 114: FLAG_QS_MOTOR_IN=0;
  4680                           
  4681                           ;main.c: 115: FLAG_QS_MOTOR_OUT=0;
  4682                           
  4683                           ;main.c: 116: FLAG_ES_MOTOR_IN=0;
  4684                           
  4685                           ;main.c: 117: FLAG_ES_MOTOR_OUT=1;
  4686                           
  4687                           ;main.c: 118: FLAG_STORED_IN=0;
  4688  045E  27C6  3184         	fcall	PL16	;call to abstracted procedure
  4689                           
  4690                           ;main.c: 119: break;
  4691  0460  2C68               	goto	l3217
  4692  0461                     l3211:	
  4693  0461  300B               	movlw	11
  4694                           
  4695                           ;main.c: 122: else
  4696                           ;main.c: 123: {
  4697                           ;main.c: 124: time_2ms_13++;
  4698  0462  0AB2               	incf	_time_2ms_13,f
  4699                           
  4700                           ;main.c: 125: if(time_2ms_13>10)
  4701  0463  0232               	subwf	_time_2ms_13,w
  4702  0464  1C03               	skipc
  4703  0465  2C4E               	goto	l3187
  4704                           
  4705                           ;main.c: 126: {
  4706                           ;main.c: 127: time_2ms_13=15;
  4707  0466  300F               	movlw	15
  4708  0467  00B2               	movwf	_time_2ms_13
  4709  0468                     l3217:	
  4710                           ;main.c: 128: break;
  4711                           
  4712                           
  4713                           ;main.c: 129: }
  4714                           ;main.c: 130: }
  4715                           ;main.c: 132: }
  4716                           ;main.c: 133: }
  4717                           ;main.c: 134: time_2ms_12=0;
  4718  0468  01B3               	clrf	_time_2ms_12
  4719                           
  4720                           ;main.c: 135: time_2ms_13=0;
  4721  0469  01B2               	clrf	_time_2ms_13
  4722  046A                     l758:	
  4723                           ;main.c: 136: while (1)
  4724                           
  4725  046A  0064               	clrwdt	;# 
  4726                           
  4727                           ;main.c: 143: if((5==STORED_in_order))
  4728  046B  3005               	movlw	5
  4729  046C  0140               	movlb	0	; select bank0
  4730  046D  0644               	xorwf	_STORED_in_order,w
  4731  046E  1D03               	btfss	3,2
  4732  046F  2C7B               	goto	l3229
  4733                           
  4734                           ;main.c: 144: {
  4735                           ;main.c: 145: ad_value_I_TEST = ADCC_GetSingleConversion(I_TEST_AD_IN);
  4736  0470  3000               	movlw	0
  4737  0471  258D  3184         	fcall	_ADCC_GetSingleConversion
  4738                           
  4739                           ;main.c: 146: if(ad_value_I_TEST>696)
  4740  0473  27B3  3184         	fcall	PL6	;call to abstracted procedure
  4741  0475  1903               	skipnz
  4742  0476  022A               	subwf	_ad_value_I_TEST,w
  4743  0477  1C03               	skipc
  4744  0478  2C7B               	goto	l3229
  4745                           
  4746                           ;main.c: 147: {
  4747                           ;main.c: 148: LATDbits.LATD4=0;
  4748                           
  4749                           ;main.c: 149: flag_overload_out=1;
  4750                           
  4751                           ;main.c: 150: overload_time_out=0;
  4752  0479  27CC  3184         	fcall	PL18	;call to abstracted procedure
  4753  047B                     l3229:	
  4754                           
  4755                           ;main.c: 151: }
  4756                           ;main.c: 152: }
  4757                           ;main.c: 153: if((5==ES_in_order))
  4758  047B  3005               	movlw	5
  4759  047C  067D               	xorwf	_ES_in_order,w
  4760  047D  1D03               	btfss	3,2
  4761  047E  2C8B               	goto	l3239
  4762                           
  4763                           ;main.c: 154: {
  4764                           ;main.c: 155: ad_value_I_TEST = ADCC_GetSingleConversion(I_TEST_AD_IN);
  4765  047F  3000               	movlw	0
  4766  0480  258D  3184         	fcall	_ADCC_GetSingleConversion
  4767                           
  4768                           ;main.c: 156: if(ad_value_I_TEST>696)
  4769  0482  27B3  3184         	fcall	PL6	;call to abstracted procedure
  4770  0484  1903               	skipnz
  4771  0485  022A               	subwf	_ad_value_I_TEST,w
  4772  0486  1C03               	skipc
  4773  0487  2C99               	goto	l3249
  4774                           
  4775                           ;main.c: 157: {
  4776                           ;main.c: 158: LATDbits.LATD7=0;
  4777                           
  4778                           ;main.c: 159: flag_overload_in_ES=1;
  4779                           
  4780                           ;main.c: 160: overload_time_in_ES=0;
  4781  0488  27D1  3184         	fcall	PL20	;call to abstracted procedure
  4782  048A  2C99               	goto	l3249
  4783  048B                     l3239:	
  4784                           
  4785                           ;main.c: 163: else if((5==ES_out_order))
  4786  048B  3005               	movlw	5
  4787  048C  067C               	xorwf	_ES_out_order,w
  4788  048D  1D03               	btfss	3,2
  4789  048E  2C99               	goto	l3249
  4790                           
  4791                           ;main.c: 164: {
  4792                           ;main.c: 165: ad_value_I_TEST = ADCC_GetSingleConversion(I_TEST_AD_IN);
  4793  048F  3000               	movlw	0
  4794  0490  258D  3184         	fcall	_ADCC_GetSingleConversion
  4795                           
  4796                           ;main.c: 166: if(ad_value_I_TEST>696)
  4797  0492  27B3  3184         	fcall	PL6	;call to abstracted procedure
  4798  0494  1903               	skipnz
  4799  0495  022A               	subwf	_ad_value_I_TEST,w
  4800  0496  1C03               	skipc
  4801  0497  2C99               	goto	l3249
  4802                           
  4803                           ;main.c: 167: {
  4804                           ;main.c: 168: LATDbits.LATD6=0;
  4805                           
  4806                           ;main.c: 169: flag_overload_out_ES=1;
  4807                           
  4808                           ;main.c: 170: overload_time_out_ES=0;
  4809  0498  27D6               	fcall	PL22	;call to abstracted procedure
  4810  0499                     l3249:	
  4811                           
  4812                           ;main.c: 171: }
  4813                           ;main.c: 172: }
  4814                           ;main.c: 173: delay(1);
  4815  0499  01F3               	clrf	delay@x
  4816  049A  0AF3               	incf	delay@x,f
  4817  049B  01F4               	clrf	delay@x+1
  4818  049C  3182  2271  3184   	fcall	_delay
  4819                           
  4820                           ;main.c: 175: if(PIR0bits.TMR0IF)
  4821  049F  014E               	movlb	14	; select bank14
  4822  04A0  1E8C               	btfss	12,5	;volatile
  4823  04A1  2C6A               	goto	l758
  4824                           
  4825                           ;main.c: 176: {
  4826                           ;main.c: 178: TMR0_Initialize();
  4827  04A2  3182  22E3  3184   	fcall	_TMR0_Initialize
  4828                           
  4829                           ;main.c: 179: INPUT_COLLECT();
  4830  04A5  25CE  3184         	fcall	_INPUT_COLLECT
  4831                           
  4832                           ;main.c: 180: if((5==out_order)||(5==in_order)||(5==ES_in_order)||(5==ES_out_order)||(5=
      +                          =STORED_in_order))
  4833  04A7  3005               	movlw	5
  4834  04A8  064B               	xorwf	_out_order,w
  4835  04A9  1903               	btfsc	3,2
  4836  04AA  2CBB               	goto	l3265
  4837  04AB  3005               	movlw	5
  4838  04AC  0649               	xorwf	_in_order,w
  4839  04AD  1903               	btfsc	3,2
  4840  04AE  2CBB               	goto	l3265
  4841  04AF  3005               	movlw	5
  4842  04B0  067D               	xorwf	_ES_in_order,w
  4843  04B1  1903               	btfsc	3,2
  4844  04B2  2CBB               	goto	l3265
  4845  04B3  3005               	movlw	5
  4846  04B4  067C               	xorwf	_ES_out_order,w
  4847  04B5  1903               	btfsc	3,2
  4848  04B6  2CBB               	goto	l3265
  4849  04B7  3005               	movlw	5
  4850  04B8  0644               	xorwf	_STORED_in_order,w
  4851  04B9  1D03               	btfss	3,2
  4852  04BA  2D3B               	goto	l3325
  4853  04BB                     l3265:	
  4854                           
  4855                           ;main.c: 181: {
  4856                           ;main.c: 182: test_time++;
  4857  04BB  0AB0               	incf	_test_time,f
  4858  04BC  1903               	skipnz
  4859  04BD  0AB1               	incf	_test_time+1,f
  4860                           
  4861                           ;main.c: 183: if(test_time>=100)
  4862  04BE  3000               	movlw	0
  4863  04BF  0231               	subwf	_test_time+1,w
  4864  04C0  3064               	movlw	100
  4865  04C1  1903               	skipnz
  4866  04C2  0230               	subwf	_test_time,w
  4867  04C3  1C03               	skipc
  4868  04C4  2CE4               	goto	l3287
  4869  04C5  3005               	movlw	5
  4870                           
  4871                           ;main.c: 184: {
  4872                           ;main.c: 185: test_time=0;
  4873  04C6  01B0               	clrf	_test_time
  4874  04C7  01B1               	clrf	_test_time+1
  4875                           
  4876                           ;main.c: 186: if((5==ES_in_order)||(5==ES_out_order)||(5==STORED_in_order))
  4877  04C8  067D               	xorwf	_ES_in_order,w
  4878  04C9  1903               	btfsc	3,2
  4879  04CA  2CD3               	goto	l3277
  4880  04CB  3005               	movlw	5
  4881  04CC  067C               	xorwf	_ES_out_order,w
  4882  04CD  1903               	btfsc	3,2
  4883  04CE  2CD3               	goto	l3277
  4884  04CF  3005               	movlw	5
  4885  04D0  0644               	xorwf	_STORED_in_order,w
  4886  04D1  1D03               	btfss	3,2
  4887  04D2  2CE1               	goto	l771
  4888  04D3                     l3277:	
  4889                           
  4890                           ;main.c: 187: {
  4891                           ;main.c: 188: motor_run_1s++;
  4892  04D3  0AAE               	incf	_motor_run_1s,f
  4893  04D4  1903               	skipnz
  4894  04D5  0AAF               	incf	_motor_run_1s+1,f
  4895                           
  4896                           ;main.c: 189: if(motor_run_1s>=75)
  4897  04D6  3000               	movlw	0
  4898  04D7  022F               	subwf	_motor_run_1s+1,w
  4899  04D8  304B               	movlw	75
  4900  04D9  1903               	skipnz
  4901  04DA  022E               	subwf	_motor_run_1s,w
  4902  04DB  1C03               	skipc
  4903  04DC  2CE4               	goto	l3287
  4904                           
  4905                           ;main.c: 190: {
  4906                           ;main.c: 191: motor_run_1s=0;
  4907  04DD  01AE               	clrf	_motor_run_1s
  4908  04DE  01AF               	clrf	_motor_run_1s+1
  4909                           
  4910                           ;main.c: 192: FLAG_OVER_TIME_30S=1;
  4911  04DF  1670               	bsf	_FLAG_OVER_TIME_30S/(0+8),_FLAG_OVER_TIME_30S& (0+7)
  4912  04E0  2CE4               	goto	l3287
  4913  04E1                     l771:	
  4914                           
  4915                           ;main.c: 195: else
  4916                           ;main.c: 196: {
  4917                           ;main.c: 197: FLAG_OVER_TIME_30S=1;
  4918  04E1  1670               	bsf	_FLAG_OVER_TIME_30S/(0+8),_FLAG_OVER_TIME_30S& (0+7)
  4919                           
  4920                           ;main.c: 198: test_time=0;
  4921  04E2  01B0               	clrf	_test_time
  4922  04E3  01B1               	clrf	_test_time+1
  4923  04E4                     l3287:	
  4924                           
  4925                           ;main.c: 199: }
  4926                           ;main.c: 200: }
  4927                           ;main.c: 203: ad_value[i_avg] = ADCC_GetSingleConversion(I_TEST_AD_IN);
  4928  04E4  3000               	movlw	0
  4929  04E5  258D  3184         	fcall	_ADCC_GetSingleConversion
  4930  04E7  0140               	movlb	0	; select bank0
  4931  04E8  3534               	lslf	_i_avg,w
  4932  04E9  3EA0               	addlw	(low (_ad_value| 0))& (0+255)
  4933  04EA  0086               	movwf	6
  4934  04EB  0187               	clrf	7
  4935  04EC  0873               	movf	?_ADCC_GetSingleConversion,w
  4936  04ED  3FC0               	movwi [0]fsr1
  4937  04EE  0874               	movf	?_ADCC_GetSingleConversion+1,w
  4938  04EF  3FC1               	movwi [1]fsr1
  4939                           
  4940                           ;main.c: 204: sum_value=sum_value+ad_value[i_avg];
  4941  04F0  3534               	lslf	_i_avg,w
  4942  04F1  3EA0               	addlw	(low (_ad_value| 0))& (0+255)
  4943  04F2  0086               	movwf	6
  4944  04F3  3F40               	moviw [0]fsr1
  4945  04F4  00FA               	movwf	??_main
  4946  04F5  3F41               	moviw [1]fsr1
  4947  04F6  00FB               	movwf	??_main+1
  4948  04F7  087A               	movf	??_main,w
  4949  04F8  07A8               	addwf	_sum_value,f
  4950  04F9  087B               	movf	??_main+1,w
  4951  04FA  3DA9               	addwfc	_sum_value+1,f
  4952  04FB  300A               	movlw	10
  4953                           
  4954                           ;main.c: 205: i_avg++;
  4955  04FC  0AB4               	incf	_i_avg,f
  4956                           
  4957                           ;main.c: 206: if(i_avg>=10)
  4958  04FD  0234               	subwf	_i_avg,w
  4959  04FE  1C03               	skipc
  4960  04FF  2D17               	goto	l3305
  4961  0500  300A               	movlw	10
  4962                           
  4963                           ;main.c: 207: {
  4964                           ;main.c: 208: i_avg=0;
  4965  0501  01B4               	clrf	_i_avg
  4966                           
  4967                           ;main.c: 209: ad_value_I_TEST_avg=sum_value/10;
  4968  0502  00F3               	movwf	___lwdiv@divisor
  4969  0503  01F4               	clrf	___lwdiv@divisor+1
  4970  0504  0829               	movf	_sum_value+1,w
  4971  0505  00F6               	movwf	___lwdiv@dividend+1
  4972  0506  0828               	movf	_sum_value,w
  4973  0507  00F5               	movwf	___lwdiv@dividend
  4974  0508  27DB  3184         	fcall	___lwdiv
  4975  050A  0874               	movf	?___lwdiv+1,w
  4976  050B  00A1               	movwf	_ad_value_I_TEST_avg+1
  4977  050C  0873               	movf	?___lwdiv,w
  4978  050D  00A0               	movwf	_ad_value_I_TEST_avg
  4979  050E  3000               	movlw	0
  4980                           
  4981                           ;main.c: 210: sum_value=0;
  4982  050F  01A8               	clrf	_sum_value
  4983  0510  01A9               	clrf	_sum_value+1
  4984                           
  4985                           ;main.c: 211: if(ad_value_I_TEST_avg>232)
  4986  0511  0221               	subwf	_ad_value_I_TEST_avg+1,w
  4987  0512  30E9               	movlw	233
  4988  0513  1903               	skipnz
  4989  0514  0220               	subwf	_ad_value_I_TEST_avg,w
  4990  0515  1803               	btfsc	3,0
  4991                           
  4992                           ;main.c: 212: {
  4993                           ;main.c: 214: FLAG_OVER_CURRENT=1;
  4994  0516  15F0               	bsf	_FLAG_OVER_CURRENT/(0+8),_FLAG_OVER_CURRENT& (0+7)
  4995  0517                     l3305:	
  4996                           
  4997                           ;main.c: 215: }
  4998                           ;main.c: 216: }
  4999                           ;main.c: 218: if(ad_value[i_avg]>696)
  5000  0517  3534               	lslf	_i_avg,w
  5001  0518  3EA0               	addlw	(low (_ad_value| 0))& (0+255)
  5002  0519  0086               	movwf	6
  5003  051A  0187               	clrf	7
  5004  051B  3F40               	moviw [0]fsr1
  5005  051C  00FA               	movwf	??_main
  5006  051D  3F41               	moviw [1]fsr1
  5007  051E  00FB               	movwf	??_main+1
  5008  051F  3002               	movlw	2
  5009  0520  027B               	subwf	??_main+1,w
  5010  0521  30B9               	movlw	185
  5011  0522  1903               	skipnz
  5012  0523  027A               	subwf	??_main,w
  5013  0524  1C03               	skipc
  5014  0525  2D3E               	goto	l3327
  5015                           
  5016                           ;main.c: 219: {
  5017                           ;main.c: 220: if((5==STORED_in_order))
  5018  0526  3005               	movlw	5
  5019  0527  0644               	xorwf	_STORED_in_order,w
  5020  0528  1D03               	btfss	3,2
  5021  0529  2D2D               	goto	l3313
  5022                           
  5023                           ;main.c: 221: {
  5024                           ;main.c: 222: LATDbits.LATD4=0;
  5025                           
  5026                           ;main.c: 223: flag_overload_out=1;
  5027                           
  5028                           ;main.c: 224: overload_time_out=0;
  5029  052A  27CC  3184         	fcall	PL18	;call to abstracted procedure
  5030                           
  5031                           ;main.c: 225: }
  5032  052C  2D3E               	goto	l3327
  5033  052D                     l3313:	
  5034                           
  5035                           ;main.c: 226: else if((5==ES_in_order))
  5036  052D  3005               	movlw	5
  5037  052E  067D               	xorwf	_ES_in_order,w
  5038  052F  1D03               	btfss	3,2
  5039  0530  2D34               	goto	l3319
  5040                           
  5041                           ;main.c: 227: {
  5042                           ;main.c: 228: LATDbits.LATD7=0;
  5043                           
  5044                           ;main.c: 229: flag_overload_in_ES=1;
  5045                           
  5046                           ;main.c: 230: overload_time_in_ES=0;
  5047  0531  27D1  3184         	fcall	PL20	;call to abstracted procedure
  5048                           
  5049                           ;main.c: 231: }
  5050  0533  2D3E               	goto	l3327
  5051  0534                     l3319:	
  5052                           
  5053                           ;main.c: 232: else if((5==ES_out_order))
  5054  0534  3005               	movlw	5
  5055  0535  067C               	xorwf	_ES_out_order,w
  5056  0536  1D03               	btfss	3,2
  5057  0537  2D3E               	goto	l3327
  5058                           
  5059                           ;main.c: 233: {
  5060                           ;main.c: 234: LATDbits.LATD6=0;
  5061                           
  5062                           ;main.c: 235: flag_overload_out_ES=1;
  5063                           
  5064                           ;main.c: 236: overload_time_out_ES=0;
  5065  0538  27D6  3184         	fcall	PL22	;call to abstracted procedure
  5066                           
  5067                           ;main.c: 237: }
  5068                           ;main.c: 238: }
  5069                           ;main.c: 240: }
  5070  053A  2D3E               	goto	l3327
  5071  053B                     l3325:	
  5072                           
  5073                           ;main.c: 241: else
  5074                           ;main.c: 242: {
  5075                           ;main.c: 243: test_time=0;
  5076                           
  5077                           ;main.c: 244: motor_run_1s=0;
  5078  053B  3184  2410  3184   	fcall	PL12	;call to abstracted procedure
  5079  053E                     l3327:	
  5080                           
  5081                           ;main.c: 245: }
  5082                           ;main.c: 248: if(flag_overload_out)
  5083  053E  1D70               	btfss	_flag_overload_out/(0+8),_flag_overload_out& (0+7)
  5084  053F  2D54               	goto	l785
  5085                           
  5086                           ;main.c: 249: {
  5087                           ;main.c: 250: overload_time_out++;
  5088  0540  0AA6               	incf	_overload_time_out,f
  5089  0541  1903               	skipnz
  5090  0542  0AA7               	incf	_overload_time_out+1,f
  5091                           
  5092                           ;main.c: 251: if(overload_time_out>=100)
  5093  0543  3000               	movlw	0
  5094  0544  0227               	subwf	_overload_time_out+1,w
  5095  0545  3064               	movlw	100
  5096  0546  1903               	skipnz
  5097  0547  0226               	subwf	_overload_time_out,w
  5098  0548  1C03               	skipc
  5099  0549  2D7F               	goto	l3365
  5100                           
  5101                           ;main.c: 252: {
  5102                           ;main.c: 253: if((5==STORED_in_order)&&(FLAG_STORED_IN))
  5103  054A  3005               	movlw	5
  5104  054B  0644               	xorwf	_STORED_in_order,w
  5105  054C  1903               	btfsc	3,2
  5106  054D  1CF1               	btfss	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5107  054E  2D7F               	goto	l3365
  5108                           
  5109                           ;main.c: 254: {
  5110                           ;main.c: 255: LATDbits.LATD4=1;
  5111  054F  1619               	bsf	25,4	;volatile
  5112                           
  5113                           ;main.c: 256: flag_overload_out=0;
  5114  0550  1170               	bcf	_flag_overload_out/(0+8),_flag_overload_out& (0+7)
  5115                           
  5116                           ;main.c: 257: overload_time_out=0;
  5117  0551  01A6               	clrf	_overload_time_out
  5118  0552  01A7               	clrf	_overload_time_out+1
  5119  0553  2D7F               	goto	l3365
  5120  0554                     l785:	
  5121                           
  5122                           ;main.c: 261: else if(flag_overload_out_ES)
  5123  0554  1C70               	btfss	_flag_overload_out_ES/(0+8),_flag_overload_out_ES& (0+7)
  5124  0555  2D6A               	goto	l789
  5125                           
  5126                           ;main.c: 262: {
  5127                           ;main.c: 263: overload_time_out_ES++;
  5128  0556  0AA4               	incf	_overload_time_out_ES,f
  5129  0557  1903               	skipnz
  5130  0558  0AA5               	incf	_overload_time_out_ES+1,f
  5131                           
  5132                           ;main.c: 264: if(overload_time_out_ES>=100)
  5133  0559  3000               	movlw	0
  5134  055A  0225               	subwf	_overload_time_out_ES+1,w
  5135  055B  3064               	movlw	100
  5136  055C  1903               	skipnz
  5137  055D  0224               	subwf	_overload_time_out_ES,w
  5138  055E  1C03               	skipc
  5139  055F  2D7F               	goto	l3365
  5140                           
  5141                           ;main.c: 265: {
  5142                           ;main.c: 266: if((5==ES_out_order)&&(FLAG_ES_MOTOR_OUT))
  5143  0560  3005               	movlw	5
  5144  0561  067C               	xorwf	_ES_out_order,w
  5145  0562  1903               	btfsc	3,2
  5146  0563  1E71               	btfss	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5147  0564  2D7F               	goto	l3365
  5148                           
  5149                           ;main.c: 267: {
  5150                           ;main.c: 268: LATDbits.LATD6=1;
  5151  0565  1719               	bsf	25,6	;volatile
  5152                           
  5153                           ;main.c: 269: flag_overload_out_ES=0;
  5154  0566  1070               	bcf	_flag_overload_out_ES/(0+8),_flag_overload_out_ES& (0+7)
  5155                           
  5156                           ;main.c: 270: overload_time_out_ES=0;
  5157  0567  01A4               	clrf	_overload_time_out_ES
  5158  0568  01A5               	clrf	_overload_time_out_ES+1
  5159  0569  2D7F               	goto	l3365
  5160  056A                     l789:	
  5161                           
  5162                           ;main.c: 274: else if(flag_overload_in_ES)
  5163  056A  1CF0               	btfss	_flag_overload_in_ES/(0+8),_flag_overload_in_ES& (0+7)
  5164  056B  2D7F               	goto	l3365
  5165                           
  5166                           ;main.c: 275: {
  5167                           ;main.c: 276: overload_time_in_ES++;
  5168  056C  0AA2               	incf	_overload_time_in_ES,f
  5169  056D  1903               	skipnz
  5170  056E  0AA3               	incf	_overload_time_in_ES+1,f
  5171                           
  5172                           ;main.c: 277: if(overload_time_in_ES>=100)
  5173  056F  3000               	movlw	0
  5174  0570  0223               	subwf	_overload_time_in_ES+1,w
  5175  0571  3064               	movlw	100
  5176  0572  1903               	skipnz
  5177  0573  0222               	subwf	_overload_time_in_ES,w
  5178  0574  1C03               	skipc
  5179  0575  2D7F               	goto	l3365
  5180                           
  5181                           ;main.c: 278: {
  5182                           ;main.c: 279: if((5==ES_in_order)&&(FLAG_ES_MOTOR_IN))
  5183  0576  3005               	movlw	5
  5184  0577  067D               	xorwf	_ES_in_order,w
  5185  0578  1903               	btfsc	3,2
  5186  0579  1EF1               	btfss	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5187  057A  2D7F               	goto	l3365
  5188                           
  5189                           ;main.c: 280: {
  5190                           ;main.c: 281: LATDbits.LATD7=1;
  5191  057B  1799               	bsf	25,7	;volatile
  5192                           
  5193                           ;main.c: 282: flag_overload_in_ES=0;
  5194  057C  10F0               	bcf	_flag_overload_in_ES/(0+8),_flag_overload_in_ES& (0+7)
  5195                           
  5196                           ;main.c: 283: overload_time_in_ES=0;
  5197  057D  01A2               	clrf	_overload_time_in_ES
  5198  057E  01A3               	clrf	_overload_time_in_ES+1
  5199  057F                     l3365:	
  5200  057F  3014               	movlw	20
  5201                           
  5202                           ;main.c: 284: }
  5203                           ;main.c: 285: }
  5204                           ;main.c: 286: }
  5205                           ;main.c: 288: motor_do_time++;
  5206  0580  0AB5               	incf	_motor_do_time,f
  5207                           
  5208                           ;main.c: 289: if(motor_do_time>=20)
  5209  0581  0235               	subwf	_motor_do_time,w
  5210  0582  1C03               	skipc
  5211  0583  2C6A               	goto	l758
  5212                           
  5213                           ;main.c: 290: {
  5214                           ;main.c: 291: motor_do_time=0;
  5215  0584  01B5               	clrf	_motor_do_time
  5216                           
  5217                           ;main.c: 292: MOTOR_CTRL();
  5218  0585  3182  22F5  3184   	fcall	_MOTOR_CTRL
  5219                           
  5220                           ;main.c: 293: LED_CTRL();
  5221  0588  2762  3184         	fcall	_LED_CTRL
  5222                           
  5223                           ;main.c: 294: ALARM_CTRL();
  5224  058A  25A1  3184         	fcall	_ALARM_CTRL
  5225  058C  2C6A               	goto	l758
  5226  058D                     __end_of_main:	
  5227  058D                     __ptext13:	
  5228 ;; *************** function _ADCC_GetSingleConversion *****************
  5229 ;; Defined at:
  5230 ;;		line 128 in file "mcc_generated_files/adcc.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  channel         1    wreg     enum E14881
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  channel         1    3[COMMON] enum E14881
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  2    0[COMMON] unsigned int 
  5237 ;; Registers used:
  5238 ;;		wreg
  5239 ;; Tracked objects:
  5240 ;;		On entry : 3F/0
  5241 ;;		On exit  : 3F/1
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5244 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5247 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5248 ;;Total ram usage:        4 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_main
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           
  5258                           ;psect for function _ADCC_GetSingleConversion
  5259  058D                     _ADCC_GetSingleConversion:	
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  5263                           ;ADCC_GetSingleConversion@channel stored from wreg
  5264  058D  00F6               	movwf	ADCC_GetSingleConversion@channel
  5265                           
  5266                           ;adcc.c: 131: ADPCH = channel;
  5267  058E  0876               	movf	ADCC_GetSingleConversion@channel,w
  5268  058F  0141               	movlb	1	; select bank1
  5269  0590  009E               	movwf	30	;volatile
  5270                           
  5271                           ;adcc.c: 134: ADCON0bits.ADON = 1;
  5272  0591  1793               	bsf	19,7	;volatile
  5273                           
  5274                           ;adcc.c: 137: ADCON0bits.ADCONT = 0;
  5275  0592  1313               	bcf	19,6	;volatile
  5276                           
  5277                           ;adcc.c: 140: ADCON0bits.ADGO = 1;
  5278  0593  1413               	bsf	19,0	;volatile
  5279  0594                     l85:	
  5280                           ;adcc.c: 144: while (ADCON0bits.ADGO)
  5281                           
  5282  0594  0141               	movlb	1	; select bank1
  5283  0595  1C13               	btfss	19,0	;volatile
  5284  0596  2D99               	goto	l2409
  5285  0597  0064               	clrwdt	;# 
  5286  0598  2D94               	goto	l85
  5287  0599                     l2409:	
  5288                           
  5289                           ;adcc.c: 147: }
  5290                           ;adcc.c: 151: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5291  0599  080D               	movf	13,w	;volatile
  5292  059A  00F4               	movwf	?_ADCC_GetSingleConversion+1
  5293  059B  01F3               	clrf	?_ADCC_GetSingleConversion
  5294  059C  080C               	movf	12,w	;volatile
  5295  059D  07F3               	addwf	?_ADCC_GetSingleConversion,f
  5296  059E  1803               	skipnc
  5297  059F  0AF4               	incf	?_ADCC_GetSingleConversion+1,f
  5298  05A0  0008               	return
  5299  05A1                     __end_of_ADCC_GetSingleConversion:	
  5300  007E                     btemp	set	126	;btemp
  5301  007E                     wtemp0	set	126
  5302  05A1                     __ptext12:	
  5303 ;; *************** function _ALARM_CTRL *****************
  5304 ;; Defined at:
  5305 ;;		line 6 in file "mcc_generated_files/OUTPUT.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		None
  5314 ;; Tracked objects:
  5315 ;;		On entry : 3F/0
  5316 ;;		On exit  : 3F/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5323 ;;Total ram usage:        0 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_main
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           
  5333                           ;psect for function _ALARM_CTRL
  5334  05A1                     _ALARM_CTRL:	
  5335                           
  5336                           ;OUTPUT.c: 9: if(FLAG_RESET_ALARM)
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in _ALARM_CTRL: []
  5340  05A1  1C72               	btfss	_FLAG_RESET_ALARM/(0+8),_FLAG_RESET_ALARM& (0+7)
  5341  05A2  2DAD               	goto	l512
  5342                           
  5343                           ;OUTPUT.c: 10: {
  5344                           ;OUTPUT.c: 11: FLAG_RESET_ALARM=0;
  5345  05A3  1072               	bcf	_FLAG_RESET_ALARM/(0+8),_FLAG_RESET_ALARM& (0+7)
  5346                           
  5347                           ;OUTPUT.c: 12: LATCbits.LATC2=1;
  5348  05A4  1518               	bsf	24,2	;volatile
  5349                           
  5350                           ;OUTPUT.c: 13: FLAG_ALARM_CMD=0;
  5351  05A5  11F1               	bcf	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  5352                           
  5353                           ;OUTPUT.c: 14: FLAG_ALARM=0;
  5354  05A6  11F2               	bcf	_FLAG_ALARM/(0+8),_FLAG_ALARM& (0+7)
  5355                           
  5356                           ;OUTPUT.c: 15: FLAG_ALARM_RUN=0;
  5357  05A7  1171               	bcf	_FLAG_ALARM_RUN/(0+8),_FLAG_ALARM_RUN& (0+7)
  5358                           
  5359                           ;OUTPUT.c: 16: FLAG_OVER_TIME_30S=0;
  5360  05A8  1270               	bcf	_FLAG_OVER_TIME_30S/(0+8),_FLAG_OVER_TIME_30S& (0+7)
  5361                           
  5362                           ;OUTPUT.c: 17: FLAG_OVER_CURRENT=0;
  5363  05A9  11F0               	bcf	_FLAG_OVER_CURRENT/(0+8),_FLAG_OVER_CURRENT& (0+7)
  5364                           
  5365                           ;OUTPUT.c: 18: FLAG_ALARM_OVER1=0;
  5366  05AA  1172               	bcf	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  5367                           
  5368                           ;OUTPUT.c: 19: FLAG_ALARM_OVER2=0;
  5369  05AB  10F2               	bcf	_FLAG_ALARM_OVER2/(0+8),_FLAG_ALARM_OVER2& (0+7)
  5370                           
  5371                           ;OUTPUT.c: 20: }
  5372  05AC  0008               	return
  5373  05AD                     l512:	
  5374                           
  5375                           ;OUTPUT.c: 21: else
  5376                           ;OUTPUT.c: 22: {
  5377                           ;OUTPUT.c: 23: if((FLAG_ALARM_RUN)||(FLAG_OVER_TIME_30S)||(FLAG_OVER_CURRENT))
  5378  05AD  1D71               	btfss	_FLAG_ALARM_RUN/(0+8),_FLAG_ALARM_RUN& (0+7)
  5379  05AE  1A70               	btfsc	_FLAG_OVER_TIME_30S/(0+8),_FLAG_OVER_TIME_30S& (0+7)
  5380  05AF  2DB2               	goto	l516
  5381  05B0  1DF0               	btfss	_FLAG_OVER_CURRENT/(0+8),_FLAG_OVER_CURRENT& (0+7)
  5382  05B1  2DC3               	goto	l514
  5383  05B2                     l516:	
  5384                           
  5385                           ;OUTPUT.c: 24: {
  5386                           ;OUTPUT.c: 25: LATCbits.LATC2=0;
  5387  05B2  1118               	bcf	24,2	;volatile
  5388                           
  5389                           ;OUTPUT.c: 26: if((FLAG_OVER_TIME_30S))
  5390  05B3  1E70               	btfss	_FLAG_OVER_TIME_30S/(0+8),_FLAG_OVER_TIME_30S& (0+7)
  5391  05B4  2DBA               	goto	l517
  5392                           
  5393                           ;OUTPUT.c: 27: {
  5394                           ;OUTPUT.c: 28: if(FLAG_ALARM_OVER1)
  5395  05B5  1972               	btfsc	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  5396                           
  5397                           ;OUTPUT.c: 29: {
  5398                           ;OUTPUT.c: 30: FLAG_ALARM=1;
  5399  05B6  15F2               	bsf	_FLAG_ALARM/(0+8),_FLAG_ALARM& (0+7)
  5400                           
  5401                           ;OUTPUT.c: 31: }
  5402                           ;OUTPUT.c: 32: FLAG_ALARM_OVER1=1;
  5403  05B7  1572               	bsf	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  5404                           
  5405                           ;OUTPUT.c: 33: FLAG_OVER_TIME_30S=0;
  5406  05B8  1270               	bcf	_FLAG_OVER_TIME_30S/(0+8),_FLAG_OVER_TIME_30S& (0+7)
  5407                           
  5408                           ;OUTPUT.c: 34: }
  5409  05B9  0008               	return
  5410  05BA                     l517:	
  5411                           
  5412                           ;OUTPUT.c: 35: else if((FLAG_OVER_CURRENT))
  5413  05BA  1DF0               	btfss	_FLAG_OVER_CURRENT/(0+8),_FLAG_OVER_CURRENT& (0+7)
  5414  05BB  2DC1               	goto	l520
  5415                           
  5416                           ;OUTPUT.c: 36: {
  5417                           ;OUTPUT.c: 37: if(FLAG_ALARM_OVER2)
  5418  05BC  18F2               	btfsc	_FLAG_ALARM_OVER2/(0+8),_FLAG_ALARM_OVER2& (0+7)
  5419                           
  5420                           ;OUTPUT.c: 38: {
  5421                           ;OUTPUT.c: 39: FLAG_ALARM=1;
  5422  05BD  15F2               	bsf	_FLAG_ALARM/(0+8),_FLAG_ALARM& (0+7)
  5423                           
  5424                           ;OUTPUT.c: 40: }
  5425                           ;OUTPUT.c: 41: FLAG_ALARM_OVER2=1;
  5426  05BE  14F2               	bsf	_FLAG_ALARM_OVER2/(0+8),_FLAG_ALARM_OVER2& (0+7)
  5427                           
  5428                           ;OUTPUT.c: 42: FLAG_OVER_CURRENT=0;
  5429  05BF  11F0               	bcf	_FLAG_OVER_CURRENT/(0+8),_FLAG_OVER_CURRENT& (0+7)
  5430                           
  5431                           ;OUTPUT.c: 43: }
  5432  05C0  0008               	return
  5433  05C1                     l520:	
  5434                           
  5435                           ;OUTPUT.c: 44: else
  5436                           ;OUTPUT.c: 45: {
  5437                           ;OUTPUT.c: 46: FLAG_ALARM=1;
  5438  05C1  15F2               	bsf	_FLAG_ALARM/(0+8),_FLAG_ALARM& (0+7)
  5439  05C2  0008               	return
  5440  05C3                     l514:	
  5441                           
  5442                           ;OUTPUT.c: 50: else if((!FLAG_ALARM_CMD)&&(!FLAG_ALARM_RUN)&&(!FLAG_OVER_TIME_30S)&&(!FL
      +                          AG_OVER_CURRENT)&&(!FLAG_ALARM_OVER1)&&(!FLAG_ALARM_OVER2))
  5443  05C3  1DF1               	btfss	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  5444  05C4  1971               	btfsc	_FLAG_ALARM_RUN/(0+8),_FLAG_ALARM_RUN& (0+7)
  5445  05C5  0008               	return
  5446  05C6  1E70               	btfss	_FLAG_OVER_TIME_30S/(0+8),_FLAG_OVER_TIME_30S& (0+7)
  5447  05C7  19F0               	btfsc	_FLAG_OVER_CURRENT/(0+8),_FLAG_OVER_CURRENT& (0+7)
  5448  05C8  0008               	return
  5449  05C9  1D72               	btfss	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  5450  05CA  18F2               	btfsc	_FLAG_ALARM_OVER2/(0+8),_FLAG_ALARM_OVER2& (0+7)
  5451  05CB  0008               	return
  5452                           
  5453                           ;OUTPUT.c: 51: {
  5454                           ;OUTPUT.c: 52: LATCbits.LATC2=1;
  5455  05CC  1518               	bsf	24,2	;volatile
  5456  05CD  0008               	return
  5457  05CE                     __end_of_ALARM_CTRL:	
  5458  05CE                     __ptext11:	
  5459 ;; *************** function _INPUT_COLLECT *****************
  5460 ;; Defined at:
  5461 ;;		line 21 in file "mcc_generated_files/INPUT.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;		None
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;		None
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      void 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0
  5470 ;; Tracked objects:
  5471 ;;		On entry : 3F/0
  5472 ;;		On exit  : 3F/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5477 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5479 ;;Total ram usage:        4 bytes
  5480 ;; Hardware stack levels used:    1
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_main
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           
  5489                           ;psect for function _INPUT_COLLECT
  5490  05CE                     _INPUT_COLLECT:	
  5491                           
  5492                           ;INPUT.c: 24: if((!FLAG_QS_MOTOR_IN)&&(!FLAG_QS_MOTOR_OUT)&&(!FLAG_ES_MOTOR_IN)&&(!FLAG_
      +                          ES_MOTOR_OUT)&&(!FLAG_STORED_IN))
  5493                           
  5494                           ;incstack = 0
  5495                           ; Regs used in _INPUT_COLLECT: [wreg+status,2+status,0]
  5496  05CE  1FF1               	btfss	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5497  05CF  1B71               	btfsc	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5498  05D0  2E13               	goto	l2455
  5499  05D1  1EF1               	btfss	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5500  05D2  1A71               	btfsc	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5501  05D3  2E13               	goto	l2455
  5502  05D4  18F1               	btfsc	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5503  05D5  2E13               	goto	l2455
  5504                           
  5505                           ;INPUT.c: 25: {
  5506                           ;INPUT.c: 26: CMD_ERR=0X00;
  5507  05D6  01B6               	clrf	_CMD_ERR
  5508                           
  5509                           ;INPUT.c: 27: CMD_ERR = (PORTBbits.RB3|(PORTBbits.RB4<<1)|(PORTBbits.RB5<<2)|(PORTBbits.
      +                          RB6<<3));
  5510  05D7  0C0D               	rrf	13,w	;volatile
  5511  05D8  00F3               	movwf	??_INPUT_COLLECT
  5512  05D9  0CF3               	rrf	??_INPUT_COLLECT,f
  5513  05DA  0C73               	rrf	??_INPUT_COLLECT,w
  5514  05DB  3901               	andlw	1
  5515  05DC  00F4               	movwf	??_INPUT_COLLECT+1
  5516  05DD  0E0D               	swapf	13,w	;volatile
  5517  05DE  0C89               	rrf	9,f
  5518  05DF  0C89               	rrf	9,f
  5519  05E0  3901               	andlw	1
  5520  05E1  00F5               	movwf	??_INPUT_COLLECT+2
  5521  05E2  35F5               	lslf	??_INPUT_COLLECT+2,f
  5522  05E3  35F5               	lslf	??_INPUT_COLLECT+2,f
  5523  05E4  35F5               	lslf	??_INPUT_COLLECT+2,f
  5524  05E5  0E0D               	swapf	13,w	;volatile
  5525  05E6  0C89               	rrf	9,f
  5526  05E7  3901               	andlw	1
  5527  05E8  00F6               	movwf	??_INPUT_COLLECT+3
  5528  05E9  35F6               	lslf	??_INPUT_COLLECT+3,f
  5529  05EA  35F6               	lslf	??_INPUT_COLLECT+3,f
  5530  05EB  0E0D               	swapf	13,w	;volatile
  5531  05EC  3901               	andlw	1
  5532  05ED  0709               	addwf	9,w
  5533  05EE  0476               	iorwf	??_INPUT_COLLECT+3,w
  5534  05EF  0475               	iorwf	??_INPUT_COLLECT+2,w
  5535  05F0  0474               	iorwf	??_INPUT_COLLECT+1,w
  5536  05F1  00B6               	movwf	_CMD_ERR
  5537                           
  5538                           ;INPUT.c: 28: if((((CMD_ERR!=0X0F)&&(CMD_ERR!=0X0E)&&(CMD_ERR!=0X0D)&&(CMD_ERR!=0X0B)&&(
      +                          CMD_ERR!=0X07)))||((!PORTEbits.RE2)&&(!PORTEbits.RE1)))
  5539  05F2  3A0F               	xorlw	15
  5540  05F3  1903               	btfsc	3,2
  5541  05F4  2E05               	goto	l388
  5542  05F5  300E               	movlw	14
  5543  05F6  0636               	xorwf	_CMD_ERR,w
  5544  05F7  1903               	btfsc	3,2
  5545  05F8  2E05               	goto	l388
  5546  05F9  300D               	movlw	13
  5547  05FA  0636               	xorwf	_CMD_ERR,w
  5548  05FB  1903               	btfsc	3,2
  5549  05FC  2E05               	goto	l388
  5550  05FD  300B               	movlw	11
  5551  05FE  0636               	xorwf	_CMD_ERR,w
  5552  05FF  1903               	btfsc	3,2
  5553  0600  2E05               	goto	l388
  5554  0601  3007               	movlw	7
  5555  0602  0636               	xorwf	_CMD_ERR,w
  5556  0603  1D03               	btfss	3,2
  5557  0604  2E08               	goto	l2441
  5558  0605                     l388:	
  5559  0605  1D10               	btfss	16,2	;volatile
  5560  0606  1890               	btfsc	16,1	;volatile
  5561  0607  2E11               	goto	l2451
  5562  0608                     l2441:	
  5563  0608  3006               	movlw	6
  5564                           
  5565                           ;INPUT.c: 29: {
  5566                           ;INPUT.c: 30: time_2ms_5++;
  5567  0609  0ABF               	incf	_time_2ms_5,f
  5568                           
  5569                           ;INPUT.c: 31: if(time_2ms_5>5)
  5570  060A  023F               	subwf	_time_2ms_5,w
  5571  060B  1C03               	skipc
  5572  060C  2E13               	goto	l2455
  5573                           
  5574                           ;INPUT.c: 32: {
  5575                           ;INPUT.c: 33: time_2ms_5=0;
  5576  060D  01BF               	clrf	_time_2ms_5
  5577                           
  5578                           ;INPUT.c: 34: FLAG_ALARM_CMD=1;
  5579  060E  15F1               	bsf	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  5580                           
  5581                           ;INPUT.c: 35: LATCbits.LATC2=0;
  5582  060F  1118               	bcf	24,2	;volatile
  5583  0610  2E13               	goto	l2455
  5584  0611                     l2451:	
  5585                           
  5586                           ;INPUT.c: 38: else
  5587                           ;INPUT.c: 39: {
  5588                           ;INPUT.c: 40: time_2ms_5=0;
  5589  0611  01BF               	clrf	_time_2ms_5
  5590                           
  5591                           ;INPUT.c: 41: FLAG_ALARM_CMD=0;
  5592  0612  11F1               	bcf	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  5593  0613                     l2455:	
  5594                           
  5595                           ;INPUT.c: 42: }
  5596                           ;INPUT.c: 43: }
  5597                           ;INPUT.c: 44: if(!PORTAbits.RA4)
  5598  0613  1A0C               	btfsc	12,4	;volatile
  5599  0614  2E1D               	goto	l2465
  5600  0615  300B               	movlw	11
  5601                           
  5602                           ;INPUT.c: 45: {
  5603                           ;INPUT.c: 46: time_2ms_6++;
  5604  0616  0ABE               	incf	_time_2ms_6,f
  5605                           
  5606                           ;INPUT.c: 47: if(time_2ms_6>10)
  5607  0617  023E               	subwf	_time_2ms_6,w
  5608  0618  1C03               	skipc
  5609  0619  2E1F               	goto	l2469
  5610                           
  5611                           ;INPUT.c: 48: {
  5612                           ;INPUT.c: 49: time_2ms_6=0;
  5613  061A  01BE               	clrf	_time_2ms_6
  5614                           
  5615                           ;INPUT.c: 50: FLAG_RESET_ALARM=1;
  5616  061B  1472               	bsf	_FLAG_RESET_ALARM/(0+8),_FLAG_RESET_ALARM& (0+7)
  5617  061C  2E1F               	goto	l2469
  5618  061D                     l2465:	
  5619                           
  5620                           ;INPUT.c: 53: else
  5621                           ;INPUT.c: 54: {
  5622                           ;INPUT.c: 55: time_2ms_6=0;
  5623  061D  01BE               	clrf	_time_2ms_6
  5624                           
  5625                           ;INPUT.c: 56: FLAG_RESET_ALARM=0;
  5626  061E  1072               	bcf	_FLAG_RESET_ALARM/(0+8),_FLAG_RESET_ALARM& (0+7)
  5627  061F                     l2469:	
  5628                           
  5629                           ;INPUT.c: 57: }
  5630                           ;INPUT.c: 60: if((!PORTBbits.RB3)&&(PORTBbits.RB4)&&(PORTBbits.RB5)&&(PORTBbits.RB6)&&(P
      +                          ORTEbits.RE2)&&(!PORTEbits.RE1)&&(PORTEbits.RE0)&&(!PORTBbits.RB2)&&((!FLAG_QS_MOTOR_IN)
      +                          &&(!FLAG_QS_MOTOR_OUT)&&(!FLAG_ES_MOTOR_IN)&&(!FLAG_ES_MOTOR_OUT)&&(!FLAG_STORED_IN))&&(
  5631  061F  1D8D               	btfss	13,3	;volatile
  5632  0620  1E0D               	btfss	13,4	;volatile
  5633  0621  2E48               	goto	l2523
  5634  0622  1A8D               	btfsc	13,5	;volatile
  5635  0623  1F0D               	btfss	13,6	;volatile
  5636  0624  2E48               	goto	l2523
  5637  0625  1910               	btfsc	16,2	;volatile
  5638  0626  1890               	btfsc	16,1	;volatile
  5639  0627  2E48               	goto	l2523
  5640  0628  1810               	btfsc	16,0	;volatile
  5641  0629  190D               	btfsc	13,2	;volatile
  5642  062A  2E48               	goto	l2523
  5643  062B  1FF1               	btfss	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5644  062C  1B71               	btfsc	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5645  062D  2E48               	goto	l2523
  5646  062E  1EF1               	btfss	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5647  062F  1A71               	btfsc	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5648  0630  2E48               	goto	l2523
  5649  0631  1CF1               	btfss	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5650  0632  19F2               	btfsc	_FLAG_ALARM/(0+8),_FLAG_ALARM& (0+7)
  5651  0633  2E48               	goto	l2523
  5652  0634  1F8D               	btfss	13,7	;volatile
  5653  0635  1E0C               	btfss	12,4	;volatile
  5654  0636  2E48               	goto	l2523
  5655  0637  19F1               	btfsc	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  5656  0638  2E48               	goto	l2523
  5657                           
  5658                           ;INPUT.c: 61: {
  5659                           ;INPUT.c: 62: if(FLAG_QS_MOTOR_IN_enable)
  5660  0639  1FF0               	btfss	_FLAG_QS_MOTOR_IN_enable/(0+8),_FLAG_QS_MOTOR_IN_enable& (0+7)
  5661  063A  2E4C               	goto	l397
  5662  063B  300B               	movlw	11
  5663                           
  5664                           ;INPUT.c: 63: {
  5665                           ;INPUT.c: 64: time_2ms_1++;
  5666  063C  0AC3               	incf	_time_2ms_1,f
  5667                           
  5668                           ;INPUT.c: 65: if(time_2ms_1>10)
  5669  063D  0243               	subwf	_time_2ms_1,w
  5670  063E  1C03               	skipc
  5671  063F  2E4C               	goto	l397
  5672                           
  5673                           ;INPUT.c: 66: {
  5674                           ;INPUT.c: 67: time_2ms_1=0;
  5675  0640  01C3               	clrf	_time_2ms_1
  5676                           
  5677                           ;INPUT.c: 68: FLAG_QS_MOTOR_IN=1;
  5678  0641  17F1               	bsf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5679                           
  5680                           ;INPUT.c: 69: FLAG_QS_MOTOR_OUT=0;
  5681  0642  1371               	bcf	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5682                           
  5683                           ;INPUT.c: 70: FLAG_ES_MOTOR_IN=0;
  5684  0643  12F1               	bcf	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5685                           
  5686                           ;INPUT.c: 71: FLAG_ES_MOTOR_OUT=0;
  5687  0644  1271               	bcf	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5688                           
  5689                           ;INPUT.c: 72: FLAG_STORED_IN=0;
  5690  0645  10F1               	bcf	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5691                           
  5692                           ;INPUT.c: 73: FLAG_QS_MOTOR_IN_enable=0;
  5693  0646  13F0               	bcf	_FLAG_QS_MOTOR_IN_enable/(0+8),_FLAG_QS_MOTOR_IN_enable& (0+7)
  5694  0647  2E4C               	goto	l397
  5695  0648                     l2523:	
  5696                           
  5697                           ;INPUT.c: 78: else
  5698                           ;INPUT.c: 79: {
  5699                           ;INPUT.c: 80: time_2ms_1=0;
  5700  0648  01C3               	clrf	_time_2ms_1
  5701                           
  5702                           ;INPUT.c: 81: if(PORTBbits.RB3)
  5703  0649  1D8D               	btfss	13,3	;volatile
  5704  064A  2E4C               	goto	l397
  5705                           
  5706                           ;INPUT.c: 82: FLAG_QS_MOTOR_IN_enable=1;
  5707  064B  17F0               	bsf	_FLAG_QS_MOTOR_IN_enable/(0+8),_FLAG_QS_MOTOR_IN_enable& (0+7)
  5708  064C                     l397:	
  5709                           
  5710                           ;INPUT.c: 83: }
  5711                           ;INPUT.c: 84: if((!PORTBbits.RB3)&&(PORTBbits.RB4)&&(PORTBbits.RB5)&&(PORTBbits.RB6)&&(P
      +                          ORTEbits.RE2)&&(!PORTEbits.RE1)&&(PORTEbits.RE0)&&(!PORTBbits.RB2)&&((!FLAG_QS_MOTOR_IN)
      +                          &&(!FLAG_QS_MOTOR_OUT)&&(!FLAG_ES_MOTOR_IN)&&(!FLAG_ES_MOTOR_OUT)&&(!FLAG_STORED_IN))&&(
  5712  064C  1D8D               	btfss	13,3	;volatile
  5713  064D  1E0D               	btfss	13,4	;volatile
  5714  064E  2E72               	goto	l2577
  5715  064F  1A8D               	btfsc	13,5	;volatile
  5716  0650  1F0D               	btfss	13,6	;volatile
  5717  0651  2E72               	goto	l2577
  5718  0652  1910               	btfsc	16,2	;volatile
  5719  0653  1890               	btfsc	16,1	;volatile
  5720  0654  2E72               	goto	l2577
  5721  0655  1810               	btfsc	16,0	;volatile
  5722  0656  190D               	btfsc	13,2	;volatile
  5723  0657  2E72               	goto	l2577
  5724  0658  1FF1               	btfss	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5725  0659  1B71               	btfsc	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5726  065A  2E72               	goto	l2577
  5727  065B  1EF1               	btfss	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5728  065C  1A71               	btfsc	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5729  065D  2E72               	goto	l2577
  5730  065E  1CF1               	btfss	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5731  065F  19F2               	btfsc	_FLAG_ALARM/(0+8),_FLAG_ALARM& (0+7)
  5732  0660  2E72               	goto	l2577
  5733  0661  1B8D               	btfsc	13,7	;volatile
  5734  0662  1E0C               	btfss	12,4	;volatile
  5735  0663  2E72               	goto	l2577
  5736  0664  19F1               	btfsc	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  5737  0665  2E72               	goto	l2577
  5738  0666  300B               	movlw	11
  5739                           
  5740                           ;INPUT.c: 85: {
  5741                           ;INPUT.c: 86: time_2ms_STORED++;
  5742  0667  0AB8               	incf	_time_2ms_STORED,f
  5743                           
  5744                           ;INPUT.c: 87: if(time_2ms_STORED>10)
  5745  0668  0238               	subwf	_time_2ms_STORED,w
  5746  0669  1C03               	skipc
  5747  066A  2E73               	goto	l2579
  5748                           
  5749                           ;INPUT.c: 88: {
  5750                           ;INPUT.c: 89: time_2ms_STORED=0;
  5751  066B  01B8               	clrf	_time_2ms_STORED
  5752                           
  5753                           ;INPUT.c: 90: FLAG_QS_MOTOR_IN=0;
  5754  066C  13F1               	bcf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5755                           
  5756                           ;INPUT.c: 91: FLAG_QS_MOTOR_OUT=0;
  5757  066D  1371               	bcf	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5758                           
  5759                           ;INPUT.c: 92: FLAG_ES_MOTOR_IN=0;
  5760  066E  12F1               	bcf	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5761                           
  5762                           ;INPUT.c: 93: FLAG_ES_MOTOR_OUT=0;
  5763  066F  1271               	bcf	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5764                           
  5765                           ;INPUT.c: 94: FLAG_STORED_IN=1;
  5766  0670  14F1               	bsf	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5767  0671  2E73               	goto	l2579
  5768  0672                     l2577:	
  5769                           
  5770                           ;INPUT.c: 97: else
  5771                           ;INPUT.c: 98: {
  5772                           ;INPUT.c: 99: time_2ms_STORED=0;
  5773  0672  01B8               	clrf	_time_2ms_STORED
  5774  0673                     l2579:	
  5775                           
  5776                           ;INPUT.c: 100: }
  5777                           ;INPUT.c: 102: if(((!PORTBbits.RB4)&&(PORTBbits.RB3)&&(PORTBbits.RB5)&&(PORTBbits.RB6)&&
      +                          (PORTEbits.RE1)&&(PORTEbits.RE0)&&(!PORTBbits.RB2)&&((!FLAG_QS_MOTOR_IN)&&(!FLAG_QS_MOTO
      +                          R_OUT)&&(!FLAG_ES_MOTOR_IN)&&(!FLAG_ES_MOTOR_OUT)&&(!FLAG_STORED_IN))&&((!FLAG_ALARM))&&
      +                          (
  5778  0673  1E0D               	btfss	13,4	;volatile
  5779  0674  1D8D               	btfss	13,3	;volatile
  5780  0675  2E99               	goto	l2629
  5781  0676  1A8D               	btfsc	13,5	;volatile
  5782  0677  1F0D               	btfss	13,6	;volatile
  5783  0678  2E99               	goto	l2629
  5784  0679  1890               	btfsc	16,1	;volatile
  5785  067A  1C10               	btfss	16,0	;volatile
  5786  067B  2E99               	goto	l2629
  5787  067C  1D0D               	btfss	13,2	;volatile
  5788  067D  1BF1               	btfsc	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5789  067E  2E99               	goto	l2629
  5790  067F  1F71               	btfss	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5791  0680  1AF1               	btfsc	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5792  0681  2E99               	goto	l2629
  5793  0682  1E71               	btfss	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5794  0683  18F1               	btfsc	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5795  0684  2E99               	goto	l2629
  5796  0685  1DF2               	btfss	_FLAG_ALARM/(0+8),_FLAG_ALARM& (0+7)
  5797  0686  1E0C               	btfss	12,4	;volatile
  5798  0687  2E99               	goto	l2629
  5799  0688  19F1               	btfsc	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  5800  0689  2E99               	goto	l2629
  5801                           
  5802                           ;INPUT.c: 103: {
  5803                           ;INPUT.c: 104: if(FLAG_QS_MOTOR_OUT_enable)
  5804  068A  1C71               	btfss	_FLAG_QS_MOTOR_OUT_enable/(0+8),_FLAG_QS_MOTOR_OUT_enable& (0+7)
  5805  068B  2E9D               	goto	l405
  5806  068C  300B               	movlw	11
  5807                           
  5808                           ;INPUT.c: 105: {
  5809                           ;INPUT.c: 106: time_2ms_2++;
  5810  068D  0AC2               	incf	_time_2ms_2,f
  5811                           
  5812                           ;INPUT.c: 107: if(time_2ms_2>10)
  5813  068E  0242               	subwf	_time_2ms_2,w
  5814  068F  1C03               	skipc
  5815  0690  2E9D               	goto	l405
  5816                           
  5817                           ;INPUT.c: 108: {
  5818                           ;INPUT.c: 109: time_2ms_2=0;
  5819  0691  01C2               	clrf	_time_2ms_2
  5820                           
  5821                           ;INPUT.c: 110: FLAG_QS_MOTOR_IN=0;
  5822  0692  13F1               	bcf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5823                           
  5824                           ;INPUT.c: 111: FLAG_QS_MOTOR_OUT=1;
  5825  0693  1771               	bsf	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5826                           
  5827                           ;INPUT.c: 112: FLAG_ES_MOTOR_IN=0;
  5828  0694  12F1               	bcf	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5829                           
  5830                           ;INPUT.c: 113: FLAG_ES_MOTOR_OUT=0;
  5831  0695  1271               	bcf	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5832                           
  5833                           ;INPUT.c: 114: FLAG_STORED_IN=0;
  5834  0696  10F1               	bcf	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5835                           
  5836                           ;INPUT.c: 115: FLAG_QS_MOTOR_OUT_enable=0;
  5837  0697  1071               	bcf	_FLAG_QS_MOTOR_OUT_enable/(0+8),_FLAG_QS_MOTOR_OUT_enable& (0+7)
  5838  0698  2E9D               	goto	l405
  5839  0699                     l2629:	
  5840                           
  5841                           ;INPUT.c: 127: else
  5842                           ;INPUT.c: 128: {
  5843                           ;INPUT.c: 129: time_2ms_2=0;
  5844  0699  01C2               	clrf	_time_2ms_2
  5845                           
  5846                           ;INPUT.c: 130: if(PORTBbits.RB4)
  5847  069A  1E0D               	btfss	13,4	;volatile
  5848  069B  2E9D               	goto	l405
  5849                           
  5850                           ;INPUT.c: 131: {
  5851                           ;INPUT.c: 132: FLAG_QS_MOTOR_OUT_enable=1;
  5852  069C  1471               	bsf	_FLAG_QS_MOTOR_OUT_enable/(0+8),_FLAG_QS_MOTOR_OUT_enable& (0+7)
  5853  069D                     l405:	
  5854                           
  5855                           ;INPUT.c: 133: }
  5856                           ;INPUT.c: 134: }
  5857                           ;INPUT.c: 135: if((!PORTBbits.RB5)&&(PORTBbits.RB3)&&(PORTBbits.RB4)&&(PORTBbits.RB6)&&(
      +                          PORTEbits.RE2)&&(PORTEbits.RE0)&&(!PORTAbits.RA5)&&(!PORTBbits.RB2)&&((!FLAG_QS_MOTOR_IN
      +                          )&&(!FLAG_QS_MOTOR_OUT)&&(!FLAG_ES_MOTOR_IN)&&(!FLAG_ES_MOTOR_OUT)&&(!FLAG_STORED_IN))&&
      +                          (
  5858  069D  1E8D               	btfss	13,5	;volatile
  5859  069E  1D8D               	btfss	13,3	;volatile
  5860  069F  2EC4               	goto	l2685
  5861  06A0  1A0D               	btfsc	13,4	;volatile
  5862  06A1  1F0D               	btfss	13,6	;volatile
  5863  06A2  2EC4               	goto	l2685
  5864  06A3  1910               	btfsc	16,2	;volatile
  5865  06A4  1C10               	btfss	16,0	;volatile
  5866  06A5  2EC4               	goto	l2685
  5867  06A6  1E8C               	btfss	12,5	;volatile
  5868  06A7  190D               	btfsc	13,2	;volatile
  5869  06A8  2EC4               	goto	l2685
  5870  06A9  1FF1               	btfss	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5871  06AA  1B71               	btfsc	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5872  06AB  2EC4               	goto	l2685
  5873  06AC  1EF1               	btfss	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5874  06AD  1A71               	btfsc	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5875  06AE  2EC4               	goto	l2685
  5876  06AF  1CF1               	btfss	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5877  06B0  19F2               	btfsc	_FLAG_ALARM/(0+8),_FLAG_ALARM& (0+7)
  5878  06B1  2EC4               	goto	l2685
  5879  06B2  1A0C               	btfsc	12,4	;volatile
  5880  06B3  19F1               	btfsc	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  5881  06B4  2EC4               	goto	l2685
  5882                           
  5883                           ;INPUT.c: 137: {
  5884                           ;INPUT.c: 138: if(FLAG_ES_MOTOR_IN_enable)
  5885  06B5  1F70               	btfss	_FLAG_ES_MOTOR_IN_enable/(0+8),_FLAG_ES_MOTOR_IN_enable& (0+7)
  5886  06B6  2EC8               	goto	l410
  5887  06B7  300B               	movlw	11
  5888                           
  5889                           ;INPUT.c: 139: {
  5890                           ;INPUT.c: 140: time_2ms_3++;
  5891  06B8  0AC1               	incf	_time_2ms_3,f
  5892                           
  5893                           ;INPUT.c: 141: if(time_2ms_3>10)
  5894  06B9  0241               	subwf	_time_2ms_3,w
  5895  06BA  1C03               	skipc
  5896  06BB  2EC8               	goto	l410
  5897                           
  5898                           ;INPUT.c: 142: {
  5899                           ;INPUT.c: 143: time_2ms_3=0;
  5900  06BC  01C1               	clrf	_time_2ms_3
  5901                           
  5902                           ;INPUT.c: 144: FLAG_QS_MOTOR_IN=0;
  5903  06BD  13F1               	bcf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5904                           
  5905                           ;INPUT.c: 145: FLAG_QS_MOTOR_OUT=0;
  5906  06BE  1371               	bcf	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5907                           
  5908                           ;INPUT.c: 146: FLAG_ES_MOTOR_IN=1;
  5909  06BF  16F1               	bsf	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5910                           
  5911                           ;INPUT.c: 147: FLAG_ES_MOTOR_OUT=0;
  5912  06C0  1271               	bcf	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5913                           
  5914                           ;INPUT.c: 148: FLAG_STORED_IN=0;
  5915  06C1  10F1               	bcf	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5916                           
  5917                           ;INPUT.c: 149: FLAG_ES_MOTOR_IN_enable=0;
  5918  06C2  1370               	bcf	_FLAG_ES_MOTOR_IN_enable/(0+8),_FLAG_ES_MOTOR_IN_enable& (0+7)
  5919  06C3  2EC8               	goto	l410
  5920  06C4                     l2685:	
  5921                           
  5922                           ;INPUT.c: 153: else
  5923                           ;INPUT.c: 154: {
  5924                           ;INPUT.c: 155: time_2ms_3=0;
  5925  06C4  01C1               	clrf	_time_2ms_3
  5926                           
  5927                           ;INPUT.c: 156: if(PORTBbits.RB5)
  5928  06C5  1E8D               	btfss	13,5	;volatile
  5929  06C6  2EC8               	goto	l410
  5930                           
  5931                           ;INPUT.c: 157: FLAG_ES_MOTOR_IN_enable=1;
  5932  06C7  1770               	bsf	_FLAG_ES_MOTOR_IN_enable/(0+8),_FLAG_ES_MOTOR_IN_enable& (0+7)
  5933  06C8                     l410:	
  5934                           
  5935                           ;INPUT.c: 158: }
  5936                           ;INPUT.c: 159: if((!PORTBbits.RB6)&&(PORTBbits.RB3)&&(PORTBbits.RB4)&&(PORTBbits.RB5)&&(
      +                          PORTEbits.RE2)&&(PORTAbits.RA5)&&(!PORTBbits.RB2)&&((!FLAG_QS_MOTOR_IN)&&(!FLAG_QS_MOTOR
      +                          _OUT)&&(!FLAG_ES_MOTOR_IN)&&(!FLAG_ES_MOTOR_OUT)&&(!FLAG_STORED_IN))&&((!FLAG_ALARM))&&(
      +                          P
  5937  06C8  1F0D               	btfss	13,6	;volatile
  5938  06C9  1D8D               	btfss	13,3	;volatile
  5939  06CA  2EEB               	goto	l2739
  5940  06CB  1A0D               	btfsc	13,4	;volatile
  5941  06CC  1E8D               	btfss	13,5	;volatile
  5942  06CD  2EEB               	goto	l2739
  5943  06CE  1910               	btfsc	16,2	;volatile
  5944  06CF  1E8C               	btfss	12,5	;volatile
  5945  06D0  2EEB               	goto	l2739
  5946  06D1  1D0D               	btfss	13,2	;volatile
  5947  06D2  1BF1               	btfsc	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  5948  06D3  2EEB               	goto	l2739
  5949  06D4  1F71               	btfss	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  5950  06D5  1AF1               	btfsc	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  5951  06D6  2EEB               	goto	l2739
  5952  06D7  1E71               	btfss	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  5953  06D8  18F1               	btfsc	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  5954  06D9  2EEB               	goto	l2739
  5955  06DA  1DF2               	btfss	_FLAG_ALARM/(0+8),_FLAG_ALARM& (0+7)
  5956  06DB  1E0C               	btfss	12,4	;volatile
  5957  06DC  2EEB               	goto	l2739
  5958  06DD  19F1               	btfsc	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  5959  06DE  2EEB               	goto	l2739
  5960                           
  5961                           ;INPUT.c: 161: {
  5962                           ;INPUT.c: 162: if(FLAG_ES_MOTOR_OUT_enable)
  5963  06DF  1EF0               	btfss	_FLAG_ES_MOTOR_OUT_enable/(0+8),_FLAG_ES_MOTOR_OUT_enable& (0+7)
  5964  06E0  2EEF               	goto	l415
  5965  06E1  300B               	movlw	11
  5966                           
  5967                           ;INPUT.c: 163: {
  5968                           ;INPUT.c: 164: time_2ms_4++;
  5969  06E2  0AC0               	incf	_time_2ms_4,f
  5970                           
  5971                           ;INPUT.c: 165: if(time_2ms_4>10)
  5972  06E3  0240               	subwf	_time_2ms_4,w
  5973  06E4  1C03               	skipc
  5974  06E5  2EEF               	goto	l415
  5975                           
  5976                           ;INPUT.c: 166: {
  5977                           ;INPUT.c: 167: time_2ms_4=0;
  5978  06E6  01C0               	clrf	_time_2ms_4
  5979                           
  5980                           ;INPUT.c: 168: FLAG_QS_MOTOR_IN=0;
  5981                           
  5982                           ;INPUT.c: 169: FLAG_QS_MOTOR_OUT=0;
  5983                           
  5984                           ;INPUT.c: 170: FLAG_ES_MOTOR_IN=0;
  5985                           
  5986                           ;INPUT.c: 171: FLAG_ES_MOTOR_OUT=1;
  5987                           
  5988                           ;INPUT.c: 172: FLAG_STORED_IN=0;
  5989  06E7  27C6  3184         	fcall	PL16	;call to abstracted procedure
  5990                           
  5991                           ;INPUT.c: 173: FLAG_ES_MOTOR_OUT_enable=0;
  5992  06E9  12F0               	bcf	_FLAG_ES_MOTOR_OUT_enable/(0+8),_FLAG_ES_MOTOR_OUT_enable& (0+7)
  5993  06EA  2EEF               	goto	l415
  5994  06EB                     l2739:	
  5995                           
  5996                           ;INPUT.c: 177: else
  5997                           ;INPUT.c: 178: {
  5998                           ;INPUT.c: 179: time_2ms_4=0;
  5999  06EB  01C0               	clrf	_time_2ms_4
  6000                           
  6001                           ;INPUT.c: 180: if(PORTBbits.RB6)
  6002  06EC  1F0D               	btfss	13,6	;volatile
  6003  06ED  2EEF               	goto	l415
  6004                           
  6005                           ;INPUT.c: 181: FLAG_ES_MOTOR_OUT_enable=1;
  6006  06EE  16F0               	bsf	_FLAG_ES_MOTOR_OUT_enable/(0+8),_FLAG_ES_MOTOR_OUT_enable& (0+7)
  6007  06EF                     l415:	
  6008                           
  6009                           ;INPUT.c: 182: }
  6010                           ;INPUT.c: 183: if((FLAG_QS_MOTOR_IN)||(FLAG_QS_MOTOR_OUT)||(FLAG_ES_MOTOR_IN)||(FLAG_ES_
      +                          MOTOR_OUT)||(FLAG_STORED_IN))
  6011  06EF  1FF1               	btfss	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  6012  06F0  1B71               	btfsc	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  6013  06F1  2EF7               	goto	l419
  6014  06F2  1EF1               	btfss	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  6015  06F3  1A71               	btfsc	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  6016  06F4  2EF7               	goto	l419
  6017  06F5  1CF1               	btfss	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  6018  06F6  0008               	return
  6019  06F7                     l419:	
  6020                           
  6021                           ;INPUT.c: 184: {
  6022                           ;INPUT.c: 185: LATCbits.LATC1=0;
  6023  06F7  1098               	bcf	24,1	;volatile
  6024                           
  6025                           ;INPUT.c: 186: {
  6026                           ;INPUT.c: 187: if((PORTBbits.RB2)||((!PORTEbits.RE2)&&(!PORTEbits.RE1)))
  6027  06F8  190D               	btfsc	13,2	;volatile
  6028  06F9  2EFD               	goto	l2757
  6029  06FA  1D10               	btfss	16,2	;volatile
  6030  06FB  1890               	btfsc	16,1	;volatile
  6031  06FC  2F0C               	goto	l2795
  6032  06FD                     l2757:	
  6033  06FD  3006               	movlw	6
  6034                           
  6035                           ;INPUT.c: 188: {
  6036                           ;INPUT.c: 189: time_2ms_7++;
  6037  06FE  0ABD               	incf	_time_2ms_7,f
  6038                           
  6039                           ;INPUT.c: 190: if(time_2ms_7>5)
  6040  06FF  023D               	subwf	_time_2ms_7,w
  6041  0700  1C03               	skipc
  6042  0701  2F0D               	goto	l2797
  6043                           
  6044                           ;INPUT.c: 191: {
  6045                           ;INPUT.c: 192: time_2ms_7=0;
  6046  0702  01BD               	clrf	_time_2ms_7
  6047                           
  6048                           ;INPUT.c: 193: FLAG_QS_MOTOR_IN=0;
  6049  0703  13F1               	bcf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  6050                           
  6051                           ;INPUT.c: 194: FLAG_QS_MOTOR_OUT=0;
  6052  0704  1371               	bcf	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  6053                           
  6054                           ;INPUT.c: 195: FLAG_ES_MOTOR_IN=0;
  6055  0705  12F1               	bcf	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  6056                           
  6057                           ;INPUT.c: 196: FLAG_ES_MOTOR_OUT=0;
  6058  0706  1271               	bcf	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  6059                           
  6060                           ;INPUT.c: 197: FLAG_STORED_IN=0;
  6061  0707  10F1               	bcf	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  6062                           
  6063                           ;INPUT.c: 198: FLAG_ALARM_RUN=1;
  6064  0708  1571               	bsf	_FLAG_ALARM_RUN/(0+8),_FLAG_ALARM_RUN& (0+7)
  6065                           
  6066                           ;INPUT.c: 199: out_order=1;
  6067                           
  6068                           ;INPUT.c: 200: out_stop_order=1;
  6069                           
  6070                           ;INPUT.c: 201: in_order=1;
  6071                           
  6072                           ;INPUT.c: 202: in_stop_order=1;
  6073                           
  6074                           ;INPUT.c: 203: ES_in_stop_order=1;
  6075                           
  6076                           ;INPUT.c: 204: ES_in_order=1;
  6077                           
  6078                           ;INPUT.c: 205: ES_out_stop_order=1;
  6079                           
  6080                           ;INPUT.c: 206: ES_out_order=1;
  6081                           
  6082                           ;INPUT.c: 207: STORED_in_stop_order=1;
  6083                           
  6084                           ;INPUT.c: 208: STORED_in_order=1;
  6085  0709  2799  3184         	fcall	PL2	;call to abstracted procedure
  6086  070B  2F0D               	goto	l2797
  6087  070C                     l2795:	
  6088                           
  6089                           ;INPUT.c: 211: else
  6090                           ;INPUT.c: 212: {
  6091                           ;INPUT.c: 213: time_2ms_7=0;
  6092  070C  01BD               	clrf	_time_2ms_7
  6093  070D                     l2797:	
  6094                           
  6095                           ;INPUT.c: 214: }
  6096                           ;INPUT.c: 215: }
  6097                           ;INPUT.c: 216: if((!PORTEbits.RE2)&&(FLAG_QS_MOTOR_IN))
  6098  070D  1D10               	btfss	16,2	;volatile
  6099  070E  1FF1               	btfss	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  6100  070F  2F1C               	goto	l2815
  6101  0710  3006               	movlw	6
  6102                           
  6103                           ;INPUT.c: 217: {
  6104                           ;INPUT.c: 218: time_2ms_8++;
  6105  0711  0ABC               	incf	_time_2ms_8,f
  6106                           
  6107                           ;INPUT.c: 219: if(time_2ms_8>5)
  6108  0712  023C               	subwf	_time_2ms_8,w
  6109  0713  1C03               	skipc
  6110  0714  2F1D               	goto	l2817
  6111                           
  6112                           ;INPUT.c: 220: {
  6113                           ;INPUT.c: 221: time_2ms_8=0;
  6114  0715  01BC               	clrf	_time_2ms_8
  6115                           
  6116                           ;INPUT.c: 222: FLAG_QS_MOTOR_IN=0;
  6117  0716  13F1               	bcf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  6118                           
  6119                           ;INPUT.c: 223: LATBbits.LATB0=0;
  6120  0717  1017               	bcf	23,0	;volatile
  6121                           
  6122                           ;INPUT.c: 224: if(FLAG_ALARM_OVER1)
  6123  0718  1D72               	btfss	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  6124  0719  2F1D               	goto	l2817
  6125                           
  6126                           ;INPUT.c: 225: {
  6127                           ;INPUT.c: 226: FLAG_ALARM_OVER1=0;
  6128  071A  1172               	bcf	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  6129  071B  2F1D               	goto	l2817
  6130  071C                     l2815:	
  6131                           
  6132                           ;INPUT.c: 230: else
  6133                           ;INPUT.c: 231: {
  6134                           ;INPUT.c: 232: time_2ms_8=0;
  6135  071C  01BC               	clrf	_time_2ms_8
  6136  071D                     l2817:	
  6137                           
  6138                           ;INPUT.c: 233: }
  6139                           ;INPUT.c: 234: if((!PORTEbits.RE1)&&(FLAG_QS_MOTOR_OUT))
  6140  071D  1C90               	btfss	16,1	;volatile
  6141  071E  1F71               	btfss	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  6142  071F  2F2C               	goto	l2835
  6143  0720  3006               	movlw	6
  6144                           
  6145                           ;INPUT.c: 235: {
  6146                           ;INPUT.c: 236: time_2ms_9++;
  6147  0721  0ABB               	incf	_time_2ms_9,f
  6148                           
  6149                           ;INPUT.c: 237: if(time_2ms_9>5)
  6150  0722  023B               	subwf	_time_2ms_9,w
  6151  0723  1C03               	skipc
  6152  0724  2F2D               	goto	l2837
  6153                           
  6154                           ;INPUT.c: 238: {
  6155                           ;INPUT.c: 239: time_2ms_9=0;
  6156  0725  01BB               	clrf	_time_2ms_9
  6157                           
  6158                           ;INPUT.c: 241: FLAG_PROTECT_OFF=0;
  6159  0726  1371               	bcf	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  6160                           
  6161                           ;INPUT.c: 242: LATBbits.LATB1=0;
  6162  0727  1097               	bcf	23,1	;volatile
  6163                           
  6164                           ;INPUT.c: 243: if(FLAG_ALARM_OVER1)
  6165  0728  1D72               	btfss	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  6166  0729  2F2D               	goto	l2837
  6167                           
  6168                           ;INPUT.c: 244: {
  6169                           ;INPUT.c: 245: FLAG_ALARM_OVER1=0;
  6170  072A  1172               	bcf	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  6171  072B  2F2D               	goto	l2837
  6172  072C                     l2835:	
  6173                           
  6174                           ;INPUT.c: 249: else
  6175                           ;INPUT.c: 250: {
  6176                           ;INPUT.c: 251: time_2ms_9=0;
  6177  072C  01BB               	clrf	_time_2ms_9
  6178  072D                     l2837:	
  6179                           
  6180                           ;INPUT.c: 252: }
  6181                           ;INPUT.c: 253: if((!PORTEbits.RE0)&&(FLAG_ES_MOTOR_IN))
  6182  072D  1C10               	btfss	16,0	;volatile
  6183  072E  1EF1               	btfss	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  6184  072F  2F3E               	goto	l2857
  6185  0730  3006               	movlw	6
  6186                           
  6187                           ;INPUT.c: 254: {
  6188                           ;INPUT.c: 255: time_2ms_10++;
  6189  0731  0ABA               	incf	_time_2ms_10,f
  6190                           
  6191                           ;INPUT.c: 256: if(time_2ms_10>5)
  6192  0732  023A               	subwf	_time_2ms_10,w
  6193  0733  1C03               	skipc
  6194  0734  2F3F               	goto	l2859
  6195                           
  6196                           ;INPUT.c: 257: {
  6197                           ;INPUT.c: 258: time_2ms_10=0;
  6198  0735  01BA               	clrf	_time_2ms_10
  6199                           
  6200                           ;INPUT.c: 259: FLAG_ES_MOTOR_IN=0;
  6201  0736  12F1               	bcf	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  6202                           
  6203                           ;INPUT.c: 260: LATDbits.LATD7=0;
  6204  0737  1399               	bcf	25,7	;volatile
  6205                           
  6206                           ;INPUT.c: 261: if(FLAG_ALARM_OVER1)
  6207  0738  1972               	btfsc	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  6208                           
  6209                           ;INPUT.c: 262: {
  6210                           ;INPUT.c: 263: FLAG_ALARM_OVER1=0;
  6211  0739  1172               	bcf	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  6212                           
  6213                           ;INPUT.c: 264: }
  6214                           ;INPUT.c: 265: if(FLAG_ALARM_OVER2)
  6215  073A  1CF2               	btfss	_FLAG_ALARM_OVER2/(0+8),_FLAG_ALARM_OVER2& (0+7)
  6216  073B  2F3F               	goto	l2859
  6217                           
  6218                           ;INPUT.c: 266: {
  6219                           ;INPUT.c: 267: FLAG_ALARM_OVER2=0;
  6220  073C  10F2               	bcf	_FLAG_ALARM_OVER2/(0+8),_FLAG_ALARM_OVER2& (0+7)
  6221  073D  2F3F               	goto	l2859
  6222  073E                     l2857:	
  6223                           
  6224                           ;INPUT.c: 271: else
  6225                           ;INPUT.c: 272: {
  6226                           ;INPUT.c: 273: time_2ms_10=0;
  6227  073E  01BA               	clrf	_time_2ms_10
  6228  073F                     l2859:	
  6229                           
  6230                           ;INPUT.c: 274: }
  6231                           ;INPUT.c: 275: if((PORTEbits.RE0)&&(!PORTAbits.RA5)&&(FLAG_ES_MOTOR_OUT))
  6232  073F  1810               	btfsc	16,0	;volatile
  6233  0740  1A8C               	btfsc	12,5	;volatile
  6234  0741  2F52               	goto	l2881
  6235  0742  1E71               	btfss	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  6236  0743  2F52               	goto	l2881
  6237  0744  3006               	movlw	6
  6238                           
  6239                           ;INPUT.c: 276: {
  6240                           ;INPUT.c: 277: time_2ms_11++;
  6241  0745  0AB9               	incf	_time_2ms_11,f
  6242                           
  6243                           ;INPUT.c: 278: if(time_2ms_11>5)
  6244  0746  0239               	subwf	_time_2ms_11,w
  6245  0747  1C03               	skipc
  6246  0748  2F53               	goto	l2883
  6247                           
  6248                           ;INPUT.c: 279: {
  6249                           ;INPUT.c: 280: time_2ms_11=0;
  6250  0749  01B9               	clrf	_time_2ms_11
  6251                           
  6252                           ;INPUT.c: 281: FLAG_ES_MOTOR_OUT=0;
  6253  074A  1271               	bcf	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  6254                           
  6255                           ;INPUT.c: 282: LATDbits.LATD6=0;
  6256  074B  1319               	bcf	25,6	;volatile
  6257                           
  6258                           ;INPUT.c: 283: if(FLAG_ALARM_OVER1)
  6259  074C  1972               	btfsc	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  6260                           
  6261                           ;INPUT.c: 284: {
  6262                           ;INPUT.c: 285: FLAG_ALARM_OVER1=0;
  6263  074D  1172               	bcf	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  6264                           
  6265                           ;INPUT.c: 286: }
  6266                           ;INPUT.c: 287: if(FLAG_ALARM_OVER2)
  6267  074E  1CF2               	btfss	_FLAG_ALARM_OVER2/(0+8),_FLAG_ALARM_OVER2& (0+7)
  6268  074F  2F53               	goto	l2883
  6269                           
  6270                           ;INPUT.c: 288: {
  6271                           ;INPUT.c: 289: FLAG_ALARM_OVER2=0;
  6272  0750  10F2               	bcf	_FLAG_ALARM_OVER2/(0+8),_FLAG_ALARM_OVER2& (0+7)
  6273  0751  2F53               	goto	l2883
  6274  0752                     l2881:	
  6275                           
  6276                           ;INPUT.c: 293: else
  6277                           ;INPUT.c: 294: {
  6278                           ;INPUT.c: 295: time_2ms_11=0;
  6279  0752  01B9               	clrf	_time_2ms_11
  6280  0753                     l2883:	
  6281                           
  6282                           ;INPUT.c: 296: }
  6283                           ;INPUT.c: 297: if((!PORTBbits.RB7)&&(FLAG_STORED_IN))
  6284  0753  1F8D               	btfss	13,7	;volatile
  6285  0754  1CF1               	btfss	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  6286  0755  2F60               	goto	l2899
  6287  0756  300B               	movlw	11
  6288                           
  6289                           ;INPUT.c: 298: {
  6290                           ;INPUT.c: 299: time_2ms_21++;
  6291  0757  0AB7               	incf	_time_2ms_21,f
  6292                           
  6293                           ;INPUT.c: 300: if(time_2ms_21>10)
  6294  0758  0237               	subwf	_time_2ms_21,w
  6295  0759  1C03               	skipc
  6296  075A  0008               	return
  6297                           
  6298                           ;INPUT.c: 301: {
  6299                           ;INPUT.c: 302: time_2ms_21=0;
  6300  075B  01B7               	clrf	_time_2ms_21
  6301                           
  6302                           ;INPUT.c: 303: FLAG_STORED_IN=0;
  6303  075C  10F1               	bcf	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  6304                           
  6305                           ;INPUT.c: 304: FLAG_QS_MOTOR_IN=1;
  6306  075D  17F1               	bsf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  6307                           
  6308                           ;INPUT.c: 305: LATDbits.LATD4=0;
  6309  075E  1219               	bcf	25,4	;volatile
  6310  075F  0008               	return
  6311  0760                     l2899:	
  6312                           
  6313                           ;INPUT.c: 308: else
  6314                           ;INPUT.c: 309: {
  6315                           ;INPUT.c: 310: time_2ms_21=0;
  6316  0760  01B7               	clrf	_time_2ms_21
  6317  0761  0008               	return
  6318  0762                     __end_of_INPUT_COLLECT:	
  6319  0762                     __ptext10:	
  6320 ;; *************** function _LED_CTRL *****************
  6321 ;; Defined at:
  6322 ;;		line 56 in file "mcc_generated_files/OUTPUT.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;		None
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;		None
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1    wreg      void 
  6329 ;; Registers used:
  6330 ;;		wreg, status,2, status,0
  6331 ;; Tracked objects:
  6332 ;;		On entry : 3F/0
  6333 ;;		On exit  : 3F/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6340 ;;Total ram usage:        0 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_main
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           
  6350                           ;psect for function _LED_CTRL
  6351  0762                     _LED_CTRL:	
  6352                           
  6353                           ;OUTPUT.c: 59: {
  6354                           ;OUTPUT.c: 60: if(FLAG_OVER_TIME_30S)
  6355                           
  6356                           ;incstack = 0
  6357                           ; Regs used in _LED_CTRL: [wreg+status,2+status,0]
  6358  0762  1E70               	btfss	_FLAG_OVER_TIME_30S/(0+8),_FLAG_OVER_TIME_30S& (0+7)
  6359  0763  2F74               	goto	l2969
  6360                           
  6361                           ;OUTPUT.c: 61: {
  6362                           ;OUTPUT.c: 62: led_time_40ms++;
  6363                           
  6364                           ;OUTPUT.c: 63: if(led_time_40ms>=25)
  6365  0764  27BB  3184         	fcall	PL8	;call to abstracted procedure
  6366  0766  3019               	movlw	25
  6367  0767  1903               	skipnz
  6368  0768  022C               	subwf	_led_time_40ms,w
  6369  0769  1C03               	skipc
  6370  076A  2F6F               	goto	l2939
  6371  076B  3004               	movlw	4
  6372                           
  6373                           ;OUTPUT.c: 64: {
  6374                           ;OUTPUT.c: 65: led_time_40ms=0;
  6375  076C  01AC               	clrf	_led_time_40ms
  6376  076D  01AD               	clrf	_led_time_40ms+1
  6377                           
  6378                           ;OUTPUT.c: 66: LATAbits.LATA2 = ~LATAbits.LATA2;
  6379  076E  0696               	xorwf	22,f	;volatile
  6380  076F                     l2939:	
  6381                           
  6382                           ;OUTPUT.c: 67: }
  6383                           ;OUTPUT.c: 68: FLAG_QS_MOTOR_IN=0;
  6384  076F  13F1               	bcf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  6385                           
  6386                           ;OUTPUT.c: 69: FLAG_QS_MOTOR_OUT=0;
  6387                           
  6388                           ;OUTPUT.c: 70: FLAG_ES_MOTOR_IN=0;
  6389                           
  6390                           ;OUTPUT.c: 71: FLAG_ES_MOTOR_OUT=0;
  6391                           
  6392                           ;OUTPUT.c: 72: FLAG_STORED_IN=0;
  6393  0770  27AE  3184         	fcall	PL4	;call to abstracted procedure
  6394                           
  6395                           ;OUTPUT.c: 73: out_order=1;
  6396                           
  6397                           ;OUTPUT.c: 74: out_stop_order=1;
  6398                           
  6399                           ;OUTPUT.c: 75: in_order=1;
  6400                           
  6401                           ;OUTPUT.c: 76: in_stop_order=1;
  6402                           
  6403                           ;OUTPUT.c: 77: ES_in_stop_order=1;
  6404                           
  6405                           ;OUTPUT.c: 78: ES_in_order=1;
  6406                           
  6407                           ;OUTPUT.c: 79: ES_out_stop_order=1;
  6408                           
  6409                           ;OUTPUT.c: 80: ES_out_order=1;
  6410                           
  6411                           ;OUTPUT.c: 81: STORED_in_stop_order=1;
  6412                           
  6413                           ;OUTPUT.c: 82: STORED_in_order=1;
  6414  0772  2799  3184         	fcall	PL2	;call to abstracted procedure
  6415  0774                     l2969:	
  6416                           
  6417                           ;OUTPUT.c: 83: }
  6418                           ;OUTPUT.c: 85: if(FLAG_OVER_CURRENT)
  6419  0774  1DF0               	btfss	_FLAG_OVER_CURRENT/(0+8),_FLAG_OVER_CURRENT& (0+7)
  6420  0775  2F7C               	goto	l530
  6421                           
  6422                           ;OUTPUT.c: 86: {
  6423                           ;OUTPUT.c: 87: LATAbits.LATA2 = 1;
  6424  0776  1516               	bsf	22,2	;volatile
  6425                           
  6426                           ;OUTPUT.c: 88: FLAG_QS_MOTOR_IN=0;
  6427  0777  13F1               	bcf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  6428                           
  6429                           ;OUTPUT.c: 89: FLAG_QS_MOTOR_OUT=0;
  6430                           
  6431                           ;OUTPUT.c: 90: FLAG_ES_MOTOR_IN=0;
  6432                           
  6433                           ;OUTPUT.c: 91: FLAG_ES_MOTOR_OUT=0;
  6434                           
  6435                           ;OUTPUT.c: 92: FLAG_STORED_IN=0;
  6436  0778  27AE  3184         	fcall	PL4	;call to abstracted procedure
  6437                           
  6438                           ;OUTPUT.c: 93: out_order=1;
  6439                           
  6440                           ;OUTPUT.c: 94: out_stop_order=1;
  6441                           
  6442                           ;OUTPUT.c: 95: in_order=1;
  6443                           
  6444                           ;OUTPUT.c: 96: in_stop_order=1;
  6445                           
  6446                           ;OUTPUT.c: 97: ES_in_stop_order=1;
  6447                           
  6448                           ;OUTPUT.c: 98: ES_in_order=1;
  6449                           
  6450                           ;OUTPUT.c: 99: ES_out_stop_order=1;
  6451                           
  6452                           ;OUTPUT.c: 100: ES_out_order=1;
  6453                           
  6454                           ;OUTPUT.c: 101: STORED_in_stop_order=1;
  6455                           
  6456                           ;OUTPUT.c: 102: STORED_in_order=1;
  6457  077A  2799  3184         	fcall	PL2	;call to abstracted procedure
  6458  077C                     l530:	
  6459                           
  6460                           ;OUTPUT.c: 103: }
  6461                           ;OUTPUT.c: 104: if(FLAG_ALARM_OVER1)
  6462  077C  1D72               	btfss	_FLAG_ALARM_OVER1/(0+8),_FLAG_ALARM_OVER1& (0+7)
  6463  077D  2F86               	goto	l531
  6464                           
  6465                           ;OUTPUT.c: 105: {
  6466                           ;OUTPUT.c: 106: led_time_40ms++;
  6467                           
  6468                           ;OUTPUT.c: 107: if(led_time_40ms>=25)
  6469  077E  27BB  3184         	fcall	PL8	;call to abstracted procedure
  6470  0780  3019               	movlw	25
  6471  0781  1903               	skipnz
  6472  0782  022C               	subwf	_led_time_40ms,w
  6473  0783  1C03               	skipc
  6474  0784  0008               	return
  6475                           
  6476                           ;OUTPUT.c: 108: {
  6477                           ;OUTPUT.c: 109: led_time_40ms=0;
  6478                           
  6479                           ;OUTPUT.c: 110: LATAbits.LATA2 = ~LATAbits.LATA2;
  6480  0785  2FC1               	ljmp	PL14	;call to abstracted procedure
  6481  0786                     l531:	
  6482                           
  6483                           ;OUTPUT.c: 113: else if(FLAG_ALARM_OVER2)
  6484  0786  1CF2               	btfss	_FLAG_ALARM_OVER2/(0+8),_FLAG_ALARM_OVER2& (0+7)
  6485  0787  2F8A               	goto	l534
  6486                           
  6487                           ;OUTPUT.c: 114: {
  6488                           ;OUTPUT.c: 115: LATAbits.LATA2 = 1;
  6489  0788  1516               	bsf	22,2	;volatile
  6490                           
  6491                           ;OUTPUT.c: 116: }
  6492  0789  0008               	return
  6493  078A                     l534:	
  6494                           
  6495                           ;OUTPUT.c: 117: else if((FLAG_ALARM_CMD)||(FLAG_ALARM_RUN))
  6496  078A  19F1               	btfsc	_FLAG_ALARM_CMD/(0+8),_FLAG_ALARM_CMD& (0+7)
  6497  078B  2F8E               	goto	l2985
  6498  078C  1D71               	btfss	_FLAG_ALARM_RUN/(0+8),_FLAG_ALARM_RUN& (0+7)
  6499  078D  2F96               	goto	l536
  6500  078E                     l2985:	
  6501                           
  6502                           ;OUTPUT.c: 118: {
  6503                           ;OUTPUT.c: 119: led_time_40ms++;
  6504                           
  6505                           ;OUTPUT.c: 120: if(led_time_40ms>=3)
  6506  078E  27BB  3184         	fcall	PL8	;call to abstracted procedure
  6507  0790  3003               	movlw	3
  6508  0791  1903               	skipnz
  6509  0792  022C               	subwf	_led_time_40ms,w
  6510  0793  1C03               	skipc
  6511  0794  0008               	return
  6512                           
  6513                           ;OUTPUT.c: 121: {
  6514                           ;OUTPUT.c: 122: led_time_40ms=0;
  6515                           
  6516                           ;OUTPUT.c: 123: LATAbits.LATA2 = ~LATAbits.LATA2;
  6517  0795  2FC1               	ljmp	PL14	;call to abstracted procedure
  6518  0796                     l536:	
  6519                           
  6520                           ;OUTPUT.c: 126: else
  6521                           ;OUTPUT.c: 127: {
  6522                           ;OUTPUT.c: 128: LATAbits.LATA2=0;
  6523  0796  1116               	bcf	22,2	;volatile
  6524                           
  6525                           ;OUTPUT.c: 129: LATCbits.LATC2=1;
  6526  0797  1518               	bsf	24,2	;volatile
  6527  0798  0008               	return
  6528  0799                     __end_of_LED_CTRL:	
  6529  0799                     PL2:	
  6530  0799  01CB               	clrf	_out_order
  6531  079A  0ACB               	incf	_out_order,f
  6532  079B  01CA               	clrf	_out_stop_order
  6533  079C  0ACA               	incf	_out_stop_order,f
  6534  079D  01C9               	clrf	_in_order
  6535  079E  0AC9               	incf	_in_order,f
  6536  079F  01C8               	clrf	_in_stop_order
  6537  07A0  0AC8               	incf	_in_stop_order,f
  6538  07A1  01C7               	clrf	_ES_in_stop_order
  6539  07A2  0AC7               	incf	_ES_in_stop_order,f
  6540  07A3  01FD               	clrf	_ES_in_order
  6541  07A4  0AFD               	incf	_ES_in_order,f
  6542  07A5  01C6               	clrf	_ES_out_stop_order
  6543  07A6  0AC6               	incf	_ES_out_stop_order,f
  6544  07A7  01FC               	clrf	_ES_out_order
  6545  07A8  0AFC               	incf	_ES_out_order,f
  6546  07A9  01C5               	clrf	_STORED_in_stop_order
  6547  07AA  0AC5               	incf	_STORED_in_stop_order,f
  6548  07AB  01C4               	clrf	_STORED_in_order
  6549  07AC  0AC4               	incf	_STORED_in_order,f
  6550  07AD  0008               	return
  6551  07AE                     __end_ofPL2:	
  6552  07AE                     PL4:	
  6553  07AE  1371               	bcf	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  6554  07AF  12F1               	bcf	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  6555  07B0  1271               	bcf	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  6556  07B1  10F1               	bcf	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  6557  07B2  0008               	return
  6558  07B3                     __end_ofPL4:	
  6559  07B3                     PL6:	
  6560  07B3  0874               	movf	?_ADCC_GetSingleConversion+1,w
  6561  07B4  0140               	movlb	0	; select bank0
  6562  07B5  00AB               	movwf	_ad_value_I_TEST+1
  6563  07B6  0873               	movf	?_ADCC_GetSingleConversion,w
  6564  07B7  00AA               	movwf	_ad_value_I_TEST
  6565  07B8  3002               	movlw	2
  6566  07B9  022B               	subwf	_ad_value_I_TEST+1,w
  6567  07BA  34B9               	retlw	185
  6568  07BB                     __end_ofPL6:	
  6569  07BB                     PL8:	
  6570  07BB  0AAC               	incf	_led_time_40ms,f
  6571  07BC  1903               	skipnz
  6572  07BD  0AAD               	incf	_led_time_40ms+1,f
  6573  07BE  3000               	movlw	0
  6574  07BF  022D               	subwf	_led_time_40ms+1,w
  6575  07C0  0008               	return
  6576  07C1                     __end_ofPL8:	
  6577  07C1                     PL14:	
  6578  07C1  3004               	movlw	4
  6579  07C2  01AC               	clrf	_led_time_40ms
  6580  07C3  01AD               	clrf	_led_time_40ms+1
  6581  07C4  0696               	xorwf	22,f	;volatile
  6582  07C5  0008               	return
  6583  07C6                     __end_ofPL14:	
  6584  07C6                     PL16:	
  6585  07C6  13F1               	bcf	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  6586  07C7  1371               	bcf	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  6587  07C8  12F1               	bcf	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  6588  07C9  1671               	bsf	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  6589  07CA  10F1               	bcf	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  6590  07CB  0008               	return
  6591  07CC                     __end_ofPL16:	
  6592  07CC                     PL18:	
  6593  07CC  1219               	bcf	25,4	;volatile
  6594  07CD  1570               	bsf	_flag_overload_out/(0+8),_flag_overload_out& (0+7)
  6595  07CE  01A6               	clrf	_overload_time_out
  6596  07CF  01A7               	clrf	_overload_time_out+1
  6597  07D0  0008               	return
  6598  07D1                     __end_ofPL18:	
  6599  07D1                     PL20:	
  6600  07D1  1399               	bcf	25,7	;volatile
  6601  07D2  14F0               	bsf	_flag_overload_in_ES/(0+8),_flag_overload_in_ES& (0+7)
  6602  07D3  01A2               	clrf	_overload_time_in_ES
  6603  07D4  01A3               	clrf	_overload_time_in_ES+1
  6604  07D5  0008               	return
  6605  07D6                     __end_ofPL20:	
  6606  07D6                     PL22:	
  6607  07D6  1319               	bcf	25,6	;volatile
  6608  07D7  1470               	bsf	_flag_overload_out_ES/(0+8),_flag_overload_out_ES& (0+7)
  6609  07D8  01A4               	clrf	_overload_time_out_ES
  6610  07D9  01A5               	clrf	_overload_time_out_ES+1
  6611  07DA  0008               	return
  6612  07DB                     __end_ofPL22:	
  6613  07DB                     __ptext2:	
  6614 ;; *************** function ___lwdiv *****************
  6615 ;; Defined at:
  6616 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  divisor         2    0[COMMON] unsigned int 
  6619 ;;  dividend        2    2[COMMON] unsigned int 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  quotient        2    4[COMMON] unsigned int 
  6622 ;;  counter         1    6[COMMON] unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  2    0[COMMON] unsigned int 
  6625 ;; Registers used:
  6626 ;;		wreg, status,2, status,0
  6627 ;; Tracked objects:
  6628 ;;		On entry : 3F/0
  6629 ;;		On exit  : 3F/0
  6630 ;;		Unchanged: 3F/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6633 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6635 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6636 ;;Total ram usage:        7 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_main
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           
  6646                           ;psect for function ___lwdiv
  6647  07DB                     ___lwdiv:	
  6648                           
  6649                           ;incstack = 0
  6650                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6651  07DB  01F7               	clrf	___lwdiv@quotient
  6652  07DC  01F8               	clrf	___lwdiv@quotient+1
  6653  07DD  0873               	movf	___lwdiv@divisor,w
  6654  07DE  0474               	iorwf	___lwdiv@divisor+1,w
  6655  07DF  1903               	btfsc	3,2
  6656  07E0  2FFB               	goto	l3157
  6657  07E1  01F9               	clrf	___lwdiv@counter
  6658  07E2                     L1:	
  6659  07E2  0AF9               	incf	___lwdiv@counter,f
  6660  07E3  1BF4               	btfsc	___lwdiv@divisor+1,7
  6661  07E4  2FE8               	goto	l3145
  6662  07E5  35F3               	lslf	___lwdiv@divisor,f
  6663  07E6  0DF4               	rlf	___lwdiv@divisor+1,f
  6664  07E7  2FE2               	goto	L1
  6665  07E8                     l3145:	
  6666  07E8  35F7               	lslf	___lwdiv@quotient,f
  6667  07E9  0DF8               	rlf	___lwdiv@quotient+1,f
  6668  07EA  0874               	movf	___lwdiv@divisor+1,w
  6669  07EB  0276               	subwf	___lwdiv@dividend+1,w
  6670  07EC  1D03               	skipz
  6671  07ED  2FF0               	goto	u3895
  6672  07EE  0873               	movf	___lwdiv@divisor,w
  6673  07EF  0275               	subwf	___lwdiv@dividend,w
  6674  07F0                     u3895:	
  6675  07F0  1C03               	skipc
  6676  07F1  2FF7               	goto	l3153
  6677  07F2  0873               	movf	___lwdiv@divisor,w
  6678  07F3  02F5               	subwf	___lwdiv@dividend,f
  6679  07F4  0874               	movf	___lwdiv@divisor+1,w
  6680  07F5  3BF6               	subwfb	___lwdiv@dividend+1,f
  6681  07F6  1477               	bsf	___lwdiv@quotient,0
  6682  07F7                     l3153:	
  6683  07F7  36F4               	lsrf	___lwdiv@divisor+1,f
  6684  07F8  0CF3               	rrf	___lwdiv@divisor,f
  6685  07F9  0BF9               	decfsz	___lwdiv@counter,f
  6686  07FA  2FE8               	goto	l3145
  6687  07FB                     l3157:	
  6688  07FB  0878               	movf	___lwdiv@quotient+1,w
  6689  07FC  00F4               	movwf	?___lwdiv+1
  6690  07FD  0877               	movf	___lwdiv@quotient,w
  6691  07FE  00F3               	movwf	?___lwdiv
  6692  07FF  0008               	return
  6693  0800                     __end_of___lwdiv:	
  6694                           
  6695                           	psect	bitbssCOMMON
  6696  0380                     __pbitbssCOMMON:	
  6697  0380                     _flag_overload_out_ES:	
  6698  0380                     	ds	1
  6699  0381                     _flag_overload_in_ES:	
  6700  0381                     	ds	1
  6701  0382                     _flag_overload_out:	
  6702  0382                     	ds	1
  6703  0383                     _FLAG_OVER_CURRENT:	
  6704  0383                     	ds	1
  6705  0384                     _FLAG_OVER_TIME_30S:	
  6706  0384                     	ds	1
  6707  0385                     _FLAG_ES_MOTOR_OUT_enable:	
  6708  0385                     	ds	1
  6709  0386                     _FLAG_ES_MOTOR_IN_enable:	
  6710  0386                     	ds	1
  6711  0387                     _FLAG_QS_MOTOR_IN_enable:	
  6712  0387                     	ds	1
  6713  0388                     _FLAG_QS_MOTOR_OUT_enable:	
  6714  0388                     	ds	1
  6715  0389                     _FLAG_STORED_IN:	
  6716  0389                     	ds	1
  6717  038A                     _FLAG_ALARM_RUN:	
  6718  038A                     	ds	1
  6719  038B                     _FLAG_ALARM_CMD:	
  6720  038B                     	ds	1
  6721  038C                     _FLAG_ES_MOTOR_OUT:	
  6722  038C                     	ds	1
  6723  038D                     _FLAG_ES_MOTOR_IN:	
  6724  038D                     	ds	1
  6725  038E                     _FLAG_QS_MOTOR_OUT:	
  6726  038E                     	ds	1
  6727  038F                     _FLAG_QS_MOTOR_IN:	
  6728  038F                     	ds	1
  6729  0390                     _FLAG_RESET_ALARM:	
  6730  0390                     	ds	1
  6731  0391                     _FLAG_ALARM_OVER2:	
  6732  0391                     	ds	1
  6733  0392                     _FLAG_ALARM_OVER1:	
  6734  0392                     	ds	1
  6735  0393                     _FLAG_ALARM:	
  6736  0393                     	ds	1
  6737                           
  6738                           	psect	dataCOMMON
  6739  007C                     __pdataCOMMON:	
  6740  007C                     _ES_out_order:	
  6741  007C                     	ds	1
  6742  007D                     _ES_in_order:	
  6743  007D                     	ds	1
  6744                           
  6745                           	psect	bssBANK0
  6746  0020                     __pbssBANK0:	
  6747  0020                     _ad_value_I_TEST_avg:	
  6748  0020                     	ds	2
  6749  0022                     _overload_time_in_ES:	
  6750  0022                     	ds	2
  6751  0024                     _overload_time_out_ES:	
  6752  0024                     	ds	2
  6753  0026                     _overload_time_out:	
  6754  0026                     	ds	2
  6755  0028                     _sum_value:	
  6756  0028                     	ds	2
  6757  002A                     _ad_value_I_TEST:	
  6758  002A                     	ds	2
  6759  002C                     _led_time_40ms:	
  6760  002C                     	ds	2
  6761  002E                     _motor_run_1s:	
  6762  002E                     	ds	2
  6763  0030                     _test_time:	
  6764  0030                     	ds	2
  6765  0032                     _time_2ms_13:	
  6766  0032                     	ds	1
  6767  0033                     _time_2ms_12:	
  6768  0033                     	ds	1
  6769  0034                     _i_avg:	
  6770  0034                     	ds	1
  6771  0035                     _motor_do_time:	
  6772  0035                     	ds	1
  6773  0036                     _CMD_ERR:	
  6774  0036                     	ds	1
  6775  0037                     _time_2ms_21:	
  6776  0037                     	ds	1
  6777  0038                     _time_2ms_STORED:	
  6778  0038                     	ds	1
  6779  0039                     _time_2ms_11:	
  6780  0039                     	ds	1
  6781  003A                     _time_2ms_10:	
  6782  003A                     	ds	1
  6783  003B                     _time_2ms_9:	
  6784  003B                     	ds	1
  6785  003C                     _time_2ms_8:	
  6786  003C                     	ds	1
  6787  003D                     _time_2ms_7:	
  6788  003D                     	ds	1
  6789  003E                     _time_2ms_6:	
  6790  003E                     	ds	1
  6791  003F                     _time_2ms_5:	
  6792  003F                     	ds	1
  6793  0040                     _time_2ms_4:	
  6794  0040                     	ds	1
  6795  0041                     _time_2ms_3:	
  6796  0041                     	ds	1
  6797  0042                     _time_2ms_2:	
  6798  0042                     	ds	1
  6799  0043                     _time_2ms_1:	
  6800  0043                     	ds	1
  6801                           
  6802                           	psect	dataBANK0
  6803  0044                     __pdataBANK0:	
  6804  0044                     _STORED_in_order:	
  6805  0044                     	ds	1
  6806  0045                     _STORED_in_stop_order:	
  6807  0045                     	ds	1
  6808  0046                     _ES_out_stop_order:	
  6809  0046                     	ds	1
  6810  0047                     _ES_in_stop_order:	
  6811  0047                     	ds	1
  6812  0048                     _in_stop_order:	
  6813  0048                     	ds	1
  6814  0049                     _in_order:	
  6815  0049                     	ds	1
  6816  004A                     _out_stop_order:	
  6817  004A                     	ds	1
  6818  004B                     _out_order:	
  6819  004B                     	ds	1
  6820                           
  6821                           	psect	bssBANK1
  6822  00A0                     __pbssBANK1:	
  6823  00A0                     _ad_value:	
  6824  00A0                     	ds	40
  6825                           
  6826                           	psect	inittext
  6827  0263                     init_ram:	
  6828  0263  00FE               	movwf	126
  6829  0264                     initloop:	
  6830  0264  0012               	moviw fsr0++
  6831  0265  001E               	movwi fsr1++
  6832  0266  0BFE               	decfsz	126,f
  6833  0267  2A64               	goto	initloop
  6834  0268  3400               	retlw	0
  6835                           
  6836                           	psect	clrtext
  6837  025D                     clear_ram0:	
  6838                           ;	Called with FSR0 containing the base address, and
  6839                           ;	WREG with the size to clear
  6840                           
  6841  025D  0064               	clrwdt	;clear the watchdog before getting into this loop
  6842  025E                     clrloop0:	
  6843  025E  0180               	clrf	0	;clear RAM location pointed to by FSR
  6844  025F  3101               	addfsr 0,1
  6845  0260  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6846  0261  2A5E               	goto	clrloop0	;have we reached the end yet?
  6847  0262  3400               	retlw	0	;all done for this memory range, return
  6848                           
  6849                           	psect	cstackCOMMON
  6850  0073                     __pcstackCOMMON:	
  6851  0073                     ?_PMD_Initialize:	
  6852  0073                     ??_PMD_Initialize:	
  6853                           ; 1 bytes @ 0x0
  6854                           
  6855  0073                     ?_PIN_MANAGER_Initialize:	
  6856                           ; 1 bytes @ 0x0
  6857                           
  6858  0073                     ??_PIN_MANAGER_Initialize:	
  6859                           ; 1 bytes @ 0x0
  6860                           
  6861  0073                     ?_OSCILLATOR_Initialize:	
  6862                           ; 1 bytes @ 0x0
  6863                           
  6864  0073                     ??_OSCILLATOR_Initialize:	
  6865                           ; 1 bytes @ 0x0
  6866                           
  6867  0073                     ?_delay:	
  6868                           ; 1 bytes @ 0x0
  6869                           
  6870  0073                     ?_ADCC_Initialize:	
  6871                           ; 1 bytes @ 0x0
  6872                           
  6873  0073                     ??_ADCC_Initialize:	
  6874                           ; 1 bytes @ 0x0
  6875                           
  6876  0073                     ?_TMR0_Initialize:	
  6877                           ; 1 bytes @ 0x0
  6878                           
  6879  0073                     ??_TMR0_Initialize:	
  6880                           ; 1 bytes @ 0x0
  6881                           
  6882  0073                     ?_SYSTEM_Initialize:	
  6883                           ; 1 bytes @ 0x0
  6884                           
  6885  0073                     ??_SYSTEM_Initialize:	
  6886                           ; 1 bytes @ 0x0
  6887                           
  6888  0073                     ?_INPUT_COLLECT:	
  6889                           ; 1 bytes @ 0x0
  6890                           
  6891  0073                     ??_INPUT_COLLECT:	
  6892                           ; 1 bytes @ 0x0
  6893                           
  6894  0073                     ?_ALARM_CTRL:	
  6895                           ; 1 bytes @ 0x0
  6896                           
  6897  0073                     ??_ALARM_CTRL:	
  6898                           ; 1 bytes @ 0x0
  6899                           
  6900  0073                     ?_LED_CTRL:	
  6901                           ; 1 bytes @ 0x0
  6902                           
  6903  0073                     ??_LED_CTRL:	
  6904                           ; 1 bytes @ 0x0
  6905                           
  6906  0073                     ?_MOTOR_CTRL:	
  6907                           ; 1 bytes @ 0x0
  6908                           
  6909  0073                     ??_MOTOR_CTRL:	
  6910                           ; 1 bytes @ 0x0
  6911                           
  6912  0073                     ?_main:	
  6913                           ; 1 bytes @ 0x0
  6914                           
  6915  0073                     ?_ADCC_GetSingleConversion:	
  6916                           ; 1 bytes @ 0x0
  6917                           
  6918  0073                     ?___lwdiv:	
  6919                           ; 2 bytes @ 0x0
  6920                           
  6921  0073                     delay@x:	
  6922                           ; 2 bytes @ 0x0
  6923                           
  6924  0073                     ___lwdiv@divisor:	
  6925                           ; 2 bytes @ 0x0
  6926                           
  6927                           
  6928                           ; 2 bytes @ 0x0
  6929  0073                     	ds	2
  6930  0075                     ??_delay:	
  6931  0075                     delay@a:	
  6932                           ; 1 bytes @ 0x2
  6933                           
  6934  0075                     ___lwdiv@dividend:	
  6935                           ; 2 bytes @ 0x2
  6936                           
  6937                           
  6938                           ; 2 bytes @ 0x2
  6939  0075                     	ds	1
  6940  0076                     ??_ADCC_GetSingleConversion:	
  6941  0076                     ADCC_GetSingleConversion@channel:	
  6942                           ; 1 bytes @ 0x3
  6943                           
  6944                           
  6945                           ; 1 bytes @ 0x3
  6946  0076                     	ds	1
  6947  0077                     ??___lwdiv:	
  6948  0077                     delay@b:	
  6949                           ; 1 bytes @ 0x4
  6950                           
  6951  0077                     ___lwdiv@quotient:	
  6952                           ; 2 bytes @ 0x4
  6953                           
  6954                           
  6955                           ; 2 bytes @ 0x4
  6956  0077                     	ds	2
  6957  0079                     ___lwdiv@counter:	
  6958                           
  6959                           ; 1 bytes @ 0x6
  6960  0079                     	ds	1
  6961  007A                     ??_main:	
  6962                           
  6963                           ; 1 bytes @ 0x7
  6964  007A                     	ds	2
  6965                           
  6966                           	psect	text1
  6967  0271                     __ptext1:	
  6968 ;; *************** function _delay *****************
  6969 ;; Defined at:
  6970 ;;		line 309 in file "main.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  x               2    0[COMMON] unsigned int 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  b               2    4[COMMON] unsigned int 
  6975 ;;  a               2    2[COMMON] unsigned int 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 3F/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6986 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6988 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6989 ;;Total ram usage:        6 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_main
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           
  6999                           ;psect for function _delay
  7000  0271                     _delay:	
  7001                           
  7002                           ;main.c: 311: unsigned int a,b;
  7003                           ;main.c: 312: for(a=x;a>0;a--)
  7004                           
  7005                           ;incstack = 0
  7006                           ; Regs used in _delay: [wreg+status,2+status,0]
  7007  0271  0874               	movf	delay@x+1,w
  7008  0272  00F6               	movwf	delay@a+1
  7009  0273  0873               	movf	delay@x,w
  7010  0274  00F5               	movwf	delay@a
  7011  0275                     l3117:	
  7012  0275  0875               	movf	delay@a,w
  7013  0276  0476               	iorwf	delay@a+1,w
  7014  0277  1903               	btfsc	3,2
  7015  0278  0008               	return
  7016                           
  7017                           ;main.c: 313: {
  7018                           ;main.c: 314: for(b=83;b>0;b--)
  7019  0279  3053               	movlw	83
  7020  027A  00F7               	movwf	delay@b
  7021  027B  01F8               	clrf	delay@b+1
  7022  027C                     l809:	
  7023  027C  0064               	clrwdt	;# 
  7024  027D  3001               	movlw	1
  7025  027E  02F7               	subwf	delay@b,f
  7026  027F  3000               	movlw	0
  7027  0280  3BF8               	subwfb	delay@b+1,f
  7028  0281  0877               	movf	delay@b,w
  7029  0282  0478               	iorwf	delay@b+1,w
  7030  0283  1D03               	btfss	3,2
  7031  0284  2A7C               	goto	l809
  7032  0285  3001               	movlw	1
  7033  0286  02F5               	subwf	delay@a,f
  7034  0287  3000               	movlw	0
  7035  0288  3BF6               	subwfb	delay@a+1,f
  7036  0289  2A75               	goto	l3117
  7037  028A                     __end_of_delay:	
  7038                           
  7039                           	psect	text3
  7040  028A                     __ptext3:	
  7041 ;; *************** function _SYSTEM_Initialize *****************
  7042 ;; Defined at:
  7043 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;		None
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1    wreg      void 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0, pclath, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : B3F/0
  7054 ;;		On exit  : 3F/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7061 ;;Total ram usage:        0 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    1
  7064 ;; This function calls:
  7065 ;;		_ADCC_Initialize
  7066 ;;		_OSCILLATOR_Initialize
  7067 ;;		_PIN_MANAGER_Initialize
  7068 ;;		_PMD_Initialize
  7069 ;;		_TMR0_Initialize
  7070 ;; This function is called by:
  7071 ;;		_main
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           
  7076                           ;psect for function _SYSTEM_Initialize
  7077  028A                     _SYSTEM_Initialize:	
  7078                           
  7079                           ;mcc.c: 52: PMD_Initialize();
  7080                           
  7081                           ;incstack = 0
  7082                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7083  028A  22BE  3182         	fcall	_PMD_Initialize
  7084                           
  7085                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  7086  028C  229C  3182         	fcall	_PIN_MANAGER_Initialize
  7087                           
  7088                           ;mcc.c: 54: OSCILLATOR_Initialize();
  7089  028E  2293  3182         	fcall	_OSCILLATOR_Initialize
  7090                           
  7091                           ;mcc.c: 55: ADCC_Initialize();
  7092  0290  22CC  3182         	fcall	_ADCC_Initialize
  7093                           
  7094                           ;mcc.c: 56: TMR0_Initialize();
  7095  0292  2AE3               	ljmp	l2341
  7096  0293                     __end_of_SYSTEM_Initialize:	
  7097  0293                     __ptext7:	
  7098 ;; *************** function _OSCILLATOR_Initialize *****************
  7099 ;; Defined at:
  7100 ;;		line 59 in file "mcc_generated_files/mcc.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;		None
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;		None
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, status,2
  7109 ;; Tracked objects:
  7110 ;;		On entry : B3F/3E
  7111 ;;		On exit  : B3F/11
  7112 ;;		Unchanged: B00/0
  7113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7118 ;;Total ram usage:        0 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; This function calls:
  7121 ;;		Nothing
  7122 ;; This function is called by:
  7123 ;;		_SYSTEM_Initialize
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           
  7128                           ;psect for function _OSCILLATOR_Initialize
  7129  0293                     _OSCILLATOR_Initialize:	
  7130                           
  7131                           ;mcc.c: 62: OSCCON1 = 0x60;
  7132                           
  7133                           ;incstack = 0
  7134                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7135  0293  3060               	movlw	96
  7136  0294  0151               	movlb	17	; select bank17
  7137  0295  008D               	movwf	13	;volatile
  7138                           
  7139                           ;mcc.c: 64: OSCCON3 = 0x00;
  7140  0296  018F               	clrf	15	;volatile
  7141                           
  7142                           ;mcc.c: 66: OSCEN = 0x00;
  7143  0297  0191               	clrf	17	;volatile
  7144                           
  7145                           ;mcc.c: 68: OSCFRQ = 0x06;
  7146  0298  3006               	movlw	6
  7147  0299  0093               	movwf	19	;volatile
  7148                           
  7149                           ;mcc.c: 70: OSCTUNE = 0x00;
  7150  029A  0192               	clrf	18	;volatile
  7151  029B  0008               	return
  7152  029C                     __end_of_OSCILLATOR_Initialize:	
  7153  029C                     __ptext6:	
  7154 ;; *************** function _PIN_MANAGER_Initialize *****************
  7155 ;; Defined at:
  7156 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2
  7165 ;; Tracked objects:
  7166 ;;		On entry : B3F/F
  7167 ;;		On exit  : B3F/3E
  7168 ;;		Unchanged: B00/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7174 ;;Total ram usage:        0 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_SYSTEM_Initialize
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           
  7184                           ;psect for function _PIN_MANAGER_Initialize
  7185  029C                     _PIN_MANAGER_Initialize:	
  7186                           
  7187                           ;pin_manager.c: 62: LATE = 0x00;
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7191  029C  0140               	movlb	0	; select bank0
  7192  029D  019A               	clrf	26	;volatile
  7193                           
  7194                           ;pin_manager.c: 63: LATD = 0x00;
  7195  029E  0199               	clrf	25	;volatile
  7196                           
  7197                           ;pin_manager.c: 64: LATA = 0x08;
  7198  029F  3008               	movlw	8
  7199  02A0  0096               	movwf	22	;volatile
  7200                           
  7201                           ;pin_manager.c: 65: LATB = 0x00;
  7202  02A1  0197               	clrf	23	;volatile
  7203                           
  7204                           ;pin_manager.c: 66: LATC = 0x00;
  7205  02A2  0198               	clrf	24	;volatile
  7206                           
  7207                           ;pin_manager.c: 71: TRISE = 0x07;
  7208  02A3  3007               	movlw	7
  7209  02A4  0095               	movwf	21	;volatile
  7210                           
  7211                           ;pin_manager.c: 72: TRISA = 0xF3;
  7212  02A5  30F3               	movlw	243
  7213  02A6  0091               	movwf	17	;volatile
  7214                           
  7215                           ;pin_manager.c: 73: TRISB = 0xFC;
  7216  02A7  30FC               	movlw	252
  7217  02A8  0092               	movwf	18	;volatile
  7218                           
  7219                           ;pin_manager.c: 74: TRISC = 0x80;
  7220  02A9  3080               	movlw	128
  7221  02AA  0093               	movwf	19	;volatile
  7222                           
  7223                           ;pin_manager.c: 75: TRISD = 0x00;
  7224  02AB  0194               	clrf	20	;volatile
  7225                           
  7226                           ;pin_manager.c: 80: ANSELD = 0x00;
  7227  02AC  017E               	movlb	62	; select bank62
  7228  02AD  01D9               	clrf	89	;volatile
  7229                           
  7230                           ;pin_manager.c: 81: ANSELC = 0x00;
  7231  02AE  01CE               	clrf	78	;volatile
  7232                           
  7233                           ;pin_manager.c: 82: ANSELB = 0x00;
  7234  02AF  01C3               	clrf	67	;volatile
  7235                           
  7236                           ;pin_manager.c: 83: ANSELE = 0x00;
  7237  02B0  01E4               	clrf	100	;volatile
  7238                           
  7239                           ;pin_manager.c: 84: ANSELA = 0x03;
  7240  02B1  3003               	movlw	3
  7241  02B2  00B8               	movwf	56	;volatile
  7242                           
  7243                           ;pin_manager.c: 89: WPUD = 0x00;
  7244  02B3  01DA               	clrf	90	;volatile
  7245                           
  7246                           ;pin_manager.c: 90: WPUE = 0x00;
  7247  02B4  01E5               	clrf	101	;volatile
  7248                           
  7249                           ;pin_manager.c: 91: WPUB = 0x00;
  7250  02B5  01C4               	clrf	68	;volatile
  7251                           
  7252                           ;pin_manager.c: 92: WPUA = 0x00;
  7253  02B6  01B9               	clrf	57	;volatile
  7254                           
  7255                           ;pin_manager.c: 93: WPUC = 0x00;
  7256  02B7  01CF               	clrf	79	;volatile
  7257                           
  7258                           ;pin_manager.c: 98: ODCONE = 0x00;
  7259  02B8  01E6               	clrf	102	;volatile
  7260                           
  7261                           ;pin_manager.c: 99: ODCONA = 0x00;
  7262  02B9  01BA               	clrf	58	;volatile
  7263                           
  7264                           ;pin_manager.c: 100: ODCONB = 0x00;
  7265  02BA  01C5               	clrf	69	;volatile
  7266                           
  7267                           ;pin_manager.c: 101: ODCONC = 0x00;
  7268  02BB  01D0               	clrf	80	;volatile
  7269                           
  7270                           ;pin_manager.c: 102: ODCOND = 0x00;
  7271  02BC  01DB               	clrf	91	;volatile
  7272  02BD  0008               	return
  7273  02BE                     __end_of_PIN_MANAGER_Initialize:	
  7274  02BE                     __ptext5:	
  7275 ;; *************** function _PMD_Initialize *****************
  7276 ;; Defined at:
  7277 ;;		line 73 in file "mcc_generated_files/mcc.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;		None
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg
  7286 ;; Tracked objects:
  7287 ;;		On entry : B3F/0
  7288 ;;		On exit  : B3F/F
  7289 ;;		Unchanged: B00/0
  7290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7295 ;;Total ram usage:        0 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; This function calls:
  7298 ;;		Nothing
  7299 ;; This function is called by:
  7300 ;;		_SYSTEM_Initialize
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           
  7305                           ;psect for function _PMD_Initialize
  7306  02BE                     _PMD_Initialize:	
  7307                           
  7308                           ;mcc.c: 76: PMD0 = 0x5D;
  7309                           
  7310                           ;incstack = 0
  7311                           ; Regs used in _PMD_Initialize: [wreg]
  7312  02BE  305D               	movlw	93
  7313  02BF  014F               	movlb	15	; select bank15
  7314  02C0  0096               	movwf	22	;volatile
  7315                           
  7316                           ;mcc.c: 78: PMD1 = 0x80;
  7317  02C1  3080               	movlw	128
  7318  02C2  0097               	movwf	23	;volatile
  7319                           
  7320                           ;mcc.c: 80: PMD2 = 0x47;
  7321  02C3  3047               	movlw	71
  7322  02C4  0098               	movwf	24	;volatile
  7323                           
  7324                           ;mcc.c: 82: PMD3 = 0x7F;
  7325  02C5  307F               	movlw	127
  7326  02C6  0099               	movwf	25	;volatile
  7327                           
  7328                           ;mcc.c: 84: PMD4 = 0x37;
  7329  02C7  3037               	movlw	55
  7330  02C8  009A               	movwf	26	;volatile
  7331                           
  7332                           ;mcc.c: 86: PMD5 = 0xDF;
  7333  02C9  30DF               	movlw	223
  7334  02CA  009B               	movwf	27	;volatile
  7335  02CB  0008               	return
  7336  02CC                     __end_of_PMD_Initialize:	
  7337  02CC                     __ptext8:	
  7338 ;; *************** function _ADCC_Initialize *****************
  7339 ;; Defined at:
  7340 ;;		line 63 in file "mcc_generated_files/adcc.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;		None
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2
  7349 ;; Tracked objects:
  7350 ;;		On entry : B3F/11
  7351 ;;		On exit  : B3F/1
  7352 ;;		Unchanged: B00/0
  7353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7358 ;;Total ram usage:        0 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_SYSTEM_Initialize
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           
  7368                           ;psect for function _ADCC_Initialize
  7369  02CC                     _ADCC_Initialize:	
  7370                           
  7371                           ;adcc.c: 67: ADLTHL = 0x00;
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7375  02CC  0142               	movlb	2	; select bank2
  7376  02CD  018E               	clrf	14	;volatile
  7377                           
  7378                           ;adcc.c: 69: ADLTHH = 0x00;
  7379  02CE  018F               	clrf	15	;volatile
  7380                           
  7381                           ;adcc.c: 71: ADUTHL = 0x00;
  7382  02CF  0190               	clrf	16	;volatile
  7383                           
  7384                           ;adcc.c: 73: ADUTHH = 0x00;
  7385  02D0  0191               	clrf	17	;volatile
  7386                           
  7387                           ;adcc.c: 75: ADSTPTL = 0x00;
  7388  02D1  0192               	clrf	18	;volatile
  7389                           
  7390                           ;adcc.c: 77: ADSTPTH = 0x00;
  7391  02D2  0193               	clrf	19	;volatile
  7392                           
  7393                           ;adcc.c: 79: ADRPT = 0x00;
  7394  02D3  018D               	clrf	13	;volatile
  7395                           
  7396                           ;adcc.c: 81: ADPCH = 0x00;
  7397  02D4  0141               	movlb	1	; select bank1
  7398  02D5  019E               	clrf	30	;volatile
  7399                           
  7400                           ;adcc.c: 83: ADCAP = 0x00;
  7401  02D6  019B               	clrf	27	;volatile
  7402                           
  7403                           ;adcc.c: 85: ADCON1 = 0x00;
  7404  02D7  0194               	clrf	20	;volatile
  7405                           
  7406                           ;adcc.c: 87: ADCON2 = 0x02;
  7407  02D8  3002               	movlw	2
  7408  02D9  0095               	movwf	21	;volatile
  7409                           
  7410                           ;adcc.c: 89: ADCON3 = 0x00;
  7411  02DA  0196               	clrf	22	;volatile
  7412                           
  7413                           ;adcc.c: 91: ADSTAT = 0x00;
  7414  02DB  0197               	clrf	23	;volatile
  7415                           
  7416                           ;adcc.c: 93: ADREF = 0x00;
  7417  02DC  019A               	clrf	26	;volatile
  7418                           
  7419                           ;adcc.c: 95: ADACT = 0x00;
  7420  02DD  0199               	clrf	25	;volatile
  7421                           
  7422                           ;adcc.c: 97: ADCLK = 0x1F;
  7423  02DE  301F               	movlw	31
  7424  02DF  0098               	movwf	24	;volatile
  7425                           
  7426                           ;adcc.c: 99: ADCON0 = 0x84;
  7427  02E0  3084               	movlw	132
  7428  02E1  0093               	movwf	19	;volatile
  7429  02E2  0008               	return
  7430  02E3                     __end_of_ADCC_Initialize:	
  7431  02E3                     __ptext4:	
  7432 ;; *************** function _TMR0_Initialize *****************
  7433 ;; Defined at:
  7434 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;		None
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg
  7443 ;; Tracked objects:
  7444 ;;		On entry : 30/E
  7445 ;;		On exit  : 3F/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7452 ;;Total ram usage:        0 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; This function calls:
  7455 ;;		Nothing
  7456 ;; This function is called by:
  7457 ;;		_SYSTEM_Initialize
  7458 ;;		_main
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           
  7463                           ;psect for function _TMR0_Initialize
  7464  02E3                     _TMR0_Initialize:	
  7465  02E3                     l2341:	
  7466                           ;incstack = 0
  7467                           ; Regs used in _TMR0_Initialize: [wreg]
  7468                           
  7469                           
  7470                           ;tmr0.c: 70: T0CON1 = 0x42;
  7471  02E3  3042               	movlw	66
  7472  02E4  0140               	movlb	0	; select bank0
  7473  02E5  009F               	movwf	31	;volatile
  7474                           
  7475                           ;tmr0.c: 73: TMR0H = 0xF0;
  7476  02E6  30F0               	movlw	240
  7477  02E7  009D               	movwf	29	;volatile
  7478                           
  7479                           ;tmr0.c: 76: TMR0L = 0x60;
  7480  02E8  3060               	movlw	96
  7481  02E9  009C               	movwf	28	;volatile
  7482                           
  7483                           ;tmr0.c: 79: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  7484  02EA  081D               	movf	29,w	;volatile
  7485  02EB  00CD               	movwf	_timer0ReloadVal16bit+1	;volatile
  7486  02EC  01CC               	clrf	_timer0ReloadVal16bit	;volatile
  7487  02ED  081C               	movf	28,w	;volatile
  7488  02EE  04CC               	iorwf	_timer0ReloadVal16bit,f	;volatile
  7489                           
  7490                           ;tmr0.c: 82: PIR0bits.TMR0IF = 0;
  7491  02EF  014E               	movlb	14	; select bank14
  7492  02F0  128C               	bcf	12,5	;volatile
  7493                           
  7494                           ;tmr0.c: 85: T0CON0 = 0x90;
  7495  02F1  3090               	movlw	144
  7496  02F2  0140               	movlb	0	; select bank0
  7497  02F3  009E               	movwf	30	;volatile
  7498  02F4  0008               	return
  7499  02F5                     __end_of_TMR0_Initialize:	
  7500                           
  7501                           	psect	text9
  7502  02F5                     __ptext9:	
  7503 ;; *************** function _MOTOR_CTRL *****************
  7504 ;; Defined at:
  7505 ;;		line 134 in file "mcc_generated_files/OUTPUT.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7514 ;; Tracked objects:
  7515 ;;		On entry : 3F/0
  7516 ;;		On exit  : 3F/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7523 ;;Total ram usage:        0 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_main
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           
  7533                           ;psect for function _MOTOR_CTRL
  7534  02F5                     _MOTOR_CTRL:	
  7535                           
  7536                           ;OUTPUT.c: 137: if(FLAG_QS_MOTOR_IN)
  7537                           
  7538                           ;incstack = 0
  7539                           ; Regs used in _MOTOR_CTRL: [wreg-fsr0h+status,2+status,0]
  7540  02F5  1FF1               	btfss	_FLAG_QS_MOTOR_IN/(0+8),_FLAG_QS_MOTOR_IN& (0+7)
  7541  02F6  2B13               	goto	l544
  7542                           
  7543                           ;OUTPUT.c: 138: {
  7544                           ;OUTPUT.c: 139: in_stop_order=1;
  7545  02F7  01C8               	clrf	_in_stop_order
  7546  02F8  0AC8               	incf	_in_stop_order,f
  7547                           
  7548                           ;OUTPUT.c: 141: switch(in_order)
  7549  02F9  2B05               	goto	l3005
  7550  02FA                     l546:	
  7551                           ;OUTPUT.c: 142: {
  7552                           ;OUTPUT.c: 143: case 1:
  7553                           
  7554                           
  7555                           ;OUTPUT.c: 144: {
  7556                           ;OUTPUT.c: 145: LATDbits.LATD0=1;
  7557  02FA  1419               	bsf	25,0	;volatile
  7558                           
  7559                           ;OUTPUT.c: 146: in_order=4;
  7560  02FB  3004               	movlw	4
  7561  02FC  2B03               	goto	L3
  7562  02FD                     l548:	
  7563                           ;OUTPUT.c: 148: case 4:
  7564                           
  7565                           ;OUTPUT.c: 147: }break;
  7566                           
  7567                           
  7568                           ;OUTPUT.c: 149: {
  7569                           ;OUTPUT.c: 150: LATBbits.LATB0=1;
  7570  02FD  1417               	bsf	23,0	;volatile
  7571                           
  7572                           ;OUTPUT.c: 151: in_order=6;
  7573  02FE  3006               	movlw	6
  7574  02FF  2B03               	goto	L3
  7575  0300                     l3001:	
  7576                           ;OUTPUT.c: 153: }break;
  7577                           
  7578  0300  3005               	movlw	5
  7579                           
  7580                           ;OUTPUT.c: 155: {
  7581                           ;OUTPUT.c: 156: test_time=0;
  7582                           
  7583                           ;OUTPUT.c: 157: motor_run_1s=0;
  7584  0301  2410  3182         	fcall	PL12	;call to abstracted procedure
  7585  0303                     L3:	
  7586                           ;OUTPUT.c: 158: in_order=5;
  7587                           
  7588  0303  00C9               	movwf	_in_order
  7589                           
  7590                           ;OUTPUT.c: 159: }break;
  7591  0304  2B25               	goto	l551
  7592  0305                     l3005:	
  7593  0305  0849               	movf	_in_order,w
  7594                           
  7595                           ; Switch size 1, requested type "space"
  7596                           ; Number of cases is 4, Range of values is 1 to 6
  7597                           ; switch strategies available:
  7598                           ; Name         Instructions Cycles
  7599                           ; simple_byte           13     7 (average)
  7600                           ; direct_byte           21     9 (fixed)
  7601                           ; jumptable            263     9 (fixed)
  7602                           ;	Chosen strategy is simple_byte
  7603  0306  3A01               	xorlw	1	; case 1
  7604  0307  1903               	skipnz
  7605  0308  2AFA               	goto	l546
  7606  0309  3A05               	xorlw	5	; case 4
  7607  030A  1903               	skipnz
  7608  030B  2AFD               	goto	l548
  7609  030C  3A01               	xorlw	1	; case 5
  7610  030D  1903               	skipnz
  7611  030E  2B25               	goto	l551
  7612  030F  3A03               	xorlw	3	; case 6
  7613  0310  1903               	skipnz
  7614  0311  2B00               	goto	l3001
  7615  0312  2B25               	goto	l551
  7616  0313                     l544:	
  7617                           
  7618                           ;OUTPUT.c: 166: else
  7619                           ;OUTPUT.c: 167: {
  7620                           ;OUTPUT.c: 168: in_order=1;
  7621  0313  01C9               	clrf	_in_order
  7622  0314  0AC9               	incf	_in_order,f
  7623                           
  7624                           ;OUTPUT.c: 169: switch(in_stop_order)
  7625  0315  2B1D               	goto	l3013
  7626  0316                     l553:	
  7627                           ;OUTPUT.c: 170: {
  7628                           ;OUTPUT.c: 171: case 1:
  7629                           
  7630                           
  7631                           ;OUTPUT.c: 172: {
  7632                           ;OUTPUT.c: 173: LATBbits.LATB0=0;
  7633  0316  1017               	bcf	23,0	;volatile
  7634                           
  7635                           ;OUTPUT.c: 174: in_stop_order=2;
  7636  0317  3002               	movlw	2
  7637  0318  2B1B               	goto	L4
  7638  0319                     l555:	
  7639                           ;OUTPUT.c: 176: case 2:
  7640                           
  7641                           ;OUTPUT.c: 175: }break;
  7642                           
  7643                           
  7644                           ;OUTPUT.c: 177: {
  7645                           ;OUTPUT.c: 178: LATDbits.LATD0=0;
  7646  0319  1019               	bcf	25,0	;volatile
  7647                           
  7648                           ;OUTPUT.c: 179: in_stop_order=3;
  7649  031A  3003               	movlw	3
  7650  031B                     L4:	
  7651  031B  00C8               	movwf	_in_stop_order
  7652                           
  7653                           ;OUTPUT.c: 180: }break;
  7654  031C  2B25               	goto	l551
  7655  031D                     l3013:	
  7656  031D  0848               	movf	_in_stop_order,w
  7657                           
  7658                           ; Switch size 1, requested type "space"
  7659                           ; Number of cases is 2, Range of values is 1 to 2
  7660                           ; switch strategies available:
  7661                           ; Name         Instructions Cycles
  7662                           ; simple_byte            7     4 (average)
  7663                           ; direct_byte           13     9 (fixed)
  7664                           ; jumptable            263     9 (fixed)
  7665                           ;	Chosen strategy is simple_byte
  7666  031E  3A01               	xorlw	1	; case 1
  7667  031F  1903               	skipnz
  7668  0320  2B16               	goto	l553
  7669  0321  3A03               	xorlw	3	; case 2
  7670  0322  1903               	skipnz
  7671  0323  2B19               	goto	l555
  7672  0324  2B25               	goto	l551
  7673  0325                     l551:	
  7674                           
  7675                           ;OUTPUT.c: 182: }
  7676                           ;OUTPUT.c: 184: if(FLAG_QS_MOTOR_OUT)
  7677  0325  1F71               	btfss	_FLAG_QS_MOTOR_OUT/(0+8),_FLAG_QS_MOTOR_OUT& (0+7)
  7678  0326  2B43               	goto	l556
  7679                           
  7680                           ;OUTPUT.c: 185: {
  7681                           ;OUTPUT.c: 186: out_stop_order=1;
  7682  0327  01CA               	clrf	_out_stop_order
  7683  0328  0ACA               	incf	_out_stop_order,f
  7684                           
  7685                           ;OUTPUT.c: 187: switch(out_order)
  7686  0329  2B35               	goto	l3027
  7687  032A                     l558:	
  7688                           ;OUTPUT.c: 188: {
  7689                           ;OUTPUT.c: 189: case 1:
  7690                           
  7691                           
  7692                           ;OUTPUT.c: 190: {
  7693                           ;OUTPUT.c: 191: LATCbits.LATC3=1;
  7694  032A  1598               	bsf	24,3	;volatile
  7695                           
  7696                           ;OUTPUT.c: 192: out_order=4;
  7697  032B  3004               	movlw	4
  7698  032C  2B33               	goto	L6
  7699  032D                     l560:	
  7700                           ;OUTPUT.c: 194: case 4:
  7701                           
  7702                           ;OUTPUT.c: 193: }break;
  7703                           
  7704                           
  7705                           ;OUTPUT.c: 195: {
  7706                           ;OUTPUT.c: 196: LATBbits.LATB1=1;
  7707  032D  1497               	bsf	23,1	;volatile
  7708  032E  3006               	movlw	6
  7709  032F  2B31               	goto	L18
  7710  0330                     l3023:	
  7711                           ;OUTPUT.c: 201: }break;
  7712                           
  7713                           ;OUTPUT.c: 199: out_order=6;
  7714                           
  7715                           ;OUTPUT.c: 198: motor_run_1s=0;
  7716                           
  7717                           ;OUTPUT.c: 197: test_time=0;
  7718                           
  7719  0330  3005               	movlw	5
  7720  0331                     L18:	
  7721                           
  7722                           ;OUTPUT.c: 203: {
  7723                           ;OUTPUT.c: 205: test_time=0;
  7724                           
  7725                           ;OUTPUT.c: 206: motor_run_1s=0;
  7726  0331  2410  3182         	fcall	PL12	;call to abstracted procedure
  7727  0333                     L6:	
  7728                           ;OUTPUT.c: 207: out_order=5;
  7729                           
  7730  0333  00CB               	movwf	_out_order
  7731                           
  7732                           ;OUTPUT.c: 209: }break;
  7733  0334  2B55               	goto	l563
  7734  0335                     l3027:	
  7735  0335  084B               	movf	_out_order,w
  7736                           
  7737                           ; Switch size 1, requested type "space"
  7738                           ; Number of cases is 4, Range of values is 1 to 6
  7739                           ; switch strategies available:
  7740                           ; Name         Instructions Cycles
  7741                           ; simple_byte           13     7 (average)
  7742                           ; direct_byte           21     9 (fixed)
  7743                           ; jumptable            263     9 (fixed)
  7744                           ;	Chosen strategy is simple_byte
  7745  0336  3A01               	xorlw	1	; case 1
  7746  0337  1903               	skipnz
  7747  0338  2B2A               	goto	l558
  7748  0339  3A05               	xorlw	5	; case 4
  7749  033A  1903               	skipnz
  7750  033B  2B2D               	goto	l560
  7751  033C  3A01               	xorlw	1	; case 5
  7752  033D  1903               	skipnz
  7753  033E  2B55               	goto	l563
  7754  033F  3A03               	xorlw	3	; case 6
  7755  0340  1903               	skipnz
  7756  0341  2B30               	goto	l3023
  7757  0342  2B55               	goto	l563
  7758  0343                     l556:	
  7759                           
  7760                           ;OUTPUT.c: 216: else
  7761                           ;OUTPUT.c: 217: {
  7762                           ;OUTPUT.c: 218: out_order=1;
  7763  0343  01CB               	clrf	_out_order
  7764  0344  0ACB               	incf	_out_order,f
  7765                           
  7766                           ;OUTPUT.c: 219: switch(out_stop_order)
  7767  0345  2B4D               	goto	l3035
  7768  0346                     l565:	
  7769                           ;OUTPUT.c: 220: {
  7770                           ;OUTPUT.c: 221: case 1:
  7771                           
  7772                           
  7773                           ;OUTPUT.c: 222: {
  7774                           ;OUTPUT.c: 223: LATBbits.LATB1=0;
  7775  0346  1097               	bcf	23,1	;volatile
  7776                           
  7777                           ;OUTPUT.c: 224: out_stop_order=2;
  7778  0347  3002               	movlw	2
  7779  0348  2B4B               	goto	L7
  7780  0349                     l567:	
  7781                           ;OUTPUT.c: 226: case 2:
  7782                           
  7783                           ;OUTPUT.c: 225: }break;
  7784                           
  7785                           
  7786                           ;OUTPUT.c: 227: {
  7787                           ;OUTPUT.c: 228: LATCbits.LATC3=0;
  7788  0349  1198               	bcf	24,3	;volatile
  7789                           
  7790                           ;OUTPUT.c: 229: out_stop_order=3;
  7791  034A  3003               	movlw	3
  7792  034B                     L7:	
  7793  034B  00CA               	movwf	_out_stop_order
  7794                           
  7795                           ;OUTPUT.c: 230: }break;
  7796  034C  2B55               	goto	l563
  7797  034D                     l3035:	
  7798  034D  084A               	movf	_out_stop_order,w
  7799                           
  7800                           ; Switch size 1, requested type "space"
  7801                           ; Number of cases is 2, Range of values is 1 to 2
  7802                           ; switch strategies available:
  7803                           ; Name         Instructions Cycles
  7804                           ; simple_byte            7     4 (average)
  7805                           ; direct_byte           13     9 (fixed)
  7806                           ; jumptable            263     9 (fixed)
  7807                           ;	Chosen strategy is simple_byte
  7808  034E  3A01               	xorlw	1	; case 1
  7809  034F  1903               	skipnz
  7810  0350  2B46               	goto	l565
  7811  0351  3A03               	xorlw	3	; case 2
  7812  0352  1903               	skipnz
  7813  0353  2B49               	goto	l567
  7814  0354  2B55               	goto	l563
  7815  0355                     l563:	
  7816                           
  7817                           ;OUTPUT.c: 232: }
  7818                           ;OUTPUT.c: 235: if(FLAG_ES_MOTOR_IN)
  7819  0355  1EF1               	btfss	_FLAG_ES_MOTOR_IN/(0+8),_FLAG_ES_MOTOR_IN& (0+7)
  7820  0356  2B7F               	goto	l568
  7821                           
  7822                           ;OUTPUT.c: 236: {
  7823                           ;OUTPUT.c: 237: ES_in_stop_order=1;
  7824  0357  01C7               	clrf	_ES_in_stop_order
  7825  0358  0AC7               	incf	_ES_in_stop_order,f
  7826                           
  7827                           ;OUTPUT.c: 239: switch(ES_in_order)
  7828  0359  2B6B               	goto	l3053
  7829  035A                     l570:	
  7830                           ;OUTPUT.c: 240: {
  7831                           ;OUTPUT.c: 241: case 1:
  7832                           
  7833                           
  7834                           ;OUTPUT.c: 242: {
  7835                           ;OUTPUT.c: 244: LATDbits.LATD6=0;
  7836  035A  1319               	bcf	25,6	;volatile
  7837                           
  7838                           ;OUTPUT.c: 245: ES_in_order=2;
  7839  035B  3002               	movlw	2
  7840  035C  2B69               	goto	L11
  7841  035D                     l572:	
  7842                           ;OUTPUT.c: 247: case 2:
  7843                           
  7844                           ;OUTPUT.c: 246: }break;
  7845                           
  7846                           
  7847                           ;OUTPUT.c: 248: {
  7848                           ;OUTPUT.c: 249: LATDbits.LATD1=0;
  7849  035D  1099               	bcf	25,1	;volatile
  7850                           
  7851                           ;OUTPUT.c: 250: ES_in_order=3;
  7852  035E  3003               	movlw	3
  7853  035F  2B69               	goto	L11
  7854  0360                     l573:	
  7855                           ;OUTPUT.c: 253: case 3:
  7856                           
  7857                           ;OUTPUT.c: 252: }break;
  7858                           
  7859                           
  7860                           ;OUTPUT.c: 254: {
  7861                           ;OUTPUT.c: 255: LATDbits.LATD2=1;
  7862  0360  1519               	bsf	25,2	;volatile
  7863                           
  7864                           ;OUTPUT.c: 256: ES_in_order=4;
  7865  0361  3004               	movlw	4
  7866  0362  2B69               	goto	L11
  7867  0363                     l574:	
  7868                           ;OUTPUT.c: 258: case 4:
  7869                           
  7870                           ;OUTPUT.c: 257: }break;
  7871                           
  7872                           
  7873                           ;OUTPUT.c: 259: {
  7874                           ;OUTPUT.c: 260: LATDbits.LATD7=1;
  7875  0363  1799               	bsf	25,7	;volatile
  7876  0364  3006               	movlw	6
  7877  0365  2B67               	goto	L19
  7878  0366                     l3049:	
  7879                           ;OUTPUT.c: 265: }break;
  7880                           
  7881                           ;OUTPUT.c: 263: ES_in_order=6;
  7882                           
  7883                           ;OUTPUT.c: 262: motor_run_1s=0;
  7884                           
  7885                           ;OUTPUT.c: 261: test_time=0;
  7886                           
  7887  0366  3005               	movlw	5
  7888  0367                     L19:	
  7889                           
  7890                           ;OUTPUT.c: 267: {
  7891                           ;OUTPUT.c: 268: test_time=0;
  7892                           
  7893                           ;OUTPUT.c: 269: motor_run_1s=0;
  7894  0367  2410  3182         	fcall	PL12	;call to abstracted procedure
  7895  0369                     L11:	
  7896                           ;OUTPUT.c: 270: ES_in_order=5;
  7897                           
  7898  0369  00FD               	movwf	_ES_in_order
  7899                           
  7900                           ;OUTPUT.c: 271: }break;
  7901  036A  2B91               	goto	l577
  7902  036B                     l3053:	
  7903  036B  087D               	movf	_ES_in_order,w
  7904                           
  7905                           ; Switch size 1, requested type "space"
  7906                           ; Number of cases is 6, Range of values is 1 to 6
  7907                           ; switch strategies available:
  7908                           ; Name         Instructions Cycles
  7909                           ; simple_byte           19    10 (average)
  7910                           ; direct_byte           21     9 (fixed)
  7911                           ; jumptable            263     9 (fixed)
  7912                           ;	Chosen strategy is simple_byte
  7913  036C  3A01               	xorlw	1	; case 1
  7914  036D  1903               	skipnz
  7915  036E  2B5A               	goto	l570
  7916  036F  3A03               	xorlw	3	; case 2
  7917  0370  1903               	skipnz
  7918  0371  2B5D               	goto	l572
  7919  0372  3A01               	xorlw	1	; case 3
  7920  0373  1903               	skipnz
  7921  0374  2B60               	goto	l573
  7922  0375  3A07               	xorlw	7	; case 4
  7923  0376  1903               	skipnz
  7924  0377  2B63               	goto	l574
  7925  0378  3A01               	xorlw	1	; case 5
  7926  0379  1903               	skipnz
  7927  037A  2B91               	goto	l577
  7928  037B  3A03               	xorlw	3	; case 6
  7929  037C  1903               	skipnz
  7930  037D  2B66               	goto	l3049
  7931  037E  2B91               	goto	l577
  7932  037F                     l568:	
  7933                           
  7934                           ;OUTPUT.c: 278: else
  7935                           ;OUTPUT.c: 279: {
  7936                           ;OUTPUT.c: 280: ES_in_order=1;
  7937  037F  01FD               	clrf	_ES_in_order
  7938  0380  0AFD               	incf	_ES_in_order,f
  7939                           
  7940                           ;OUTPUT.c: 281: switch(ES_in_stop_order)
  7941  0381  2B89               	goto	l3061
  7942  0382                     l579:	
  7943                           ;OUTPUT.c: 282: {
  7944                           ;OUTPUT.c: 283: case 1:
  7945                           
  7946                           
  7947                           ;OUTPUT.c: 284: {
  7948                           ;OUTPUT.c: 285: LATDbits.LATD7=0;
  7949  0382  1399               	bcf	25,7	;volatile
  7950                           
  7951                           ;OUTPUT.c: 286: ES_in_stop_order=2;
  7952  0383  3002               	movlw	2
  7953  0384  2B87               	goto	L12
  7954  0385                     l581:	
  7955                           ;OUTPUT.c: 288: case 2:
  7956                           
  7957                           ;OUTPUT.c: 287: }break;
  7958                           
  7959                           
  7960                           ;OUTPUT.c: 289: {
  7961                           ;OUTPUT.c: 290: LATDbits.LATD2=0;
  7962  0385  1119               	bcf	25,2	;volatile
  7963                           
  7964                           ;OUTPUT.c: 291: ES_in_stop_order=3;
  7965  0386  3003               	movlw	3
  7966  0387                     L12:	
  7967  0387  00C7               	movwf	_ES_in_stop_order
  7968                           
  7969                           ;OUTPUT.c: 292: }break;
  7970  0388  2B91               	goto	l577
  7971  0389                     l3061:	
  7972  0389  0847               	movf	_ES_in_stop_order,w
  7973                           
  7974                           ; Switch size 1, requested type "space"
  7975                           ; Number of cases is 2, Range of values is 1 to 2
  7976                           ; switch strategies available:
  7977                           ; Name         Instructions Cycles
  7978                           ; simple_byte            7     4 (average)
  7979                           ; direct_byte           13     9 (fixed)
  7980                           ; jumptable            263     9 (fixed)
  7981                           ;	Chosen strategy is simple_byte
  7982  038A  3A01               	xorlw	1	; case 1
  7983  038B  1903               	skipnz
  7984  038C  2B82               	goto	l579
  7985  038D  3A03               	xorlw	3	; case 2
  7986  038E  1903               	skipnz
  7987  038F  2B85               	goto	l581
  7988  0390  2B91               	goto	l577
  7989  0391                     l577:	
  7990                           
  7991                           ;OUTPUT.c: 294: }
  7992                           ;OUTPUT.c: 296: if(FLAG_ES_MOTOR_OUT)
  7993  0391  1E71               	btfss	_FLAG_ES_MOTOR_OUT/(0+8),_FLAG_ES_MOTOR_OUT& (0+7)
  7994  0392  2BBB               	goto	l582
  7995                           
  7996                           ;OUTPUT.c: 297: {
  7997                           ;OUTPUT.c: 298: ES_out_stop_order=1;
  7998  0393  01C6               	clrf	_ES_out_stop_order
  7999  0394  0AC6               	incf	_ES_out_stop_order,f
  8000                           
  8001                           ;OUTPUT.c: 299: switch(ES_out_order)
  8002  0395  2BA7               	goto	l3079
  8003  0396                     l584:	
  8004                           ;OUTPUT.c: 300: {
  8005                           ;OUTPUT.c: 301: case 1:
  8006                           
  8007                           
  8008                           ;OUTPUT.c: 302: {
  8009                           ;OUTPUT.c: 303: LATDbits.LATD7=0;
  8010  0396  1399               	bcf	25,7	;volatile
  8011                           
  8012                           ;OUTPUT.c: 304: ES_out_order=2;
  8013  0397  3002               	movlw	2
  8014  0398  2BA5               	goto	L16
  8015  0399                     l586:	
  8016                           ;OUTPUT.c: 306: case 2:
  8017                           
  8018                           ;OUTPUT.c: 305: }break;
  8019                           
  8020                           
  8021                           ;OUTPUT.c: 307: {
  8022                           ;OUTPUT.c: 308: LATDbits.LATD2=0;
  8023  0399  1119               	bcf	25,2	;volatile
  8024                           
  8025                           ;OUTPUT.c: 309: ES_out_order=3;
  8026  039A  3003               	movlw	3
  8027  039B  2BA5               	goto	L16
  8028  039C                     l587:	
  8029                           ;OUTPUT.c: 311: case 3:
  8030                           
  8031                           ;OUTPUT.c: 310: }break;
  8032                           
  8033                           
  8034                           ;OUTPUT.c: 312: {
  8035                           ;OUTPUT.c: 313: LATDbits.LATD1=1;
  8036  039C  1499               	bsf	25,1	;volatile
  8037                           
  8038                           ;OUTPUT.c: 314: ES_out_order=4;
  8039  039D  3004               	movlw	4
  8040  039E  2BA5               	goto	L16
  8041  039F                     l588:	
  8042                           ;OUTPUT.c: 316: case 4:
  8043                           
  8044                           ;OUTPUT.c: 315: }break;
  8045                           
  8046                           
  8047                           ;OUTPUT.c: 317: {
  8048                           ;OUTPUT.c: 318: LATDbits.LATD6=1;
  8049  039F  1719               	bsf	25,6	;volatile
  8050  03A0  3006               	movlw	6
  8051  03A1  2BA3               	goto	L20
  8052  03A2                     l3075:	
  8053                           ;OUTPUT.c: 323: }break;
  8054                           
  8055                           ;OUTPUT.c: 321: ES_out_order=6;
  8056                           
  8057                           ;OUTPUT.c: 320: motor_run_1s=0;
  8058                           
  8059                           ;OUTPUT.c: 319: test_time=0;
  8060                           
  8061  03A2  3005               	movlw	5
  8062  03A3                     L20:	
  8063                           
  8064                           ;OUTPUT.c: 325: {
  8065                           ;OUTPUT.c: 327: test_time=0;
  8066                           
  8067                           ;OUTPUT.c: 328: motor_run_1s=0;
  8068  03A3  2410  3182         	fcall	PL12	;call to abstracted procedure
  8069  03A5                     L16:	
  8070                           ;OUTPUT.c: 329: ES_out_order=5;
  8071                           
  8072  03A5  00FC               	movwf	_ES_out_order
  8073                           
  8074                           ;OUTPUT.c: 332: }break;
  8075  03A6  2BCD               	goto	l591
  8076  03A7                     l3079:	
  8077  03A7  087C               	movf	_ES_out_order,w
  8078                           
  8079                           ; Switch size 1, requested type "space"
  8080                           ; Number of cases is 6, Range of values is 1 to 6
  8081                           ; switch strategies available:
  8082                           ; Name         Instructions Cycles
  8083                           ; simple_byte           19    10 (average)
  8084                           ; direct_byte           21     9 (fixed)
  8085                           ; jumptable            263     9 (fixed)
  8086                           ;	Chosen strategy is simple_byte
  8087  03A8  3A01               	xorlw	1	; case 1
  8088  03A9  1903               	skipnz
  8089  03AA  2B96               	goto	l584
  8090  03AB  3A03               	xorlw	3	; case 2
  8091  03AC  1903               	skipnz
  8092  03AD  2B99               	goto	l586
  8093  03AE  3A01               	xorlw	1	; case 3
  8094  03AF  1903               	skipnz
  8095  03B0  2B9C               	goto	l587
  8096  03B1  3A07               	xorlw	7	; case 4
  8097  03B2  1903               	skipnz
  8098  03B3  2B9F               	goto	l588
  8099  03B4  3A01               	xorlw	1	; case 5
  8100  03B5  1903               	skipnz
  8101  03B6  2BCD               	goto	l591
  8102  03B7  3A03               	xorlw	3	; case 6
  8103  03B8  1903               	skipnz
  8104  03B9  2BA2               	goto	l3075
  8105  03BA  2BCD               	goto	l591
  8106  03BB                     l582:	
  8107                           
  8108                           ;OUTPUT.c: 339: else
  8109                           ;OUTPUT.c: 340: {
  8110                           ;OUTPUT.c: 341: ES_out_order=1;
  8111  03BB  01FC               	clrf	_ES_out_order
  8112  03BC  0AFC               	incf	_ES_out_order,f
  8113                           
  8114                           ;OUTPUT.c: 342: switch(ES_out_stop_order)
  8115  03BD  2BC5               	goto	l3087
  8116  03BE                     l593:	
  8117                           ;OUTPUT.c: 343: {
  8118                           ;OUTPUT.c: 344: case 1:
  8119                           
  8120                           
  8121                           ;OUTPUT.c: 345: {
  8122                           ;OUTPUT.c: 346: LATDbits.LATD6=0;
  8123  03BE  1319               	bcf	25,6	;volatile
  8124                           
  8125                           ;OUTPUT.c: 347: ES_out_stop_order=2;
  8126  03BF  3002               	movlw	2
  8127  03C0  2BC3               	goto	L17
  8128  03C1                     l595:	
  8129                           ;OUTPUT.c: 349: case 2:
  8130                           
  8131                           ;OUTPUT.c: 348: }break;
  8132                           
  8133                           
  8134                           ;OUTPUT.c: 350: {
  8135                           ;OUTPUT.c: 351: LATDbits.LATD1=0;
  8136  03C1  1099               	bcf	25,1	;volatile
  8137                           
  8138                           ;OUTPUT.c: 352: ES_out_stop_order=3;
  8139  03C2  3003               	movlw	3
  8140  03C3                     L17:	
  8141  03C3  00C6               	movwf	_ES_out_stop_order
  8142                           
  8143                           ;OUTPUT.c: 353: }break;
  8144  03C4  2BCD               	goto	l591
  8145  03C5                     l3087:	
  8146  03C5  0846               	movf	_ES_out_stop_order,w
  8147                           
  8148                           ; Switch size 1, requested type "space"
  8149                           ; Number of cases is 2, Range of values is 1 to 2
  8150                           ; switch strategies available:
  8151                           ; Name         Instructions Cycles
  8152                           ; simple_byte            7     4 (average)
  8153                           ; direct_byte           13     9 (fixed)
  8154                           ; jumptable            263     9 (fixed)
  8155                           ;	Chosen strategy is simple_byte
  8156  03C6  3A01               	xorlw	1	; case 1
  8157  03C7  1903               	skipnz
  8158  03C8  2BBE               	goto	l593
  8159  03C9  3A03               	xorlw	3	; case 2
  8160  03CA  1903               	skipnz
  8161  03CB  2BC1               	goto	l595
  8162  03CC  2BCD               	goto	l591
  8163  03CD                     l591:	
  8164                           
  8165                           ;OUTPUT.c: 355: }
  8166                           ;OUTPUT.c: 404: if(FLAG_STORED_IN)
  8167  03CD  1CF1               	btfss	_FLAG_STORED_IN/(0+8),_FLAG_STORED_IN& (0+7)
  8168  03CE  2BF6               	goto	l596
  8169                           
  8170                           ;OUTPUT.c: 405: {
  8171                           ;OUTPUT.c: 406: STORED_in_stop_order=1;
  8172  03CF  01C5               	clrf	_STORED_in_stop_order
  8173  03D0  0AC5               	incf	_STORED_in_stop_order,f
  8174                           
  8175                           ;OUTPUT.c: 408: switch(STORED_in_order)
  8176  03D1  0844               	movf	_STORED_in_order,w
  8177                           
  8178                           ; Switch size 1, requested type "space"
  8179                           ; Number of cases is 6, Range of values is 1 to 6
  8180                           ; switch strategies available:
  8181                           ; Name         Instructions Cycles
  8182                           ; simple_byte           19    10 (average)
  8183                           ; direct_byte           21     9 (fixed)
  8184                           ; jumptable            263     9 (fixed)
  8185                           ;	Chosen strategy is simple_byte
  8186  03D2  3A01               	xorlw	1	; case 1
  8187  03D3  1903               	skipnz
  8188  03D4  2BE5               	goto	l598
  8189  03D5  3A03               	xorlw	3	; case 2
  8190  03D6  1903               	skipnz
  8191  03D7  2BE9               	goto	l600
  8192  03D8  3A01               	xorlw	1	; case 3
  8193  03D9  1903               	skipnz
  8194  03DA  2BED               	goto	l601
  8195  03DB  3A07               	xorlw	7	; case 4
  8196  03DC  1903               	skipnz
  8197  03DD  2BF1               	goto	l602
  8198  03DE  3A01               	xorlw	1	; case 5
  8199  03DF  1903               	skipnz
  8200  03E0  2C09               	goto	l610
  8201  03E1  3A03               	xorlw	3	; case 6
  8202  03E2  1903               	skipnz
  8203  03E3  2BF4               	goto	l3101
  8204  03E4  2C09               	goto	l610
  8205  03E5                     l598:	
  8206                           ;OUTPUT.c: 409: {
  8207                           ;OUTPUT.c: 410: case 1:
  8208                           
  8209                           
  8210                           ;OUTPUT.c: 411: {
  8211                           ;OUTPUT.c: 412: LATDbits.LATD5=0;
  8212  03E5  1299               	bcf	25,5	;volatile
  8213                           
  8214                           ;OUTPUT.c: 413: STORED_in_order=2;
  8215  03E6  3002               	movlw	2
  8216  03E7  00C4               	movwf	_STORED_in_order
  8217                           
  8218                           ;OUTPUT.c: 414: }break;
  8219  03E8  0008               	return
  8220  03E9                     l600:	
  8221                           ;OUTPUT.c: 415: case 2:
  8222                           
  8223                           
  8224                           ;OUTPUT.c: 416: {
  8225                           ;OUTPUT.c: 417: LATDbits.LATD3=0;
  8226  03E9  1199               	bcf	25,3	;volatile
  8227                           
  8228                           ;OUTPUT.c: 418: STORED_in_order=3;
  8229  03EA  3003               	movlw	3
  8230  03EB  00C4               	movwf	_STORED_in_order
  8231                           
  8232                           ;OUTPUT.c: 420: }break;
  8233  03EC  0008               	return
  8234  03ED                     l601:	
  8235                           ;OUTPUT.c: 421: case 3:
  8236                           
  8237                           
  8238                           ;OUTPUT.c: 422: {
  8239                           ;OUTPUT.c: 423: LATCbits.LATC4=1;
  8240  03ED  1618               	bsf	24,4	;volatile
  8241                           
  8242                           ;OUTPUT.c: 424: STORED_in_order=4;
  8243  03EE  3004               	movlw	4
  8244  03EF  00C4               	movwf	_STORED_in_order
  8245                           
  8246                           ;OUTPUT.c: 425: }break;
  8247  03F0  0008               	return
  8248  03F1                     l602:	
  8249                           ;OUTPUT.c: 426: case 4:
  8250                           
  8251                           
  8252                           ;OUTPUT.c: 427: {
  8253                           ;OUTPUT.c: 428: LATDbits.LATD4=1;
  8254  03F1  1619               	bsf	25,4	;volatile
  8255  03F2  3006               	movlw	6
  8256                           
  8257                           ;OUTPUT.c: 429: test_time=0;
  8258                           
  8259                           ;OUTPUT.c: 430: motor_run_1s=0;
  8260                           
  8261                           ;OUTPUT.c: 431: STORED_in_order=6;
  8262                           
  8263                           ;OUTPUT.c: 433: }break;
  8264  03F3  2C0A               	ljmp	PL10	;call to abstracted procedure
  8265  03F4                     l3101:	
  8266  03F4  3005               	movlw	5
  8267                           
  8268                           ;OUTPUT.c: 435: {
  8269                           ;OUTPUT.c: 436: test_time=0;
  8270                           
  8271                           ;OUTPUT.c: 437: motor_run_1s=0;
  8272                           
  8273                           ;OUTPUT.c: 438: STORED_in_order=5;
  8274                           
  8275                           ;OUTPUT.c: 440: }break;
  8276  03F5  2C0A               	ljmp	PL10	;call to abstracted procedure
  8277  03F6                     l596:	
  8278                           
  8279                           ;OUTPUT.c: 447: else
  8280                           ;OUTPUT.c: 448: {
  8281                           ;OUTPUT.c: 449: STORED_in_order=1;
  8282  03F6  01C4               	clrf	_STORED_in_order
  8283  03F7  0AC4               	incf	_STORED_in_order,f
  8284                           
  8285                           ;OUTPUT.c: 450: switch(STORED_in_stop_order)
  8286  03F8  2C01               	goto	l3113
  8287  03F9                     l607:	
  8288                           ;OUTPUT.c: 451: {
  8289                           ;OUTPUT.c: 452: case 1:
  8290                           
  8291                           
  8292                           ;OUTPUT.c: 453: {
  8293                           ;OUTPUT.c: 454: LATDbits.LATD4=0;
  8294  03F9  1219               	bcf	25,4	;volatile
  8295                           
  8296                           ;OUTPUT.c: 455: STORED_in_stop_order=2;
  8297  03FA  3002               	movlw	2
  8298  03FB  00C5               	movwf	_STORED_in_stop_order
  8299                           
  8300                           ;OUTPUT.c: 456: }break;
  8301  03FC  0008               	return
  8302  03FD                     l609:	
  8303                           ;OUTPUT.c: 457: case 2:
  8304                           
  8305                           
  8306                           ;OUTPUT.c: 458: {
  8307                           ;OUTPUT.c: 459: LATCbits.LATC4=0;
  8308  03FD  1218               	bcf	24,4	;volatile
  8309                           
  8310                           ;OUTPUT.c: 460: STORED_in_stop_order=3;
  8311  03FE  3003               	movlw	3
  8312  03FF  00C5               	movwf	_STORED_in_stop_order
  8313                           
  8314                           ;OUTPUT.c: 461: }break;
  8315  0400  0008               	return
  8316  0401                     l3113:	
  8317  0401  0845               	movf	_STORED_in_stop_order,w
  8318                           
  8319                           ; Switch size 1, requested type "space"
  8320                           ; Number of cases is 2, Range of values is 1 to 2
  8321                           ; switch strategies available:
  8322                           ; Name         Instructions Cycles
  8323                           ; simple_byte            7     4 (average)
  8324                           ; direct_byte           13     9 (fixed)
  8325                           ; jumptable            263     9 (fixed)
  8326                           ;	Chosen strategy is simple_byte
  8327  0402  3A01               	xorlw	1	; case 1
  8328  0403  1903               	skipnz
  8329  0404  2BF9               	goto	l607
  8330  0405  3A03               	xorlw	3	; case 2
  8331  0406  1903               	skipnz
  8332  0407  2BFD               	goto	l609
  8333  0408  2C09               	goto	l610
  8334  0409                     l610:	
  8335  0409  0008               	return
  8336  040A                     __end_of_MOTOR_CTRL:	
  8337  040A                     PL10:	
  8338  040A  01B0               	clrf	_test_time
  8339  040B  01B1               	clrf	_test_time+1
  8340  040C  01AE               	clrf	_motor_run_1s
  8341  040D  01AF               	clrf	_motor_run_1s+1
  8342  040E  00C4               	movwf	_STORED_in_order
  8343  040F  0008               	return
  8344  0410                     __end_ofPL10:	
  8345  0410                     PL12:	
  8346  0410  01B0               	clrf	_test_time
  8347  0411  01B1               	clrf	_test_time+1
  8348  0412  01AE               	clrf	_motor_run_1s
  8349  0413  01AF               	clrf	_motor_run_1s+1
  8350  0414  0008               	return
  8351  0415                     __end_ofPL12:	


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         76
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      0      46
    BANK1            80      0      40
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     490
                                              7 COMMON     2     2      0
           _ADCC_GetSingleConversion
                         _ALARM_CTRL
                      _INPUT_COLLECT
                           _LED_CTRL
                         _MOTOR_CTRL
                  _SYSTEM_Initialize
                    _TMR0_Initialize
                            ___lwdiv
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                6     4      2     178
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     290
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTOR_CTRL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_CTRL                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INPUT_COLLECT                                        4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ALARM_CTRL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _ALARM_CTRL
   _INPUT_COLLECT
   _LED_CTRL
   _MOTOR_CTRL
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_Initialize
   ___lwdiv
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      2E       5       57.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      28       7       50.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      64      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      64      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 25 16:17:43 2020

                       __CFG_CP$ON 0000                   _ES_in_stop_order 0047  
                               PL2 0799                                 PL4 07AE  
                               PL6 07B3                                 PL8 07BB  
                               l85 0594                        __CFG_CPD$ON 0000  
                    _led_time_40ms 002C                                PL10 040A  
                              PL20 07D1                                PL12 0410  
                              PL22 07D6                                PL14 07C1  
                              PL16 07C6                                PL18 07CC  
                              l410 06C8                                l405 069D  
                              l415 06EF                                l520 05C1  
                              l512 05AD                                l600 03E9  
                              l601 03ED                                l514 05C3  
                              l530 077C                                l602 03F1  
                              l610 0409                                l419 06F7  
                              l531 0786                                l516 05B2  
                              l517 05BA                                l534 078A  
                              l607 03F9                                l551 0325  
                              l536 0796                                l560 032D  
                              l544 0313                                l609 03FD  
                              l553 0316                                l570 035A  
                              l546 02FA                                l563 0355  
                              l555 0319                                l388 0605  
                              l572 035D                                l556 0343  
                              l548 02FD                                l397 064C  
                              l581 0385                                l573 0360  
                              l565 0346                                l582 03BB  
                              l574 0363                                l558 032A  
                              l591 03CD                                l567 0349  
                              l584 0396                                l568 037F  
                              l593 03BE                                l577 0391  
                              l809 027C                                l586 0399  
                              l595 03C1                                l587 039C  
                              l579 0382                                l771 04E1  
                              l596 03F6                                l588 039F  
                              l598 03E5                                l758 046A  
                              l785 0554                                l789 056A  
              __size_of_ALARM_CTRL 002D            __size_of_PMD_Initialize 000E  
                     __CFG_BORV$HI 0000                                wreg 0009  
                  _STORED_in_order 0044                       __CFG_LVP$OFF 0000  
                _flag_overload_out 0382                       __CFG_ZCD$OFF 0000  
                             l3001 0300                               l3101 03F4  
                             l3013 031D                               l3005 0305  
                             l3023 0330                               l3113 0401  
                             l3035 034D                               l3027 0335  
                             l3211 0461                               l3061 0389  
                             l3053 036B                               l2341 02E3  
                             l3117 0275                               l2409 0599  
                             l2441 0608                               l3049 0366  
                             l3153 07F7                               l3145 07E8  
                             l3313 052D                               l3305 0517  
                             l3217 0468                               l2523 0648  
                             l2451 0611                               l3075 03A2  
                             l3157 07FB                               l3325 053B  
                             l3229 047B                               l2455 0613  
                             l3087 03C5                               l3079 03A7  
                             l3319 0534                               l3327 053E  
                             l3239 048B                               l2465 061D  
                             l3265 04BB                               l3249 0499  
                             l3187 044E                               l2629 0699  
                             l2469 061F                               l3365 057F  
                             l3277 04D3                               l2815 071C  
                             l3287 04E4                               l2817 071D  
                             l2577 0672                               l2835 072C  
                             l2739 06EB                               l2579 0673  
                             l2837 072D                               l2757 06FD  
                             l2685 06C4                               l2881 0752  
                             l2857 073E                               l2883 0753  
                             l2859 073F                               l2795 070C  
                             l2939 076F                               l2797 070D  
                             l2985 078E                               l2969 0774  
                             l2899 0760                       __CFG_WDTE$ON 0000  
                             _LATA 0016                               _LATB 0017  
                             _LATC 0018                               _LATD 0019  
                             _LATE 001A                               _PMD0 0796  
                             _PMD1 0797                               _PMD2 0798  
                             _PMD3 0799                               _PMD4 079A  
                             _PMD5 079B                               u3895 07F0  
                             _WPUA 1F39                               _WPUB 1F44  
                             _WPUC 1F4F                               _WPUD 1F5A  
                             _WPUE 1F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                               _main 0439  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             fsr1l 0006                               btemp 007E  
                    __CFG_BOREN$ON 0000                   _FLAG_QS_MOTOR_IN 038F  
                             start 0002                      __CFG_CSWEN$ON 0000  
                      ?_MOTOR_CTRL 0073                   __end_of_LED_CTRL 0799  
          __end_of_TMR0_Initialize 02F5     __size_of_OSCILLATOR_Initialize 0009  
    __end_of_OSCILLATOR_Initialize 029C                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0073  
                            _ADCLK 0098                              _ADPCH 009E  
                            _ADREF 009A                              _ADRPT 010D  
                   __CFG_DEBUG$OFF 0000                    __end_of___lwdiv 0800  
                            _OSCEN 0891                              _TMR0H 001D  
                            _TMR0L 001C                              _TRISA 0011  
                            _TRISB 0012                              _TRISC 0013  
                            _TRISD 0014                              _TRISE 0015  
                    __CFG_PWRTE$ON 0000                              _delay 0271  
                            _i_avg 0034                     __pbitbssCOMMON 0380  
             _STORED_in_stop_order 0045                  _FLAG_QS_MOTOR_OUT 038E  
                            status 0003                              wtemp0 007E  
                   __CFG_MCLRE$OFF 0000             __size_of_INPUT_COLLECT 0194  
                  __initialization 0415                       __end_of_main 058D  
                   _out_stop_order 004A                    _ad_value_I_TEST 002A  
                   _FLAG_ALARM_CMD 038B                             ??_main 007A  
                   _FLAG_ALARM_RUN 038A                _flag_overload_in_ES 0381  
                           ?_delay 0073                             _ADCON0 0093  
                           _ADCON1 0094                             _ADCON2 0095  
                           _ADCON3 0096                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                             _ADUTHL 0110  
                           _ANSELA 1F38                             _ANSELB 1F43  
                           _ANSELC 1F4E                             _ANSELD 1F59  
                           _ANSELE 1F64                 __CFG_RSTOSC$HFINT1 0000  
                           _T0CON0 001E                             _T0CON1 001F  
                           _ODCONA 1F3A                             _ODCONB 1F45  
                           _ODCONC 1F50                             _ODCOND 1F5B  
                           _ODCONE 1F66                __size_of_MOTOR_CTRL 0115  
                           _OSCFRQ 0893                       ??_ALARM_CTRL 0073  
                   __CFG_STVREN$ON 0000                          ??___lwdiv 0077  
                 ?_TMR0_Initialize 0073                             delay@a 0075  
                           delay@b 0077                             delay@x 0073  
                  _ADCC_Initialize 02CC                     _PMD_Initialize 02BE  
                     __pdataCOMMON 007C                 __end_of_ALARM_CTRL 05CE  
                    _INPUT_COLLECT 05CE                      _in_stop_order 0048  
                _overload_time_out 0026  __size_of_ADCC_GetSingleConversion 0014  
        ?_ADCC_GetSingleConversion 0073                  _SYSTEM_Initialize 028A  
                        ?_LED_CTRL 0073            __end_of__initialization 0437  
               ?_SYSTEM_Initialize 0073                     _FLAG_STORED_IN 0389  
                   __pcstackCOMMON 0073                       __pidataBANK0 0269  
              ??_SYSTEM_Initialize 0073                      __end_of_delay 028A  
                       __end_ofPL2 07AE                         __end_ofPL4 07B3  
                       __end_ofPL6 07BB                         __end_ofPL8 07C1  
           __end_of_PMD_Initialize 02CC                     ?_INPUT_COLLECT 0073  
                          ??_delay 0075          __end_of_SYSTEM_Initialize 0293  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
                       ??_LED_CTRL 0073               _flag_overload_out_ES 0380  
                       __pmaintext 0439                    __CFG_PPS1WAY$ON 0000  
          __end_of_ADCC_Initialize 02E3            _FLAG_ES_MOTOR_IN_enable 0386  
          _FLAG_QS_MOTOR_IN_enable 0387                       ??_MOTOR_CTRL 0073  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
         __CFG_SCANE$not_available 0000                    ?_PMD_Initialize 0073  
                          _CMD_ERR 0036                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
               __end_of_MOTOR_CTRL 040A                            ___lwdiv 07DB  
                          __ptext1 0271                            __ptext2 07DB  
                          __ptext3 028A                            __ptext4 02E3  
                          __ptext5 02BE                            __ptext6 029C  
                          __ptext7 0293                            __ptext8 02CC  
                          __ptext9 02F5                    ??_INPUT_COLLECT 0073  
              _ad_value_I_TEST_avg 0020              _OSCILLATOR_Initialize 0293  
         ??_PIN_MANAGER_Initialize 0073         __size_of_SYSTEM_Initialize 0009  
                          clrloop0 025E               end_of_initialization 0437  
                          init_ram 0263                            initloop 0264  
                       _time_2ms_1 0043                         _time_2ms_2 0042  
                       _time_2ms_3 0041                         _time_2ms_4 0040  
                       _time_2ms_5 003F                         _time_2ms_6 003E  
                       _time_2ms_7 003D                         _time_2ms_8 003C  
                       _time_2ms_9 003B                   ?_ADCC_Initialize 0073  
 __end_of_ADCC_GetSingleConversion 05A1              __CFG_WDTCPS$WDTCPS_31 0000  
                        _PORTAbits 000C                          _PORTBbits 000D  
                        _PORTEbits 0010               __CFG_WDTCCS$HFINTOSC 0000  
                 __CFG_FEXTOSC$OFF 0000                  __size_of_LED_CTRL 0037  
             _timer0ReloadVal16bit 004C                      __pidataCOMMON 0000  
           ?_OSCILLATOR_Initialize 0073                        __end_ofPL10 0410  
                      __end_ofPL20 07D6                        __end_ofPL12 0415  
                      __end_ofPL22 07DB                        __end_ofPL14 07C6  
                      __end_ofPL16 07CC                        __end_ofPL18 07D1  
              start_initialization 0415           __size_of_TMR0_Initialize 0012  
  __size_of_PIN_MANAGER_Initialize 0022                   __CFG_LPBOREN$OFF 0000  
                 ??_PMD_Initialize 0073                        __pdataBANK0 0044  
                 _FLAG_ALARM_OVER1 0392                   _FLAG_ALARM_OVER2 0391  
         _ADCC_GetSingleConversion 058D                          ___latbits 0004  
                        __pnvBANK0 004C                   ___lwdiv@dividend 0075  
           _PIN_MANAGER_Initialize 029C    ADCC_GetSingleConversion@channel 0076  
                         ?___lwdiv 0073                  _ES_out_stop_order 0046  
                 ___lwdiv@quotient 0077                     __size_of_delay 0019  
                _FLAG_ES_MOTOR_OUT 038C                           _LED_CTRL 0762  
                ??_TMR0_Initialize 0073                           _LATAbits 0016  
                         _LATBbits 0017                           _LATCbits 0018  
                         _LATDbits 0019                          clear_ram0 025D  
         _FLAG_ES_MOTOR_OUT_enable 0385                           _PIR0bits 070C  
         _FLAG_QS_MOTOR_OUT_enable 0388                          _test_time 0030  
                        _out_order 004B                         _ADCON0bits 0093  
            __end_of_INPUT_COLLECT 0762                          _sum_value 0028  
                       _ALARM_CTRL 05A1                      _motor_do_time 0035  
          ??_OSCILLATOR_Initialize 0073                   __size_of___lwdiv 0025  
                  _time_2ms_STORED 0038                           _ad_value 00A0  
                       _FLAG_ALARM 0393           __size_of_ADCC_Initialize 0017  
                  ___lwdiv@divisor 0073                    ___lwdiv@counter 0079  
                         __ptext10 0762                           __ptext11 05CE  
                         __ptext12 05A1                           __ptext13 058D  
                         _in_order 0049                 _FLAG_OVER_TIME_30S 0384  
                    __size_of_main 0154                   _FLAG_ES_MOTOR_IN 038D  
             __CFG_WDTCWS$WDTCWS_7 0000               _overload_time_out_ES 0024  
       ??_ADCC_GetSingleConversion 0076                   _FLAG_RESET_ALARM 0390  
                     _motor_run_1s 002E                  _FLAG_OVER_CURRENT 0383  
          ?_PIN_MANAGER_Initialize 0073                  __CFG_CLKOUTEN$OFF 0000  
                      ?_ALARM_CTRL 0073                        _time_2ms_10 003A  
                      _time_2ms_11 0039                        _time_2ms_12 0033  
                      _time_2ms_21 0037                        _time_2ms_13 0032  
                     _ES_out_order 007C                _overload_time_in_ES 0022  
                      _ES_in_order 007D                         _MOTOR_CTRL 02F5  
                  _TMR0_Initialize 02E3     __end_of_PIN_MANAGER_Initialize 02BE  
                ??_ADCC_Initialize 0073  
